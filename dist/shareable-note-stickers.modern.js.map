{"version":3,"file":"shareable-note-stickers.modern.js","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Outline - e.g., for screenshot areas ****/\n\n  registerBehavior('basic Views', 'Outline', 'Outline', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      return html`<div class=\"SNS Outline\"/>`\n    }\n  },`\n/**** Outline ****/\n\n  .SNS.Outline {\n    outline:dotted 1px blue;\n    outline-offset:2px;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'/icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}\n      style=\"accent-color:${my.ForegroundColor || 'dodgerblue'}\"/>`\n    }\n  },`\n/**** Progressbar ****/\n\n  .SNS.Sticker > .SNS.Progressbar {\n    -webkit-appearance:none; -moz-appearance:none; appearance:none;\n    background-color:#EEEEEE;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-bar {\n    background-color:#EEEEEE;\n    border:solid 1px #E0E0E0; border-radius:2px;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-value,\n  .SNS.Sticker > .SNS.Progressbar::-moz-progress-bar {\n    background-color:dodgerblue;\n    border:none; border-radius:2px;\n  }\n  `)\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'/icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'/icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\n  useBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\n  useBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView', {\n    Geometry:{ x:20,y:20, Width:120,Height:120 },\n    activeScript:`\n  useBehavior('QRCodeView')\n//my.Value           = '...'\n//my.ForegroundColor = 'black'\n//my.BackgroundColor = 'white'\n//my.CorrectionLevel = 'low'|'medium'|'quartile'|'high'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onMount(() => me.rerender())\n\n    const CorrectionLevelSet:Indexable = {\n      low:     (QRCode as Indexable).CorrectLevel.L,\n      medium:  (QRCode as Indexable).CorrectLevel.M,\n      quartile:(QRCode as Indexable).CorrectLevel.Q,\n      high:    (QRCode as Indexable).CorrectLevel.H\n    }\n\n    onRender(() => {\n      if (my.View != null) {\n        my.View.innerHTML = ''\n\n        const CorrectionLevel = (\n// @ts-ignore TS7053 allow indexing of \"CorrectionLevelSet\"\n          CorrectionLevelSet[''+my.CorrectionLevel] || QRCode.CorrectLevel.L\n        )\n        const Value = String(my.Value || 'https://github.com/rozek/shareable-note-stickers')\n        const Size  = Math.min(my.Width,my.Height)\n\n// @ts-ignore TS2351 allow construction of \"QRCode\"\n        new QRCode(my.View,{\n          text:Value,\n          width:Size, height:Size,\n          colorDark: my.ForegroundColor || 'black',\n          colorLight:my.BackgroundColor || 'white',\n          correctLevel:CorrectionLevel\n        })\n      }\n      return ''\n    })\n  })\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","SNS_Changes","createBoard","Project","BoardId","Id","Board","BoardWithId","console","error","configureFolder","FolderId","Property","Folder","FolderWithId","SNS_ProjectPropertySet","SNS_BoardPropertySet","Signal","warn","attachBoard","Index","expectOrdinal","newFolder","containsFolder","oldFolder","setTimeout","sanitizeBoardList","_attachBoardAt","detachBoard","_detachBoardAt","destroyBoard","BoardCount","StickerCount","_Project","undefined","unregisterFolder","createSticker","StickerId","Sticker","StickerWithId","configureSticker","SNS_StickerPropertySet","attachSticker","newBoard","oldBoard","sanitizeStickerList","_attachStickerAt","detachSticker","_detachStickerAt","destroySticker","unregisterSticker","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","add","StickerSet","StickerList","StickerFromList","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","ValueIsInteger","acceptableOptionalInteger","acceptableIntegerInRange","ValueIsIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","ValueIsOrdinal","acceptableOptionalOrdinal","acceptableString","ValueIsString","acceptableOptionalString","acceptableNonEmptyString","trim","acceptableOptionalNonEmptyString","acceptableStringMatching","Pattern","acceptableOptionalStringMatching","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableOptionalText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableFunction","ValueIsFunction","acceptableOptionalFunction","acceptableList","ValueIsList","acceptableOptionalList","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptableEMailAddress","ValueIsEMailAddress","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","onClick","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","FolderRegistry","get","StickerRegistryForProject","StickerRegistry","removeIdsFrom","Serialization","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","groupedBehaviorEntryList","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList","disabled","useBehavior","_this2","onRender","bind","onMount","onUnmount","expectFunction","TemplateOfBehavior","Geometry","me","my","reactively","_templateObject3","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_my$Geometry","_templateObject5","_templateObject6","_templateObject7","CSSStyle","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","__html","_templateObject13","DataURL","btoa","_templateObject14","_templateObject15","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject16","Enabling","_onClick","Color","_templateObject17","_templateObject18","_templateObject19","consumingEvent","_templateObject20","LineHeight","checked","indeterminate","_templateObject21","_templateObject22","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject23","_templateObject24","HashmarkPattern","HashmarkMatcher","onInput","_onInput","onBlur","rerender","ValueToShow","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject25","map","Item","_templateObject26","_templateObject27","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","_templateObject43","TimeRegExp","TimeMatcher","_templateObject44","_templateObject45","_templateObject46","DateTimeRegExp","DateTimeMatcher","_templateObject47","_templateObject48","_templateObject49","DateRegExp","DateMatcher","_templateObject50","_templateObject51","_templateObject52","WeekRegExp","WeekMatcher","_templateObject53","_templateObject54","_templateObject55","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject56","_templateObject57","_templateObject58","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject59","_templateObject60","_templateObject61","Icon","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","Options","_templateObject70","Option","OptionValue","OptionLabel","test","_templateObject71","_templateObject72","_templateObject73","LineWrapping","_templateObject74","_my$Geometry2","_templateObject75","_my$Geometry3","_templateObject76","_my$Geometry4","_templateObject77","_my$Geometry5","_templateObject78","_my$Geometry6","_templateObject79","_my$Geometry7","_templateObject80","_my$Geometry8","_templateObject81","_my$Geometry9","_templateObject82","_my$Geometry10","_templateObject83","_my$Geometry11","_templateObject84","_my$Geometry12","_templateObject85","_my$Geometry13","_templateObject86","_my$Geometry14","_templateObject87","_my$Geometry15","_templateObject88","_my$Geometry16","_templateObject89","_my$Geometry17","_templateObject90","Canvas","unobserved","Placement","drawLine","x0","y0","x1","y1","Text","Context","beginPath","moveTo","lineTo","stroke","fillText","width","height","getContext","clearRect","strokeStyle","lineWidth","textAlign","textBaseline","CorrectionLevelSet","low","QRCode","CorrectLevel","L","medium","M","quartile","Q","high","H","CorrectionLevel","String","Size","text","colorDark","colorLight","correctLevel","propagateEvent","_Id","_Name","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","_createClass","activateScript","_this3","compiledScript","Function","Cause","newRenderer","Rendering","newCallback","_this4","_this5","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","IndexOfBoard","BoardOrNameOrIndex","expectValue","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","clear","hasError","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","_SNS_Folder2","_this13","_onChange","_onRender","_onError","_proto3","BoardAtIndexPath","expectListSatisfying","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","_this15","onError","_this16","deserializedFrom","_SNS_Folder3","_this17","_StickerList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickersToShift","newHandler","_serializeStickersInto","_this19","StickerSerialization","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","Visibility","hide","enable","disable","maxWidth","maxHeight","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newVisibility","newEnabling","SNS_ConnectionStates","SNS_Adapter","window","SNS","log","dispatchEvent","CustomEvent","detail"],"mappings":"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"}
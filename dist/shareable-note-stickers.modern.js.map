{"version":3,"file":"shareable-note-stickers.modern.js","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer, ObjectIsEmpty,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n  import * as JIL from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderingCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** Search-related Types ****/\n\n  export const SNS_MatchModes = ['equality','containment','match']\n  export type  SNS_MatchMode  = typeof SNS_MatchModes[number]\n\n  export const SNS_matchableProperties  = ['Name','Value','Script']\n  export type  SNS_matchableProperty    = typeof SNS_matchableProperties[number]\n  export type  SNS_matchablePropertySet = { [Key:string]:boolean }\n\n  export type SNS_ErrorRelevance = null|boolean\n\n  export type SNS_VisualMatch = {\n    Visual:SNS_Visual, Property?:SNS_matchableProperty,\n    StartIndex?:SNS_Ordinal, EndIndex?:SNS_Ordinal\n  }\n\n/**** Board-specific Dialogs ****/\n\n  export type SNS_Dialog = {\n    Id:SNS_Id, Name:SNS_Name, Title:SNS_Textline, isResizable:boolean,\n    x:SNS_Location, y:SNS_Location, Width:SNS_Dimension, Height:SNS_Dimension,\n    minWidth:number, maxWidth?:number, minHeight:number, maxHeight?:number,\n    Visibility:boolean, Renderer:Function, onClose?:Function\n  }\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS brokenSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, SNS,JIL, this.Project.Application, html,reactively,\n      onRender,onMount,onUnmount, // onClick,onInput,onDrop\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Selectability:true,\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Selectability = true                       // for backwards compatibility\n\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Outline - e.g., for screenshot areas ****/\n\n  registerBehavior('basic Views', 'Outline', 'Outline', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      return html`<div class=\"SNS Outline\"/>`\n    }\n  },`\n/**** Outline ****/\n\n  .SNS.Outline {\n    outline:dotted 1px blue;\n    outline-offset:2px;\n    pointer-events:none;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n    top:4px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n    top:4px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\nuseBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\nuseBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\nuseBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<img class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\nuseBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'./icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\nuseBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\nuseBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\nuseBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}\n      style=\"accent-color:${my.ForegroundColor || 'dodgerblue'}\"/>`\n    }\n  },`\n/**** Progressbar ****/\n\n  .SNS.Sticker > .SNS.Progressbar {\n    -webkit-appearance:none; -moz-appearance:none; appearance:none;\n    background-color:#EEEEEE;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-bar {\n    background-color:#EEEEEE;\n    border:solid 1px #E0E0E0; border-radius:2px;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-value,\n  .SNS.Sticker > .SNS.Progressbar::-moz-progress-bar {\n    background-color:dodgerblue;\n    border:none; border-radius:2px;\n  }\n  `)\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'./icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\nuseBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['value:label',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'./icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableText(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:2px 2px 2px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable, Application:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export abstract class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** Application ****/\n\n    public get Application ():Indexable  { return this._Project.Application }\n    public set Application (_:Indexable) { throwReadOnlyError('Application') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** memoized ****/\n\n// @ts-ignore TS2564 allow \"_memoized\" to be assigned upon first use\n    protected _memoized:Indexable\n\n    public get memoized ():Indexable {\n      if (this._memoized == null) {\n        this._memoized = {}\n      }\n      return this._memoized\n    }\n    public set memoized (_:Indexable) { throwReadOnlyError('memoized') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, SNS,JIL, Application, html,reactively, ' +\n            'onRender,onMount,onUnmount, onClick,onInput,onDrop, ' +\n            'useBehavior', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, SNS,JIL, this.Project.Application, html,reactively,\n            onRender,onMount,onUnmount, onClick,onInput,onDrop,\n            useBehavior.bind(this)\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** ownMatchesFor ****/\n\n    public ownMatchesFor (\n      Mode:SNS_MatchMode, Template:string|RegExp, CaseSensitivity:boolean,\n      PropertySet:SNS_matchablePropertySet, ErrorRelevance:SNS_ErrorRelevance\n    ):SNS_VisualMatch[] {\n      if ((ErrorRelevance != null) && (this.hasError !== ErrorRelevance)) {\n        return []                        // error is relevant but does not match\n      }\n\n      if (ObjectIsEmpty(PropertySet)) {\n        return [{ Visual:this }]\n      }\n\n      const Matches:SNS_VisualMatch[] = []\n        if (PropertySet['Name'] == true) {\n          this._pushMatch('Name',this.Name, Mode,Template,CaseSensitivity, Matches)\n        }\n\n        if (PropertySet['Value'] == true) {\n          this._pushMatch('Value',this.editableValue, Mode,Template,CaseSensitivity, Matches)\n        }\n\n        if (PropertySet['Script'] == true) {\n          this._pushMatch('Script',this.Script, Mode,Template,CaseSensitivity, Matches)\n        }\n      return Matches\n    }\n\n  /**** allMatchesFor ****/\n\n    public abstract allMatchesFor (\n      Mode:SNS_MatchMode, Template:string|RegExp, CaseSensitivity:boolean,\n      PropertySet:SNS_matchablePropertySet, ErrorRelevance:SNS_ErrorRelevance\n    ):SNS_VisualMatch[]\n\n  /**** _pushMatch ****/\n\n    protected _pushMatch (\n      Property:SNS_matchableProperty, Value:any,\n      Mode:SNS_MatchMode, Template:string|RegExp, CaseSensitivity:boolean,\n      Result:SNS_VisualMatch[]\n    ):void {\n      if (Value == null) { return }\n\n      if (CaseSensitivity == false) {\n        Value = Value.toLowerCase()\n      }\n\n      switch (Mode) {\n        case 'equality':\n          if (Value === Template) {\n            Result.push({\n              Visual:this, Property, StartIndex:0,EndIndex:(Template as string).length\n            })\n          }\n          break\n        case 'containment':\n          const StartIndex = Value.indexOf(Template as string)\n          if (StartIndex >= 0) {\n            Result.push({\n              Visual:this, Property, StartIndex,EndIndex:StartIndex+(Template as string).length\n            })\n          }\n          break\n        case 'match':\n          const Match = (Template as RegExp).exec(Value)\n          if (Match != null) {\n            Result.push({\n              Visual:this, Property,\n              StartIndex:Match.index,EndIndex:Match.index+Match[0].length\n            })\n          }\n      }\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'memoized','Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        /*'memoized',*/'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n\n      if (ValueIsPlainObject(Serialization.memoized)) {\n        try {\n          Object.assign(this.memoized,Serialization.memoized)\n        } catch (Signal:any) {\n          console.warn(\n            'DeserializationError:invalid value for property \"memoized\"'\n          )\n        }\n      }\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export abstract class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** allMatchesFor ****/\n\n    public allMatchesFor (\n      Mode:SNS_MatchMode, Template:string|RegExp, CaseSensitivity:boolean,\n      PropertySet:SNS_matchablePropertySet, ErrorRelevance:SNS_ErrorRelevance\n    ):SNS_VisualMatch[] {\n      const Matches = this.ownMatchesFor(\n        Mode, Template, CaseSensitivity, PropertySet, ErrorRelevance\n      )\n        this._BoardList.forEach((Board:SNS_Board) => {\n          const innerMatches = Board.allMatchesFor(\n            Mode, Template, CaseSensitivity, PropertySet, ErrorRelevance\n          )\n          if (innerMatches.length > 0) { Matches.push(...innerMatches) }\n        })\n      return Matches\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRendering ****/\n\n    protected _onRendering:SNS_onRenderingCallback[] = []\n\n    public onRendering (Callback:SNS_onRenderingCallback):void {\n      expectFunction('\"onRendering\" callback',Callback)\n      this._onRendering.push(Callback)\n    }\n\n  /**** rerender - warning: semantics differs from that of other visuals ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRendering.forEach(\n        (Callback:SNS_onRenderingCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Application ****/\n\n    private _Application:Indexable = {}\n\n    public get Application ():Indexable  { return { ...this._Application } }\n    public set Application (newInterface:Indexable) {\n      if (! ObjectIsEmpty(this._Application)) throwError(\n        'AlreadySet: the \"Application\" interface has already been set'\n      )\n\n      expectSerializable('application interface',newInterface)\n      if (ObjectIsEmpty(newInterface)) throwError(\n        'InvalidArgument: the given application interface is empty'\n      )\n\n      this._Application = { ...newInterface }\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** allMatchesFor ****/\n\n    public allMatchesFor (\n      Mode:SNS_MatchMode, Template:string|RegExp, CaseSensitivity:boolean,\n      PropertySet:SNS_matchablePropertySet, ErrorRelevance:SNS_ErrorRelevance\n    ):SNS_VisualMatch[] {\n      const Matches = this.ownMatchesFor(\n        Mode, Template, CaseSensitivity, PropertySet, ErrorRelevance\n      )\n        this._BoardList.forEach((Board:SNS_Board) => {\n          const innerMatches = Board.allMatchesFor(\n            Mode, Template, CaseSensitivity, PropertySet, ErrorRelevance\n          )\n          if (innerMatches.length > 0) { Matches.push(...innerMatches) }\n        })\n\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          const innerMatches = Sticker.allMatchesFor(\n            Mode, Template, CaseSensitivity, PropertySet, ErrorRelevance\n          )\n          if (innerMatches.length > 0) { Matches.push(...innerMatches) }\n        })\n      return Matches\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** DialogList ****/\n\n    private _DialogList:SNS_Dialog[] = []\n\n    public get DialogList ():SNS_Dialog[] {\n      return this._DialogList.map((Dialog:SNS_Dialog) => ({ ...Dialog }))\n    }\n    public set DialogList (_:SNS_Dialog[]) { throwReadOnlyError('_DialogList') }\n\n  /**** IndexOfDialog ****/\n\n    public IndexOfDialog (DialogName:SNS_Name):number {\n      expectName('dialog name',DialogName)\n      DialogName = DialogName.trim().toLowerCase()\n        const DialogList = this._DialogList\n        for (let i = 0, l = DialogList.length; i < l; i++) {\n          const Dialog = DialogList[i]\n          if (Dialog.Name.trim().toLowerCase() === DialogName) { return i }\n        }\n      return -1\n    }\n\n  /**** openDialog ****/\n\n    public openDialog (OptionSet:Indexable):void {\n      let {\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Renderer, onClose\n      } = OptionSet\n\n      expectName                 ('dialog name',Name)\n      allowTextline             ('dialog title',Title)\n      allowBoolean       ('dialog resizability',isResizable)\n      allowLocation      ('dialog x coordinate',x)\n      allowLocation      ('dialog y coordinate',y)\n      allowDimension            ('dialog width',Width)\n      allowDimension           ('dialog height',Height)\n      allowDimension    ('minimal dialog width',minWidth)\n      allowDimension    ('maximal dialog width',maxWidth)\n      allowDimension   ('minimal dialog height',minHeight)\n      allowDimension   ('maximal dialog height',maxHeight)\n      expectFunction ('dialog content renderer',Renderer)\n      allowFunction('dialog \"onClose\" callback',onClose)\n\n      const DialogIndex = this.IndexOfDialog(Name)\n      if (DialogIndex < 0) {\n        if (Title       == null) { Title = Name }\n        if (isResizable == null) { isResizable = false }\n        if (Width       == null) { Width  = 320 }\n        if (Height      == null) { Height = 240 }\n        if (x           == null) { x = -Number.MAX_SAFE_INTEGER }   // to center\n        if (y           == null) { y = -Number.MAX_SAFE_INTEGER }        // dto.\n        if (minWidth    == null) { minWidth  = 40 }\n        if (maxWidth    != null) { maxWidth  = Math.max(minWidth,maxWidth) }\n        if (minHeight   == null) { minHeight = 30 }\n        if (maxHeight   != null) { maxHeight = Math.max(minHeight,maxHeight) }\n\n        this._DialogList.push({\n          Id:newId(), Name, Title, isResizable, x,y, Width,Height,\n          minWidth,maxWidth, minHeight,maxHeight,\n          Visibility:true, Renderer, onClose\n        })\n      } else {\n        const Dialog:Indexable = this._DialogList[DialogIndex]\n          ;(`\n            Name Title isResizable x y Width Height\n            minWidth maxWidth minHeight maxHeight Renderer onClose\n          `).trim().split(/\\s+/).forEach((Property:string) => {\n            if (OptionSet[Property] != null) { Dialog[Property] = OptionSet[Property] }\n          })\n        Dialog.Visibility = true\n\n        this.bringDialogToFront(Name)\n      }\n      this.rerender()\n    }\n\n  /**** DialogIsOpen ****/\n\n    public DialogIsOpen (DialogName:SNS_Name):boolean {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      return (DialogIndex >= 0) && (this._DialogList[DialogIndex].Visibility == true)\n    }\n\n  /**** openTextViewDialog ****/\n\n    public openTextViewDialog (OptionSet:Indexable):void {\n      let {\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Content,isFormatted, onClose\n      } = OptionSet\n\n      Content     = acceptableText(Content,'')\n      isFormatted = acceptableBoolean(isFormatted,false)\n\n      function Renderer () {\n        return html`<textarea class=\"SNS Content\" style=\"\n          resize:none; padding:4px;\n          ${isFormatted\n            ? 'white-space:pre;      overflow-wrap:normal'\n            : 'white-space:pre-wrap; overflow-wrap:break-word'\n          }\n        \" value=${Content}/>`\n      }\n\n      this.openDialog({\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Renderer, onClose\n      })\n    }\n\n  /**** openHTMLViewDialog ****/\n\n    public openHTMLViewDialog (OptionSet:Indexable):void {\n      let {\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Content, onClose\n      } = OptionSet\n\n      Content = acceptableText(Content,'')\n\n      function Renderer () {\n        return html`<div class=\"SNS Content\" style=\"padding:4px\"\n          dangerouslySetInnerHTML=${{__html:acceptableText(Content,'')}}\n        />`\n      }\n\n      this.openDialog({\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Renderer, onClose\n      })\n    }\n\n  /**** openImageViewDialog ****/\n\n    public openImageViewDialog (OptionSet:Indexable):void {\n      let {\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Content, onClose\n      } = OptionSet\n\n      Content = acceptableURL(Content,'')\n\n      function Renderer () {\n        return html`<img class=\"SNS Content\" style=\"\n          padding:4px;\n          object-fit:contain; object-position:center;\n        \" src=${Content}/>`\n      }\n\n      this.openDialog({\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Renderer, onClose\n      })\n    }\n\n  /**** openSVGViewDialog ****/\n\n    public openSVGViewDialog (OptionSet:Indexable):void {\n      let {\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Content, onClose\n      } = OptionSet\n\n      Content = acceptableText(Content,'')\n\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(Content)\n\n      function Renderer () {\n        return html`<img class=\"SNS Content\" style=\"\n          padding:4px; object-fit:contain; object-position:center;\n        \" src=${DataURL}/>`\n      }\n\n      this.openDialog({\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Renderer, onClose\n      })\n    }\n\n  /**** openWebViewDialog ****/\n\n    public openWebViewDialog (OptionSet:Indexable):void {\n      let {\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Content, onClose\n      } = OptionSet\n\n      Content = acceptableURL(Content,'')\n\n      function Renderer () {\n        return html`<iframe class=\"SNS Content\" style=\"padding:4px\"\n          src=${Content}\n        />`\n      }\n\n      this.openDialog({\n        Name, Title, isResizable, x, y, Width, Height,\n        minWidth, maxWidth, minHeight, maxHeight,\n        Renderer, onClose\n      })\n    }\n\n  /**** titleDialogAs ****/\n\n    public titleDialogAs (DialogName:SNS_Name, newTitle:SNS_Textline):void {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      if (DialogIndex < 0) throwError(\n        'NoSuchDialog: no open dialog named ' + quoted(DialogName) + ' found'\n      )\n      const Dialog = this._DialogList[DialogIndex] as SNS_Dialog\n\n      allowTextline('dialog title',newTitle)\n      if (newTitle == null) { newTitle = Dialog.Title }\n\n      if (Dialog.Title !== newTitle) {\n        Dialog.Title = newTitle\n        this.rerender()\n      }\n    }\n\n  /**** positionDialogAt ****/\n\n    public positionDialogAt (\n      DialogName:SNS_Name, newX:SNS_Location,newY:SNS_Location\n    ):void {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      if (DialogIndex < 0) throwError(\n        'NoSuchDialog: no open dialog named ' + quoted(DialogName) + ' found'\n      )\n      const Dialog = this._DialogList[DialogIndex] as SNS_Dialog\n\n      allowLocation('dialog x coordinate',newX)\n      allowLocation('dialog y coordinate',newY)\n\n      if (newX == null) { newX = Dialog.x }\n      if (newY == null) { newY = Dialog.y }\n\n      if ((Dialog.x !== newX) || (Dialog.y !== newY)) {\n        Dialog.x = newX; Dialog.y = newY\n        this.rerender()\n      }\n    }\n\n  /**** sizeDialogTo ****/\n\n    public sizeDialogTo (\n      DialogName:SNS_Name, newWidth:SNS_Dimension,newHeight:SNS_Dimension\n    ):void {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      if (DialogIndex < 0) throwError(\n        'NoSuchDialog: no open dialog named ' + quoted(DialogName) + ' found'\n      )\n      const Dialog = this._DialogList[DialogIndex] as SNS_Dialog\n\n      allowDimension ('dialog width',newWidth)\n      allowDimension('dialog height',newHeight)\n\n      if (newWidth  == null) { newWidth  = Dialog.Width }\n      if (newHeight == null) { newHeight = Dialog.Height }\n\n      if ((Dialog.Width !== newWidth) || (Dialog.Height !== newHeight)) {\n        Dialog.Width = newWidth; Dialog.Height = newHeight\n        this.rerender()\n      }\n    }\n\n  /**** DialogIsFrontmost ****/\n\n    public DialogIsFrontmost (DialogName:SNS_Name):boolean {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      return (DialogIndex === this._DialogList.length-1)\n    }\n\n  /**** bringDialogToFront ****/\n\n    public bringDialogToFront (DialogName:SNS_Name):void {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      if (DialogIndex < 0) throwError(\n        'NoSuchDialog: no open dialog named ' + quoted(DialogName) + ' found'\n      )\n\n      if (DialogIndex < this._DialogList.length-1) {\n        const DialogList = this._DialogList               // reference, not copy\n\n        const Dialog = DialogList[DialogIndex]\n        DialogList.splice(DialogIndex,1)\n        DialogList.push(Dialog)\n\n        this.rerender()\n      }\n    }\n\n  /**** closeDialog ****/\n\n    public closeDialog (DialogName:SNS_Name):void {\n      const DialogIndex = this.IndexOfDialog(DialogName)\n      if (DialogIndex < 0) { return }\n\n      this._DialogList[DialogIndex].Visibility = false\n      this.rerender()\n    }\n\n  /**** closeAllDialogs ****/\n\n    public closeAllDialogs ():void {\n      this._DialogList.forEach((Dialog:SNS_Dialog) => Dialog.Visibility = false)\n      this.rerender()\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name',\n      'Lock','Selectability','Visibility','Enabling',\n      'minWidth','maxWidth','minHeight','maxHeight',\n      'BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n    ].forEach((Property:string) => SNS_StickerPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundColor ****/\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return this._BackgroundColor\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('sticker background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('sticker background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Lock ****/\n\n    protected _Selectability:boolean = false\n\n    public get Selectability ():boolean { return this._Selectability }\n    public set Selectability (newSelectability:boolean) {\n      expectBoolean('sticker selectability',newSelectability)\n      if (this._Selectability !== newSelectability) {\n        this._Selectability = newSelectability\n\n        this._reportChange('configure',this,'Selectability',newSelectability)\n        this.rerender()\n      }\n    }\n\n  /**** isSelectable ****/\n\n    public get isSelectable ():boolean                 { return this._Selectability }\n    public set isSelectable (newSelectability:boolean) { this.Selectability = newSelectability }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** allMatchesFor ****/\n\n    public allMatchesFor (\n      Mode:SNS_MatchMode, Template:string|RegExp, CaseSensitivity:boolean,\n      PropertySet:SNS_matchablePropertySet, ErrorRelevance:SNS_ErrorRelevance\n    ):SNS_VisualMatch[] {\n      return this.ownMatchesFor(\n        Mode, Template, CaseSensitivity, PropertySet, ErrorRelevance\n      )\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isSelectable) { Serialization.Selectability = true }\n      if (this.isLocked)     { Serialization.Lock          = true }\n      if (! this.isVisible)  { Serialization.Visibility    = false }\n      if (! this.isEnabled)  { Serialization.Enabling      = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Selectability === true)  { this.Selectability = true }\n      if (Serialization.Lock          === true)  { this.Lock          = true }\n      if (Serialization.Visibility    === false) { this.Visibility    = false }\n      if (Serialization.Enabling      === false) { this.Enabling      = false }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  const SNS:Indexable = window.SNS = {\n    SNS_FontStyles, SNS_ErrorTypes,\n    throwError, throwReadOnlyError,\n    ValueIsVisual, allowVisual, allowedVisual, expectVisual, expectedVisual,\n    ValueIsFolder, allowFolder, allowedFolder, expectFolder, expectedFolder,\n    ValueIsProject, allowProject, allowedProject, expectProject, expectedProject,\n    ValueIsBoard, allowBoard, allowedBoard, expectBoard, expectedBoard,\n    ValueIsSticker, allowSticker, allowedSticker, expectSticker, expectedSticker,\n    ValueIsId, allowId, allowedId, expectId, expectedId,\n    ValueIsIdentifier, allowIdentifier, allowedIdentifier, expectIdentifier, expectedIdentifier,\n    ValueIsName, allowName, allowedName, expectName, expectedName,\n    ValueIsLocation, allowLocation, allowedLocation, expectLocation, expectedLocation,\n    ValueIsDimension, allowDimension, allowedDimension, expectDimension, expectedDimension,\n    ValueIsPosition, allowPosition, allowedPosition, expectPosition, expectedPosition,\n    ValueIsSize, allowSize, allowedSize, expectSize, expectedSize,\n    ValueIsGeometry, allowGeometry, allowedGeometry, expectGeometry, expectedGeometry,\n    ValueIsError, allowError, allowedError, expectError, expectedError,\n    ValueIsSerializable, allowSerializable, allowedSerializable, expectSerializable, expectedSerializable,\n    acceptableBoolean, acceptableOptionalBoolean,\n    acceptableNumber, acceptableOptionalNumber,\n    acceptableNumberInRange, acceptableOptionalNumberInRange,\n    acceptableInteger, acceptableOptionalInteger,\n    acceptableIntegerInRange, acceptableOptionalIntegerInRange,\n    acceptableOrdinal, acceptableOptionalOrdinal,\n    acceptableString, acceptableOptionalString,\n    acceptableNonEmptyString, acceptableOptionalNonEmptyString,\n    acceptableStringMatching, acceptableOptionalStringMatching,\n    acceptableText, acceptableOptionalText,\n    acceptableTextline, acceptableOptionalTextline,\n    acceptableFunction, acceptableOptionalFunction,\n    acceptableList, acceptableOptionalList,\n    acceptableListSatisfying, acceptableOptionalListSatisfying,\n    acceptableColor, acceptableOptionalColor,\n    acceptableEMailAddress, acceptablePhoneNumber, acceptableURL,\n    newId,\n    CSSStyleOfVisual,\n    SNS_ConnectionStates\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","SNS_MatchModes","SNS_matchableProperties","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","SNS_Changes","createBoard","Project","BoardId","Id","Board","BoardWithId","console","error","configureFolder","FolderId","Property","Folder","FolderWithId","SNS_ProjectPropertySet","SNS_BoardPropertySet","Signal","warn","attachBoard","Index","expectOrdinal","newFolder","containsFolder","oldFolder","setTimeout","sanitizeBoardList","_attachBoardAt","detachBoard","_detachBoardAt","destroyBoard","BoardCount","StickerCount","_Project","undefined","unregisterFolder","createSticker","StickerId","Sticker","StickerWithId","configureSticker","SNS_StickerPropertySet","attachSticker","newBoard","oldBoard","sanitizeStickerList","_attachStickerAt","detachSticker","_detachStickerAt","destroySticker","unregisterSticker","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","add","StickerSet","StickerList","StickerFromList","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","ValueIsInteger","acceptableOptionalInteger","acceptableIntegerInRange","ValueIsIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","ValueIsOrdinal","acceptableOptionalOrdinal","acceptableString","ValueIsString","acceptableOptionalString","acceptableNonEmptyString","trim","acceptableOptionalNonEmptyString","acceptableStringMatching","Pattern","acceptableOptionalStringMatching","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableOptionalText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableFunction","ValueIsFunction","acceptableOptionalFunction","acceptableList","ValueIsList","acceptableOptionalList","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptableEMailAddress","ValueIsEMailAddress","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","onClick","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","FolderRegistry","get","StickerRegistryForProject","StickerRegistry","removeIdsFrom","Serialization","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","groupedBehaviorEntryList","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList","disabled","useBehavior","_this2","onRender","bind","onMount","onUnmount","SNS","JIL","Application","expectFunction","TemplateOfBehavior","Geometry","me","my","reactively","_templateObject3","Selectability","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_templateObject5","_templateObject6","CSSStyle","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","__html","_templateObject12","DataURL","btoa","_templateObject13","_templateObject14","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject15","Enabling","_onClick","Color","_templateObject16","_templateObject17","_templateObject18","consumingEvent","_templateObject19","LineHeight","checked","indeterminate","_templateObject20","_templateObject21","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject22","_templateObject23","HashmarkPattern","HashmarkMatcher","onInput","ValueToShow","_onInput","onBlur","rerender","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject24","map","Item","_templateObject25","_templateObject26","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","TimeRegExp","TimeMatcher","_templateObject43","_templateObject44","_templateObject45","DateTimeRegExp","DateTimeMatcher","_templateObject46","_templateObject47","_templateObject48","DateRegExp","DateMatcher","_templateObject49","_templateObject50","_templateObject51","WeekRegExp","WeekMatcher","_templateObject52","_templateObject53","_templateObject54","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject55","_templateObject56","_templateObject57","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject58","_templateObject59","_templateObject60","Icon","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","Options","_templateObject69","Option","OptionValue","OptionLabel","test","_templateObject70","_templateObject71","_templateObject72","LineWrapping","_templateObject73","_my$Geometry","_templateObject74","_my$Geometry2","_templateObject75","_my$Geometry3","_templateObject76","_my$Geometry4","_templateObject77","_my$Geometry5","_templateObject78","_my$Geometry6","_templateObject79","_my$Geometry7","_templateObject80","_my$Geometry8","_templateObject81","_my$Geometry9","_templateObject82","_my$Geometry10","_templateObject83","_my$Geometry11","_templateObject84","_my$Geometry12","_templateObject85","_my$Geometry13","_templateObject86","_my$Geometry14","_templateObject87","_my$Geometry15","_templateObject88","_my$Geometry16","_templateObject89","propagateEvent","_Id","_Name","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_memoized","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","activateScript","_this3","compiledScript","Function","Cause","newRenderer","Rendering","hasError","newCallback","_this4","_this5","ownMatchesFor","Mode","CaseSensitivity","PropertySet","ErrorRelevance","ObjectIsEmpty","Matches","_pushMatch","editableValue","Script","StartIndex","EndIndex","index","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","memoized","assign","_createClass","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","IndexOfBoard","BoardOrNameOrIndex","expectValue","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","clear","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","_SNS_Folder2","_this13","_onChange","_onRendering","_onError","_Application","_proto3","BoardAtIndexPath","expectListSatisfying","allMatchesFor","innerMatches","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","onRendering","_this15","onError","_this16","deserializedFrom","newInterface","_SNS_Folder3","_this17","_StickerList","_DialogList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickersToShift","newHandler","IndexOfDialog","DialogName","DialogList","openDialog","OptionSet","Title","isResizable","maxWidth","maxHeight","onClose","DialogIndex","Number","MAX_SAFE_INTEGER","Visibility","Dialog","bringDialogToFront","DialogIsOpen","openTextViewDialog","Content","isFormatted","_templateObject90","openHTMLViewDialog","_templateObject91","openImageViewDialog","_templateObject92","openSVGViewDialog","_templateObject93","openWebViewDialog","_templateObject94","titleDialogAs","newTitle","positionDialogAt","newX","newY","sizeDialogTo","DialogIsFrontmost","closeDialog","closeAllDialogs","_serializeStickersInto","_this19","StickerSerialization","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Selectability","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","hide","enable","disable","isSelectable","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newSelectability","newVisibility","newEnabling","SNS_ConnectionStates","SNS_Adapter","window","log","dispatchEvent","CustomEvent","detail"],"mappings":"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"}
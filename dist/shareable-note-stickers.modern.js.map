{"version":3,"file":"shareable-note-stickers.modern.js","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'/icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}/>`\n    }\n  })\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'/icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'/icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\n  useBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\n  useBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView', {\n    Geometry:{ x:20,y:20, Width:120,Height:120 },\n    activeScript:`\n  useBehavior('QRCodeView')\n//my.Value           = '...'\n//my.ForegroundColor = 'black'\n//my.BackgroundColor = 'white'\n//my.CorrectionLevel = 'low'|'medium'|'quartile'|'high'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onMount(() => me.rerender())\n\n    const CorrectionLevelSet:Indexable = {\n      low:     (QRCode as Indexable).CorrectLevel.L,\n      medium:  (QRCode as Indexable).CorrectLevel.M,\n      quartile:(QRCode as Indexable).CorrectLevel.Q,\n      high:    (QRCode as Indexable).CorrectLevel.H\n    }\n\n    onRender(() => {\n      if (my.View != null) {\n        my.View.innerHTML = ''\n\n        const CorrectionLevel = (\n// @ts-ignore TS7053 allow indexing of \"CorrectionLevelSet\"\n          CorrectionLevelSet[''+my.CorrectionLevel] || QRCode.CorrectLevel.L\n        )\n        const Value = String(my.Value || 'https://github.com/rozek/shareable-note-stickers')\n        const Size  = Math.min(my.Width,my.Height)\n\n// @ts-ignore TS2351 allow construction of \"QRCode\"\n        new QRCode(my.View,{\n          text:Value,\n          width:Size, height:Size,\n          colorDark: my.ForegroundColor || 'black',\n          colorLight:my.BackgroundColor || 'white',\n          correctLevel:CorrectionLevel\n        })\n      }\n      return ''\n    })\n  })\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","SNS_Changes","createBoard","Project","BoardId","Id","Board","BoardWithId","console","error","configureFolder","FolderId","Property","Folder","FolderWithId","SNS_ProjectPropertySet","SNS_BoardPropertySet","Signal","warn","attachBoard","Index","expectOrdinal","newFolder","containsFolder","oldFolder","setTimeout","sanitizeBoardList","_attachBoardAt","detachBoard","_detachBoardAt","destroyBoard","BoardCount","StickerCount","_Project","undefined","unregisterFolder","createSticker","StickerId","Sticker","StickerWithId","configureSticker","SNS_StickerPropertySet","attachSticker","newBoard","oldBoard","sanitizeStickerList","_attachStickerAt","detachSticker","_detachStickerAt","destroySticker","unregisterSticker","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","add","StickerSet","StickerList","StickerFromList","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","ValueIsInteger","acceptableOptionalInteger","acceptableIntegerInRange","ValueIsIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","ValueIsOrdinal","acceptableOptionalOrdinal","acceptableString","ValueIsString","acceptableOptionalString","acceptableNonEmptyString","trim","acceptableOptionalNonEmptyString","acceptableStringMatching","Pattern","acceptableOptionalStringMatching","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableOptionalText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableFunction","ValueIsFunction","acceptableOptionalFunction","acceptableList","ValueIsList","acceptableOptionalList","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptableEMailAddress","ValueIsEMailAddress","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","onClick","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","FolderRegistry","get","StickerRegistryForProject","StickerRegistry","removeIdsFrom","Serialization","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","groupedBehaviorEntryList","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList","disabled","useBehavior","_this2","onRender","bind","onMount","onUnmount","expectFunction","TemplateOfBehavior","Geometry","me","my","reactively","_templateObject3","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_my$Geometry","_templateObject5","_templateObject6","CSSStyle","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","__html","_templateObject12","DataURL","btoa","_templateObject13","_templateObject14","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject15","Enabling","_onClick","Color","_templateObject16","_templateObject17","_templateObject18","consumingEvent","_templateObject19","LineHeight","checked","indeterminate","_templateObject20","_templateObject21","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject22","_templateObject23","HashmarkPattern","HashmarkMatcher","onInput","_onInput","onBlur","rerender","ValueToShow","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject24","map","Item","_templateObject25","_templateObject26","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","TimeRegExp","TimeMatcher","_templateObject43","_templateObject44","_templateObject45","DateTimeRegExp","DateTimeMatcher","_templateObject46","_templateObject47","_templateObject48","DateRegExp","DateMatcher","_templateObject49","_templateObject50","_templateObject51","WeekRegExp","WeekMatcher","_templateObject52","_templateObject53","_templateObject54","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject55","_templateObject56","_templateObject57","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject58","_templateObject59","_templateObject60","Icon","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","Options","_templateObject69","Option","OptionValue","OptionLabel","test","_templateObject70","_templateObject71","_templateObject72","LineWrapping","_templateObject73","_my$Geometry2","_templateObject74","_my$Geometry3","_templateObject75","_my$Geometry4","_templateObject76","_my$Geometry5","_templateObject77","_my$Geometry6","_templateObject78","_my$Geometry7","_templateObject79","_my$Geometry8","_templateObject80","_my$Geometry9","_templateObject81","_my$Geometry10","_templateObject82","_my$Geometry11","_templateObject83","_my$Geometry12","_templateObject84","_my$Geometry13","_templateObject85","_my$Geometry14","_templateObject86","_my$Geometry15","_templateObject87","_my$Geometry16","_templateObject88","_my$Geometry17","_templateObject89","Canvas","unobserved","Placement","drawLine","x0","y0","x1","y1","Text","Context","beginPath","moveTo","lineTo","stroke","fillText","width","height","getContext","clearRect","strokeStyle","lineWidth","textAlign","textBaseline","CorrectionLevelSet","low","QRCode","CorrectLevel","L","medium","M","quartile","Q","high","H","CorrectionLevel","String","Size","text","colorDark","colorLight","correctLevel","propagateEvent","_Id","_Name","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","activateScript","_this3","compiledScript","Function","Cause","newRenderer","Rendering","newCallback","_this4","_this5","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","_createClass","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","IndexOfBoard","BoardOrNameOrIndex","expectValue","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","clear","hasError","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","_SNS_Folder2","_this13","_onChange","_onRender","_onError","_proto3","BoardAtIndexPath","expectListSatisfying","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","_this15","onError","_this16","deserializedFrom","_SNS_Folder3","_this17","_StickerList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickersToShift","newHandler","_serializeStickersInto","_this19","StickerSerialization","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","Visibility","hide","enable","disable","maxWidth","maxHeight","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newVisibility","newEnabling","SNS_ConnectionStates","SNS_Adapter","window","SNS","log","dispatchEvent","CustomEvent","detail"],"mappings":"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"}
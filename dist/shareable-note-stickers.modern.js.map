{"version":3,"file":"shareable-note-stickers.modern.js","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n  import * as JIL from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderingCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS brokenSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, SNS,JIL, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Selectability:true,\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Selectability = true                       // for backwards compatibility\n\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Outline - e.g., for screenshot areas ****/\n\n  registerBehavior('basic Views', 'Outline', 'Outline', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      return html`<div class=\"SNS Outline\"/>`\n    }\n  },`\n/**** Outline ****/\n\n  .SNS.Outline {\n    outline:dotted 1px blue;\n    outline-offset:2px;\n    pointer-events:none;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\nuseBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\nuseBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\nuseBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<img class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\nuseBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'./icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\nuseBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\nuseBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\nuseBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}\n      style=\"accent-color:${my.ForegroundColor || 'dodgerblue'}\"/>`\n    }\n  },`\n/**** Progressbar ****/\n\n  .SNS.Sticker > .SNS.Progressbar {\n    -webkit-appearance:none; -moz-appearance:none; appearance:none;\n    background-color:#EEEEEE;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-bar {\n    background-color:#EEEEEE;\n    border:solid 1px #E0E0E0; border-radius:2px;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-value,\n  .SNS.Sticker > .SNS.Progressbar::-moz-progress-bar {\n    background-color:dodgerblue;\n    border:none; border-radius:2px;\n  }\n  `)\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'./icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\nuseBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'./icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableText(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\nuseBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\nuseBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView', {\n    Geometry:{ x:20,y:20, Width:120,Height:120 },\n    activeScript:`\nuseBehavior('QRCodeView')\n//my.Value           = '...'\n//my.ForegroundColor = 'black'\n//my.BackgroundColor = 'white'\n//my.CorrectionLevel = 'low'|'medium'|'quartile'|'high'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, SNS:Indexable, JIL:Indexable,\n    html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onMount(() => me.rerender())\n\n    const CorrectionLevelSet:Indexable = {\n      low:     (QRCode as Indexable).CorrectLevel.L,\n      medium:  (QRCode as Indexable).CorrectLevel.M,\n      quartile:(QRCode as Indexable).CorrectLevel.Q,\n      high:    (QRCode as Indexable).CorrectLevel.H\n    }\n\n    onRender(() => {\n      if (my.View != null) {\n        my.View.innerHTML = ''\n\n        const CorrectionLevel = (\n// @ts-ignore TS7053 allow indexing of \"CorrectionLevelSet\"\n          CorrectionLevelSet[''+my.CorrectionLevel] || QRCode.CorrectLevel.L\n        )\n        const Value = String(my.Value || 'https://github.com/rozek/shareable-note-stickers')\n        const Size  = Math.min(my.Width,my.Height)\n\n// @ts-ignore TS2351 allow construction of \"QRCode\"\n        new QRCode(my.View,{\n          text:Value,\n          width:Size, height:Size,\n          colorDark: my.ForegroundColor || 'black',\n          colorLight:my.BackgroundColor || 'white',\n          correctLevel:CorrectionLevel\n        })\n      }\n      return ''\n    })\n  })\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** memoized ****/\n\n// @ts-ignore TS2564 allow \"_memoized\" to be assigned upon first use\n    protected _memoized:Indexable\n\n    public get memoized ():Indexable {\n      if (this._memoized == null) {\n        this._memoized = {}\n      }\n      return this._memoized\n    }\n    public set memoized (_:Indexable) { throwReadOnlyError('memoized') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'memoized','Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        /*'memoized',*/'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n\n      if (ValueIsPlainObject(Serialization.memoized)) {\n        try {\n          Object.assign(this.memoized,Serialization.memoized)\n        } catch (Signal:any) {\n          console.warn(\n            'DeserializationError:invalid value for property \"memoized\"'\n          )\n        }\n      }\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRendering ****/\n\n    protected _onRendering:SNS_onRenderingCallback[] = []\n\n    public onRendering (Callback:SNS_onRenderingCallback):void {\n      expectFunction('\"onRendering\" callback',Callback)\n      this._onRendering.push(Callback)\n    }\n\n  /**** rerender - warning: semantics differs from that of other visuals ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRendering.forEach(\n        (Callback:SNS_onRenderingCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name',\n      'Lock','Selectability','Visibility','Enabling',\n      'minWidth','maxWidth','minHeight','maxHeight',\n      'BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n    ].forEach((Property:string) => SNS_StickerPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundColor ****/\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return this._BackgroundColor\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('sticker background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('sticker background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Lock ****/\n\n    protected _Selectability:boolean = false\n\n    public get Selectability ():boolean { return this._Selectability }\n    public set Selectability (newSelectability:boolean) {\n      expectBoolean('sticker selectability',newSelectability)\n      if (this._Selectability !== newSelectability) {\n        this._Selectability = newSelectability\n\n        this._reportChange('configure',this,'Selectability',newSelectability)\n        this.rerender()\n      }\n    }\n\n  /**** isSelectable ****/\n\n    public get isSelectable ():boolean                 { return this._Selectability }\n    public set isSelectable (newSelectability:boolean) { this.Selectability = newSelectability }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isSelectable) { Serialization.Selectability = true }\n      if (this.isLocked)     { Serialization.Lock          = true }\n      if (! this.isVisible)  { Serialization.Visibility    = false }\n      if (! this.isEnabled)  { Serialization.Enabling      = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Selectability === true)  { this.Selectability = true }\n      if (Serialization.Lock          === true)  { this.Lock          = true }\n      if (Serialization.Visibility    === false) { this.Visibility    = false }\n      if (Serialization.Enabling      === false) { this.Enabling      = false }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  const SNS:Indexable = window.SNS = {\n    SNS_FontStyles, SNS_ErrorTypes,\n    throwError, throwReadOnlyError,\n    ValueIsVisual, allowVisual, allowedVisual, expectVisual, expectedVisual,\n    ValueIsFolder, allowFolder, allowedFolder, expectFolder, expectedFolder,\n    ValueIsProject, allowProject, allowedProject, expectProject, expectedProject,\n    ValueIsBoard, allowBoard, allowedBoard, expectBoard, expectedBoard,\n    ValueIsSticker, allowSticker, allowedSticker, expectSticker, expectedSticker,\n    ValueIsId, allowId, allowedId, expectId, expectedId,\n    ValueIsIdentifier, allowIdentifier, allowedIdentifier, expectIdentifier, expectedIdentifier,\n    ValueIsName, allowName, allowedName, expectName, expectedName,\n    ValueIsLocation, allowLocation, allowedLocation, expectLocation, expectedLocation,\n    ValueIsDimension, allowDimension, allowedDimension, expectDimension, expectedDimension,\n    ValueIsPosition, allowPosition, allowedPosition, expectPosition, expectedPosition,\n    ValueIsSize, allowSize, allowedSize, expectSize, expectedSize,\n    ValueIsGeometry, allowGeometry, allowedGeometry, expectGeometry, expectedGeometry,\n    ValueIsError, allowError, allowedError, expectError, expectedError,\n    ValueIsSerializable, allowSerializable, allowedSerializable, expectSerializable, expectedSerializable,\n    acceptableBoolean, acceptableOptionalBoolean,\n    acceptableNumber, acceptableOptionalNumber,\n    acceptableNumberInRange, acceptableOptionalNumberInRange,\n    acceptableInteger, acceptableOptionalInteger,\n    acceptableIntegerInRange, acceptableOptionalIntegerInRange,\n    acceptableOrdinal, acceptableOptionalOrdinal,\n    acceptableString, acceptableOptionalString,\n    acceptableNonEmptyString, acceptableOptionalNonEmptyString,\n    acceptableStringMatching, acceptableOptionalStringMatching,\n    acceptableText, acceptableOptionalText,\n    acceptableTextline, acceptableOptionalTextline,\n    acceptableFunction, acceptableOptionalFunction,\n    acceptableList, acceptableOptionalList,\n    acceptableListSatisfying, acceptableOptionalListSatisfying,\n    acceptableColor, acceptableOptionalColor,\n    acceptableEMailAddress, acceptablePhoneNumber, acceptableURL,\n    newId,\n    CSSStyleOfVisual,\n    SNS_ConnectionStates\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","SNS_Changes","createBoard","Project","BoardId","Id","Board","BoardWithId","console","error","configureFolder","FolderId","Property","Folder","FolderWithId","SNS_ProjectPropertySet","SNS_BoardPropertySet","Signal","warn","attachBoard","Index","expectOrdinal","newFolder","containsFolder","oldFolder","setTimeout","sanitizeBoardList","_attachBoardAt","detachBoard","_detachBoardAt","destroyBoard","BoardCount","StickerCount","_Project","undefined","unregisterFolder","createSticker","StickerId","Sticker","StickerWithId","configureSticker","SNS_StickerPropertySet","attachSticker","newBoard","oldBoard","sanitizeStickerList","_attachStickerAt","detachSticker","_detachStickerAt","destroySticker","unregisterSticker","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","add","StickerSet","StickerList","StickerFromList","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","ValueIsInteger","acceptableOptionalInteger","acceptableIntegerInRange","ValueIsIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","ValueIsOrdinal","acceptableOptionalOrdinal","acceptableString","ValueIsString","acceptableOptionalString","acceptableNonEmptyString","trim","acceptableOptionalNonEmptyString","acceptableStringMatching","Pattern","acceptableOptionalStringMatching","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableOptionalText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableFunction","ValueIsFunction","acceptableOptionalFunction","acceptableList","ValueIsList","acceptableOptionalList","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptableEMailAddress","ValueIsEMailAddress","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","onClick","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","FolderRegistry","get","StickerRegistryForProject","StickerRegistry","removeIdsFrom","Serialization","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","groupedBehaviorEntryList","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList","disabled","useBehavior","_this2","onRender","bind","onMount","onUnmount","SNS","JIL","expectFunction","TemplateOfBehavior","Geometry","me","my","reactively","_templateObject3","Selectability","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_templateObject5","_templateObject6","CSSStyle","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","__html","_templateObject12","DataURL","btoa","_templateObject13","_templateObject14","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject15","Enabling","_onClick","Color","_templateObject16","_templateObject17","_templateObject18","consumingEvent","_templateObject19","LineHeight","checked","indeterminate","_templateObject20","_templateObject21","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject22","_templateObject23","HashmarkPattern","HashmarkMatcher","onInput","ValueToShow","_onInput","onBlur","rerender","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject24","map","Item","_templateObject25","_templateObject26","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","TimeRegExp","TimeMatcher","_templateObject43","_templateObject44","_templateObject45","DateTimeRegExp","DateTimeMatcher","_templateObject46","_templateObject47","_templateObject48","DateRegExp","DateMatcher","_templateObject49","_templateObject50","_templateObject51","WeekRegExp","WeekMatcher","_templateObject52","_templateObject53","_templateObject54","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject55","_templateObject56","_templateObject57","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject58","_templateObject59","_templateObject60","Icon","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","Options","_templateObject69","Option","OptionValue","OptionLabel","test","_templateObject70","_templateObject71","_templateObject72","LineWrapping","_templateObject73","_my$Geometry","_templateObject74","_my$Geometry2","_templateObject75","_my$Geometry3","_templateObject76","_my$Geometry4","_templateObject77","_my$Geometry5","_templateObject78","_my$Geometry6","_templateObject79","_my$Geometry7","_templateObject80","_my$Geometry8","_templateObject81","_my$Geometry9","_templateObject82","_my$Geometry10","_templateObject83","_my$Geometry11","_templateObject84","_my$Geometry12","_templateObject85","_my$Geometry13","_templateObject86","_my$Geometry14","_templateObject87","_my$Geometry15","_templateObject88","_my$Geometry16","_templateObject89","Canvas","unobserved","Placement","drawLine","x0","y0","x1","y1","Text","Context","beginPath","moveTo","lineTo","stroke","fillText","width","height","getContext","clearRect","strokeStyle","lineWidth","textAlign","textBaseline","CorrectionLevelSet","low","QRCode","CorrectLevel","L","medium","M","quartile","Q","high","H","CorrectionLevel","String","Size","text","colorDark","colorLight","correctLevel","propagateEvent","_Id","_Name","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_memoized","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","_createClass","activateScript","_this3","compiledScript","Function","Cause","newRenderer","Rendering","hasError","newCallback","_this4","_this5","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","memoized","assign","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","IndexOfBoard","BoardOrNameOrIndex","expectValue","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","clear","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","_SNS_Folder2","_this13","_onChange","_onRendering","_onError","_proto3","BoardAtIndexPath","expectListSatisfying","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","onRendering","_this15","onError","_this16","deserializedFrom","_SNS_Folder3","_this17","_StickerList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickersToShift","newHandler","_serializeStickersInto","_this19","StickerSerialization","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Selectability","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","Visibility","hide","enable","disable","maxWidth","maxHeight","isSelectable","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newSelectability","newVisibility","newEnabling","SNS_ConnectionStates","SNS_Adapter","window","log","dispatchEvent","CustomEvent","detail"],"mappings":"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"}
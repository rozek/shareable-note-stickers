{"version":3,"file":"shareable-note-stickers.js","sources":["../node_modules/hyperactiv/src/tools.js","../node_modules/hyperactiv/src/data.js","../node_modules/hyperactiv/src/batcher.js","../node_modules/hyperactiv/src/observe.js","../node_modules/hyperactiv/src/computed.js","../node_modules/hyperactiv/src/dispose.js","../node_modules/hyperactiv/src/index.js","../src/shareable-note-stickers.ts"],"sourcesContent":["const BIND_IGNORED = [\n  'String',\n  'Number',\n  'Object',\n  'Array',\n  'Boolean',\n  'Date'\n]\n\nexport function isObj(object) { return object && typeof object === 'object' }\nexport function setHiddenKey(object, key, value) {\n  Object.defineProperty(object, key, { value, enumerable: false, configurable: true })\n}\nexport function defineBubblingProperties(object, key, parent) {\n  setHiddenKey(object, '__key', key)\n  setHiddenKey(object, '__parent', parent)\n}\nexport function getInstanceMethodKeys(object) {\n  return (\n    Object\n      .getOwnPropertyNames(object)\n      .concat(\n        Object.getPrototypeOf(object) &&\n                BIND_IGNORED.indexOf(Object.getPrototypeOf(object).constructor.name) < 0 ?\n          Object.getOwnPropertyNames(Object.getPrototypeOf(object)) :\n          []\n      )\n      .filter(prop => prop !== 'constructor' && typeof object[prop] === 'function')\n  )\n}\n","export const data = {\n  computedStack: [],\n  trackerSymbol: Symbol('tracker')\n}\n","let queue = null\nexport const __batched = Symbol()\n\n/**\n * Will perform batched computations instantly.\n */\nexport function process() {\n  if(!queue)\n    return\n  for(const task of queue) {\n    task()\n    task[__batched] = false\n  }\n  queue = null\n}\n\nexport function enqueue(task, batch) {\n  if(task[__batched])\n    return\n  if(queue === null) {\n    queue = []\n    if(batch === true) {\n      queueMicrotask(process)\n    } else {\n      setTimeout(process, batch)\n    }\n  }\n  queue.push(task)\n}\n\n","import {\n  isObj,\n  defineBubblingProperties,\n  getInstanceMethodKeys,\n  setHiddenKey\n} from './tools.js'\nimport { data } from './data.js'\nimport { enqueue, __batched } from './batcher.js'\n\nconst { computedStack, trackerSymbol } = data\n\nconst observedSymbol = Symbol('__observed')\n\n/**\n * @typedef {Object} Options - Observe options.\n * @property {string[]} [props] - Observe only the properties listed.\n * @property {string[]} [ignore] - Ignore the properties listed.\n * @property {boolean | number} [batch] -\n *  Batch computed properties calls, wrapping them in a queueMicrotask and\n *  executing them in a new context and preventing excessive calls.\n *  If batch is an integer, the calls will be debounced by the value in milliseconds using setTimemout.\n * @prop {boolean} [deep] - Recursively observe nested objects and when setting new properties.\n * @prop {boolean} [bind] - Automatically bind methods to the observed object.\n */\n\nexport const modifiedProperty = Symbol('modifiedProperty')\n\n/**\n * Observes an object or an array and returns a proxified version which reacts on mutations.\n *\n * @template O\n * @param {O} obj - The object to observe.\n * @param {Options} options - Options\n * @returns {O} - A proxy wrapping the object.\n */\nexport function observe(obj, options = {}) {\n  // 'deep' is slower but reasonable; 'shallow' a performance enhancement but with side-effects\n  const {\n    props,\n    ignore,\n    batch,\n    deep = true,\n    bubble,\n    bind\n  } = options\n\n  // Ignore if the object is already observed\n  if(obj[observedSymbol]) {\n    return obj\n  }\n\n  // If the prop is explicitely not excluded\n  const isWatched = (prop) =>\n    prop !== observedSymbol &&\n    (\n      (props == null) ||\n      (props instanceof Array) && props.includes(prop)\n    ) && (\n      (ignore == null) ||\n      (ignore instanceof Array) && ! ignore.includes(prop)\n    )\n\n  // If the deep flag is set, observe nested objects/arrays\n  if(deep) {\n    Object.entries(obj).forEach(function([key, val]) {\n      if(isObj(val) && isWatched(key)) {\n        obj[key] = observe(val, options)\n        // If bubble is set, we add keys to the object used to bubble up the mutation\n        if(bubble) {\n          defineBubblingProperties(obj[key], key, obj)\n        }\n      }\n    })\n  }\n  \n    function setObjectPropertyTo (obj, prop, value) {\n      if(prop === '__handler') {\n        // Don't track bubble handlers\n        setHiddenKey(obj, '__handler', value)\n      } else if(!isWatched(prop)) {\n        // If the prop is ignored\n        obj[prop] = value\n      } else if(Array.isArray(obj) && prop === 'length' || ValuesDiffer(obj[prop],value)) {\n        // If the new/old value are not equal\n        const deeper = (prop !== modifiedProperty) && deep && isObj(value)\n\n        // Remove bubbling infrastructure and pass old value to handlers\n        const oldValue = obj[prop]\n//      if(isObj(oldValue))\n//        delete obj[prop]\n\n        // If the deep flag is set we observe the newly set value\n        obj[prop] = deeper ? observe(value, options) : value\n\n        // Co-opt assigned object into bubbling if appropriate\n        if(deeper && bubble) {\n          defineBubblingProperties(obj[prop], prop, obj)\n        }\n\n        const ancestry = [ prop ]\n        let parent = obj\n        while(parent) {\n          // If a handler explicitly returns 'false' then stop propagation\n          if(parent.__handler && parent.__handler(ancestry, value, oldValue, proxy) === false) {\n            break\n          }\n          // Continue propagation, traversing the mutated property's object hierarchy & call any __handlers along the way\n          if(parent.__key && parent.__parent) {\n            ancestry.unshift(parent.__key)\n            parent = parent.__parent\n          } else {\n            parent = null\n          }\n        }\n\n        const dependents = propertiesMap.get(prop)\n        if(dependents) {\n          // Retrieve the computed functions depending on the prop\n          for(const dependent of dependents) {\n            const tracker = dependent[trackerSymbol]\n            const trackedObj = tracker && tracker.get(obj)\n            const tracked = trackedObj && trackedObj.has(prop)\n            // If the function has been disposed or if the prop has not been used\n            // during the latest function call, delete the function reference\n            if(dependent.__disposed || tracker && !tracked) {\n              dependents.delete(dependent)\n            } else if(dependent !== computedStack[0]) {\n              // Run the computed function\n              if(typeof batch !== 'undefined' && batch !== false) {\n                enqueue(dependent, batch)\n                dependent[__batched] = true\n              } else {\n                dependent()\n              }\n            }\n          }\n        }\n\n        if (prop !== modifiedProperty) {\n        \tobj[modifiedProperty] = prop\n        \t\n\t        const dependents = propertiesMap.get(modifiedProperty)\n\t        if(dependents) {\n\t          // Retrieve the computed functions depending on \"modifiedProperty\"\n\t          for(const dependent of dependents) {\n\t            const tracker = dependent[trackerSymbol]\n\t            const trackedObj = tracker && tracker.get(obj)\n\t            const tracked = trackedObj && trackedObj.has(modifiedProperty)\n\t            // If the function has been disposed or if \"modifiedProperty\" has not been used\n\t            // during the latest function call, delete the function reference\n\t            if(dependent.__disposed || tracker && !tracked) {\n\t              dependents.delete(dependent)\n\t            } else if(dependent !== computedStack[0]) {\n\t              // Run the computed function\n\t              if(typeof batch !== 'undefined' && batch !== false) {\n\t                enqueue(dependent, batch)\n\t                dependent[__batched] = true\n\t              } else {\n\t                dependent()\n\t              }\n\t            }\n\t          }\n\t        }\n        }\n      }\n    }\n\n  // For each observed object, each property is mapped with a set of computed functions depending on this property.\n  // Whenever a property is set, we re-run each one of the functions stored inside the matching Set.\n  const propertiesMap = new Map()\n\n  // Proxify the object in order to intercept get/set on props\n  const proxy = new Proxy(obj, {\n    get(_, prop) {\n      if(prop === observedSymbol)\n        return true\n\n      // If the prop is watched\n      if(isWatched(prop)) {\n        // If a computed function is being run\n        if(computedStack.length) {\n          const computedFn = computedStack[0]\n          // Tracks object and properties accessed during the function call\n          const tracker = computedFn[trackerSymbol]\n          if(tracker) {\n            let trackerSet = tracker.get(obj)\n            if(!trackerSet) {\n              trackerSet = new Set()\n              tracker.set(obj, trackerSet)\n            }\n            trackerSet.add(prop)\n          }\n          // Link the computed function and the property being accessed\n          let propertiesSet = propertiesMap.get(prop)\n          if(!propertiesSet) {\n            propertiesSet = new Set()\n            propertiesMap.set(prop, propertiesSet)\n          }\n          propertiesSet.add(computedFn)\n        }\n      }\n\n      return obj[prop]\n    },\n    set(_, prop, value) {\n      setObjectPropertyTo(obj, prop, value)\n      return true\n    },\n    defineProperty(_, prop, descriptor) {\n      if (prop === '__handler') {\n      \tthrow new Error(\"Don't track bubble handlers\")\n      } else if(!isWatched(prop)) {\n        // If the prop is ignored\n        return Reflect.defineProperty(obj,prop,descriptor)\n      } else if (! Array.isArray(obj) || (prop === 'length')) {\n      \tif (('value' in descriptor) && deep && isObj(descriptor.value)) {\n      \t  descriptor = {...descriptor} // do not modify the argument itself\n      \t  descriptor.value = observe(descriptor.value, options)\n      \t}\n      \tconst Outcome = Reflect.defineProperty(obj,prop,descriptor)\n      \t  if (prop !== modifiedProperty) {\n\t        \tobj[modifiedProperty] = prop\n\t        }\n      \treturn Outcome\n      }\n      return false\n    },\n    deleteProperty(_, prop) {\n    \tif (prop === modifiedProperty) throw new Error(\n    \t  'internal property Symbol(\"modifiedProperty\") must not be deleted'\n    \t)\n\n    \tif (prop in obj) {\n    \t\tsetObjectPropertyTo(obj, prop, undefined) // trigger observers one last time\n    \t}\n    \treturn Reflect.deleteProperty(_,prop)\n    }\n  })\n\n  if(bind) {\n    // Need this for binding es6 classes methods which are stored in the object prototype\n    getInstanceMethodKeys(obj).forEach(key => obj[key] = obj[key].bind(proxy))\n  }\n\n  return proxy\n}\n\n/**** ValuesDiffer - copied from \"javascript-interface-library\", then modified ****/\n\n  function ValuesDiffer (thisValue, otherValue, Mode) {\n  \tconst visitedObjects = new Map()\n  \t\n  \tfunction ValuesDoDiffer (thisValue, otherValue, Mode) {\n\t    if (thisValue === otherValue) { return false }\n\t\n\t    let thisType = typeof thisValue\n\t    if (thisType !== typeof otherValue) { return true }\n\t\n    /**** ArraysDiffer ****/\n\n      function ArraysDiffer (thisArray, otherArray, Mode) {\n        if (! Array.isArray(otherArray)) { return true }\n\n        if (thisArray.length !== otherArray.length) { return true }\n\n        if (visitedObjects.has(thisArray) || visitedObjects.has(otherArray)) {\n        \tif (visitedObjects.has(thisArray)  && visitedObjects.get(thisArray).has(otherArray)) { return false }\n        \tif (visitedObjects.has(otherArray) && visitedObjects.get(otherArray).has(thisArray)) { return false }\n        \t\n        \tif (! visitedObjects.has(thisArray)) { visitedObjects.set(thisArray, new Set()) }\n        \tvisitedObjects.get(thisArray).add(otherArray)\n        }\n        \n        for (let i = 0, l = thisArray.length; i < l; i++) {\n          if (ValuesDoDiffer(thisArray[i],otherArray[i],Mode)) { return true }\n        }\n\n        return false\n      }\n\n    /**** ObjectsDiffer ****/\n\n      function ObjectsDiffer (thisObject, otherObject, Mode='by-value') {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n          return true\n        }\n\n        for (let key in thisObject) {\n          if (! (key in otherObject)) { return true }\n        }\n\n        for (let key in otherObject) {\n          if (! (key in thisObject)) { return true }\n        }\n\n        if (visitedObjects.has(thisObject) || visitedObjects.has(otherObject)) {\n        \tif (visitedObjects.has(thisObject)  && visitedObjects.get(thisObject).has(otherObject)) { return false }\n        \tif (visitedObjects.has(otherObject) && visitedObjects.get(otherObject).has(thisObject)) { return false }\n        \t\n        \tif (! visitedObjects.has(thisObject)) { visitedObjects.set(thisObject, new Set()) }\n        \tvisitedObjects.get(thisObject).add(otherObject)\n        }\n\n        for (let key in thisObject) {\n          if (ValuesDoDiffer(thisObject[key],otherObject[key],Mode)) {\n            return true\n          }\n        }\n\n        return false\n      }\n\t\n\t    switch (thisType) {\n\t      case 'undefined':\n\t      case 'boolean':\n\t      case 'string':\n\t      case 'function': return true   // most primitives are compared using \"===\"\n\t      case 'number':   return (\n\t                         (isNaN(thisValue) !== isNaN(otherValue)) ||\n\t                         (Math.abs(thisValue-otherValue) > Number.EPSILON)\n\t                       )\n\t      case 'object':\n\t        if (thisValue  == null) { return true }  // since \"other_value\" != null!\n\t        if (otherValue == null) { return true }   // since \"this_value\" != null!\n\t\n\t        if ((Mode === 'by-value') && (\n\t          (thisValue instanceof Boolean) ||\n\t          (thisValue instanceof Number) ||\n\t          (thisValue instanceof String)\n\t        )) {\n\t          return (thisValue.valueOf() !== otherValue.valueOf())\n\t        }\n\t\n\t        if (Array.isArray(thisValue)) {\n\t          return ArraysDiffer(thisValue,otherValue,Mode)\n\t        }\n\t\n\t        return (\n\t          Mode === 'by-reference'\n\t          ? true                           // because (thisValue !== otherValue)\n\t          : ObjectsDiffer(thisValue,otherValue,Mode)\n\t        )\n\t      default: return true                          // unsupported property type\n\t    }\n\t\n\t    return true\n  \t}\n  \treturn ValuesDoDiffer(thisValue, otherValue, Mode)\n  }\n","import { data } from './data.js'\nconst { computedStack, trackerSymbol } = data\n\n/**\n * @typedef {Object} ComputedArguments - Computed Arguments.\n * @property {(fun: () => void) => void} computeAsync -\n * Will monitor the dependencies of the function passed as an argument. Useful when dealing with asynchronous computations.\n */\n\n/**\n * @typedef {Object} Options - Computed Options.\n * @property {boolean} [autoRun] -\n * If false, will not run the function argument when calling computed(function).\n * The computed function must be called **at least once** to calculate its dependencies.\n * @property {() => void} [callback] -\n * Specify a callback that will be re-runned each time a dependency changes instead of the computed function.\n */\n\n/**\n * Wraps a function and captures observed properties which are accessed during the function execution.\n * When those properties are mutated, the function is called to reflect the changes.\n *\n * @param {(args: ComputedArguments) => void} wrappedFunction\n * @param {Options} options\n */\nexport function computed(wrappedFunction, { autoRun = true, callback, bind, disableTracking = false } = {}) {\n  function observeComputation(fun, argsList = []) {\n    const target = callback || wrapper\n    // Track object and object properties accessed during this function call\n    if(!disableTracking) {\n      target[trackerSymbol] = new WeakMap()\n    }\n    // Store into the stack a reference to the computed function\n    computedStack.unshift(target)\n    // Inject the computeAsync argument which is used to manually declare when the computation takes part\n    if(argsList.length > 0) {\n      argsList = [...argsList, computeAsyncArg]\n    } else {\n      argsList = [computeAsyncArg]\n    }\n    // Run the computed function - or the async function\n    const result =\n      fun ? fun() :\n      bind ? wrappedFunction.apply(bind, argsList) :\n      wrappedFunction(...argsList)\n    // Remove the reference\n    computedStack.shift()\n    // Return the result\n    return result\n  }\n  const computeAsyncArg = { computeAsync: observeComputation }\n  const wrapper = (...argsList) => observeComputation(null, argsList)\n\n  // If autoRun, then call the function at once\n  if(autoRun) {\n    wrapper()\n  }\n\n  return wrapper\n}\n","import { data } from './data.js'\n\n/**\n * Will remove the computed function from the reactive Maps (the next time an bound observer property is called) allowing garbage collection.\n *\n * @param {Function} computedFunction\n */\nexport function dispose(computedFunction) {\n  computedFunction[data.trackerSymbol] = null\n  return computedFunction.__disposed = true\n}\n","import { observe, modifiedProperty } from './observe.js'\nimport { computed } from './computed.js'\nimport { dispose } from './dispose.js'\nimport { process } from './batcher.js'\n\nexport default {\n  observe, modifiedProperty,\n  computed,\n  dispose,\n  batch: process\n}\n","/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'/img/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}/>`\n    }\n  })\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'/img/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'/img/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height}, L 0,0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height}, L ${Width},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,0, L ${Width},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},0, L 0,${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\n  useBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\n  useBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView')\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["computedStack","trackerSymbol","observe","obj","dependents","thisValue","otherValue","Mode","computed","dispose","Error","Serialization","html","Value","ValuesDiffer"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}
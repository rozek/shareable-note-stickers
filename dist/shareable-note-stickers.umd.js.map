{"version":3,"file":"shareable-note-stickers.umd.js","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Selectability:true,\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Selectability = true                       // for backwards compatibility\n\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Selectability:true,\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Selectability = true                       // for backwards compatibility\n\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Outline - e.g., for screenshot areas ****/\n\n  registerBehavior('basic Views', 'Outline', 'Outline', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      return html`<div class=\"SNS Outline\"/>`\n    }\n  },`\n/**** Outline ****/\n\n  .SNS.Outline {\n    outline:dotted 1px blue;\n    outline-offset:2px;\n    pointer-events:none;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'./icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}\n      style=\"accent-color:${my.ForegroundColor || 'dodgerblue'}\"/>`\n    }\n  },`\n/**** Progressbar ****/\n\n  .SNS.Sticker > .SNS.Progressbar {\n    -webkit-appearance:none; -moz-appearance:none; appearance:none;\n    background-color:#EEEEEE;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-bar {\n    background-color:#EEEEEE;\n    border:solid 1px #E0E0E0; border-radius:2px;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-value,\n  .SNS.Sticker > .SNS.Progressbar::-moz-progress-bar {\n    background-color:dodgerblue;\n    border:none; border-radius:2px;\n  }\n  `)\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'./icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'./icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableText(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\n  useBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\n  useBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView', {\n    Geometry:{ x:20,y:20, Width:120,Height:120 },\n    activeScript:`\n  useBehavior('QRCodeView')\n//my.Value           = '...'\n//my.ForegroundColor = 'black'\n//my.BackgroundColor = 'white'\n//my.CorrectionLevel = 'low'|'medium'|'quartile'|'high'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onMount(() => me.rerender())\n\n    const CorrectionLevelSet:Indexable = {\n      low:     (QRCode as Indexable).CorrectLevel.L,\n      medium:  (QRCode as Indexable).CorrectLevel.M,\n      quartile:(QRCode as Indexable).CorrectLevel.Q,\n      high:    (QRCode as Indexable).CorrectLevel.H\n    }\n\n    onRender(() => {\n      if (my.View != null) {\n        my.View.innerHTML = ''\n\n        const CorrectionLevel = (\n// @ts-ignore TS7053 allow indexing of \"CorrectionLevelSet\"\n          CorrectionLevelSet[''+my.CorrectionLevel] || QRCode.CorrectLevel.L\n        )\n        const Value = String(my.Value || 'https://github.com/rozek/shareable-note-stickers')\n        const Size  = Math.min(my.Width,my.Height)\n\n// @ts-ignore TS2351 allow construction of \"QRCode\"\n        new QRCode(my.View,{\n          text:Value,\n          width:Size, height:Size,\n          colorDark: my.ForegroundColor || 'black',\n          colorLight:my.BackgroundColor || 'white',\n          correctLevel:CorrectionLevel\n        })\n      }\n      return ''\n    })\n  })\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name',\n      'Lock','Selectability','Visibility','Enabling',\n      'minWidth','maxWidth','minHeight','maxHeight',\n      'BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n    ].forEach((Property:string) => SNS_StickerPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Lock ****/\n\n    protected _Selectability:boolean = false\n\n    public get Selectability ():boolean { return this._Selectability }\n    public set Selectability (newSelectability:boolean) {\n      expectBoolean('sticker selectability',newSelectability)\n      if (this._Selectability !== newSelectability) {\n        this._Selectability = newSelectability\n\n        this._reportChange('configure',this,'Selectability',newSelectability)\n        this.rerender()\n      }\n    }\n\n  /**** isSelectable ****/\n\n    public get isSelectable ():boolean                 { return this._Selectability }\n    public set isSelectable (newSelectability:boolean) { this.Selectability = newSelectability }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","sanitizeBoardList","Project","Folder","Board","Index","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","_detachBoardAt","add","sanitizeStickerList","Sticker","StickerSet","StickerList","StickerFromList","_detachStickerAt","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","undefined","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableOptionalNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalOrdinal","ValueIsOrdinal","acceptableOptionalStringMatching","Pattern","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","onClick","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","unregisterFolder","FolderRegistry","get","Id","FolderWithId","StickerRegistryForProject","unregisterSticker","StickerRegistry","removeIdsFrom","Serialization","ValueIsList","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","trim","useBehavior","_this2","onRender","bind","onMount","onUnmount","expectFunction","Geometry","me","my","reactively","_templateObject3","Selectability","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_my$Geometry","_templateObject5","_templateObject6","_templateObject7","CSSStyle","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","__html","_templateObject13","DataURL","btoa","_templateObject14","_templateObject15","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject16","Enabling","_onClick","Color","_templateObject17","_templateObject18","_templateObject19","consumingEvent","_templateObject20","LineHeight","checked","indeterminate","_templateObject21","_templateObject22","ValueIsString","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject23","_templateObject24","HashmarkPattern","HashmarkMatcher","onInput","ValueToShow","_onInput","onBlur","rerender","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject25","map","Item","_templateObject26","_templateObject27","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","ValueIsEMailAddress","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","_templateObject43","TimeRegExp","TimeMatcher","_templateObject44","_templateObject45","_templateObject46","DateTimeRegExp","DateTimeMatcher","_templateObject47","_templateObject48","_templateObject49","DateRegExp","DateMatcher","_templateObject50","_templateObject51","_templateObject52","WeekRegExp","WeekMatcher","_templateObject53","_templateObject54","_templateObject55","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject56","_templateObject57","_templateObject58","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject59","_templateObject60","_templateObject61","Icon","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","Options","_templateObject70","Option","OptionValue","OptionLabel","disabled","test","_templateObject71","_templateObject72","_templateObject73","LineWrapping","_templateObject74","_my$Geometry2","_templateObject75","_my$Geometry3","_templateObject76","_my$Geometry4","_templateObject77","_my$Geometry5","_templateObject78","_my$Geometry6","_templateObject79","_my$Geometry7","_templateObject80","_my$Geometry8","_templateObject81","_my$Geometry9","_templateObject82","_my$Geometry10","_templateObject83","_my$Geometry11","_templateObject84","_my$Geometry12","_templateObject85","_my$Geometry13","_templateObject86","_my$Geometry14","_templateObject87","_my$Geometry15","_templateObject88","_my$Geometry16","_templateObject89","_my$Geometry17","_templateObject90","Canvas","unobserved","Placement","drawLine","x0","y0","x1","y1","Text","Context","beginPath","moveTo","lineTo","stroke","fillText","width","height","getContext","clearRect","strokeStyle","lineWidth","textAlign","textBaseline","CorrectionLevelSet","low","QRCode","CorrectLevel","L","medium","M","quartile","Q","high","H","CorrectionLevel","String","Size","text","colorDark","colorLight","correctLevel","propagateEvent","_Id","_Name","_Project","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","activateScript","_this3","compiledScript","Function","Signal","console","error","Cause","newRenderer","Rendering","newCallback","_this4","_this5","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","warn","_createClass","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","containsFolder","IndexOfBoard","BoardOrNameOrIndex","expectValue","ValueIsInteger","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","newBoard","_attachBoardAt","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","BoardCount","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","newFolder","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","destroyBoard","clear","hasError","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","SNS_ProjectPropertySet","Property","_SNS_Folder2","_this13","_onChange","_onRender","_onError","_proto3","BoardAtIndexPath","expectListSatisfying","BoardWithId","StickerWithId","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","_this15","onError","_this16","deserializedFrom","SNS_BoardPropertySet","_SNS_Folder3","_this17","_StickerList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","_attachStickerAt","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickerCount","StickersToShift","destroySticker","newHandler","_serializeStickersInto","_this19","StickerSerialization","SNS_StickerPropertySet","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Selectability","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","Visibility","hide","enable","disable","maxWidth","maxHeight","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newSelectability","newVisibility","newEnabling","window","SNS","log","dispatchEvent","CustomEvent","detail","SNS_Adapter","ValueIsFunction","ValueIsIntegerInRange","BoardId","FolderId","expectOrdinal","oldFolder","setTimeout","StickerId","oldBoard","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList"],"mappings":"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"}
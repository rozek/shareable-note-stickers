{"version":3,"file":"shareableNoteStickers.js","sources":["../node_modules/htm/preact/index.module.js","../node_modules/hyperactiv/src/tools.js","../node_modules/hyperactiv/src/data.js","../node_modules/hyperactiv/src/batcher.js","../node_modules/hyperactiv/src/observe.js","../node_modules/hyperactiv/src/computed.js","../node_modules/hyperactiv/src/dispose.js","../node_modules/hyperactiv/src/index.js","../src/shareableNoteStickers.ts"],"sourcesContent":["import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","const BIND_IGNORED = [\n  'String',\n  'Number',\n  'Object',\n  'Array',\n  'Boolean',\n  'Date'\n]\n\nexport function isObj(object) { return object && typeof object === 'object' }\nexport function setHiddenKey(object, key, value) {\n  Object.defineProperty(object, key, { value, enumerable: false, configurable: true })\n}\nexport function defineBubblingProperties(object, key, parent) {\n  setHiddenKey(object, '__key', key)\n  setHiddenKey(object, '__parent', parent)\n}\nexport function getInstanceMethodKeys(object) {\n  return (\n    Object\n      .getOwnPropertyNames(object)\n      .concat(\n        Object.getPrototypeOf(object) &&\n                BIND_IGNORED.indexOf(Object.getPrototypeOf(object).constructor.name) < 0 ?\n          Object.getOwnPropertyNames(Object.getPrototypeOf(object)) :\n          []\n      )\n      .filter(prop => prop !== 'constructor' && typeof object[prop] === 'function')\n  )\n}\n","export const data = {\n  computedStack: [],\n  trackerSymbol: Symbol('tracker')\n}\n","let queue = null\nexport const __batched = Symbol()\n\n/**\n * Will perform batched computations instantly.\n */\nexport function process() {\n  if(!queue)\n    return\n  for(const task of queue) {\n    task()\n    task[__batched] = false\n  }\n  queue = null\n}\n\nexport function enqueue(task, batch) {\n  if(task[__batched])\n    return\n  if(queue === null) {\n    queue = []\n    if(batch === true) {\n      queueMicrotask(process)\n    } else {\n      setTimeout(process, batch)\n    }\n  }\n  queue.push(task)\n}\n\n","import {\n  isObj,\n  defineBubblingProperties,\n  getInstanceMethodKeys,\n  setHiddenKey\n} from './tools.js'\nimport { data } from './data.js'\nimport { enqueue, __batched } from './batcher.js'\n\nconst { computedStack, trackerSymbol } = data\n\nconst observedSymbol = Symbol('__observed')\n\n/**\n * @typedef {Object} Options - Observe options.\n * @property {string[]} [props] - Observe only the properties listed.\n * @property {string[]} [ignore] - Ignore the properties listed.\n * @property {boolean | number} [batch] -\n *  Batch computed properties calls, wrapping them in a queueMicrotask and\n *  executing them in a new context and preventing excessive calls.\n *  If batch is an integer, the calls will be debounced by the value in milliseconds using setTimemout.\n * @prop {boolean} [deep] - Recursively observe nested objects and when setting new properties.\n * @prop {boolean} [bind] - Automatically bind methods to the observed object.\n */\n\nexport const modifiedProperty = Symbol('modifiedProperty')\n\n/**\n * Observes an object or an array and returns a proxified version which reacts on mutations.\n *\n * @template O\n * @param {O} obj - The object to observe.\n * @param {Options} options - Options\n * @returns {O} - A proxy wrapping the object.\n */\nexport function observe(obj, options = {}) {\n  // 'deep' is slower but reasonable; 'shallow' a performance enhancement but with side-effects\n  const {\n    props,\n    ignore,\n    batch,\n    deep = true,\n    bubble,\n    bind\n  } = options\n\n  // Ignore if the object is already observed\n  if(obj[observedSymbol]) {\n    return obj\n  }\n\n  // If the prop is explicitely not excluded\n  const isWatched = (prop) =>\n    prop !== observedSymbol &&\n    (\n      (props == null) ||\n      (props instanceof Array) && props.includes(prop)\n    ) && (\n      (ignore == null) ||\n      (ignore instanceof Array) && ! ignore.includes(prop)\n    )\n\n  // If the deep flag is set, observe nested objects/arrays\n  if(deep) {\n    Object.entries(obj).forEach(function([key, val]) {\n      if(isObj(val) && isWatched(key)) {\n        obj[key] = observe(val, options)\n        // If bubble is set, we add keys to the object used to bubble up the mutation\n        if(bubble) {\n          defineBubblingProperties(obj[key], key, obj)\n        }\n      }\n    })\n  }\n  \n    function setObjectPropertyTo (obj, prop, value) {\n      if(prop === '__handler') {\n        // Don't track bubble handlers\n        setHiddenKey(obj, '__handler', value)\n      } else if(!isWatched(prop)) {\n        // If the prop is ignored\n        obj[prop] = value\n      } else if(Array.isArray(obj) && prop === 'length' || ValuesDiffer(obj[prop],value)) {\n        // If the new/old value are not equal\n        const deeper = (prop !== modifiedProperty) && deep && isObj(value)\n\n        // Remove bubbling infrastructure and pass old value to handlers\n        const oldValue = obj[prop]\n//      if(isObj(oldValue))\n//        delete obj[prop]\n\n        // If the deep flag is set we observe the newly set value\n        obj[prop] = deeper ? observe(value, options) : value\n\n        // Co-opt assigned object into bubbling if appropriate\n        if(deeper && bubble) {\n          defineBubblingProperties(obj[prop], prop, obj)\n        }\n\n        const ancestry = [ prop ]\n        let parent = obj\n        while(parent) {\n          // If a handler explicitly returns 'false' then stop propagation\n          if(parent.__handler && parent.__handler(ancestry, value, oldValue, proxy) === false) {\n            break\n          }\n          // Continue propagation, traversing the mutated property's object hierarchy & call any __handlers along the way\n          if(parent.__key && parent.__parent) {\n            ancestry.unshift(parent.__key)\n            parent = parent.__parent\n          } else {\n            parent = null\n          }\n        }\n\n        const dependents = propertiesMap.get(prop)\n        if(dependents) {\n          // Retrieve the computed functions depending on the prop\n          for(const dependent of dependents) {\n            const tracker = dependent[trackerSymbol]\n            const trackedObj = tracker && tracker.get(obj)\n            const tracked = trackedObj && trackedObj.has(prop)\n            // If the function has been disposed or if the prop has not been used\n            // during the latest function call, delete the function reference\n            if(dependent.__disposed || tracker && !tracked) {\n              dependents.delete(dependent)\n            } else if(dependent !== computedStack[0]) {\n              // Run the computed function\n              if(typeof batch !== 'undefined' && batch !== false) {\n                enqueue(dependent, batch)\n                dependent[__batched] = true\n              } else {\n                dependent()\n              }\n            }\n          }\n        }\n\n        if (prop !== modifiedProperty) {\n        \tobj[modifiedProperty] = prop\n        \t\n\t        const dependents = propertiesMap.get(modifiedProperty)\n\t        if(dependents) {\n\t          // Retrieve the computed functions depending on \"modifiedProperty\"\n\t          for(const dependent of dependents) {\n\t            const tracker = dependent[trackerSymbol]\n\t            const trackedObj = tracker && tracker.get(obj)\n\t            const tracked = trackedObj && trackedObj.has(modifiedProperty)\n\t            // If the function has been disposed or if \"modifiedProperty\" has not been used\n\t            // during the latest function call, delete the function reference\n\t            if(dependent.__disposed || tracker && !tracked) {\n\t              dependents.delete(dependent)\n\t            } else if(dependent !== computedStack[0]) {\n\t              // Run the computed function\n\t              if(typeof batch !== 'undefined' && batch !== false) {\n\t                enqueue(dependent, batch)\n\t                dependent[__batched] = true\n\t              } else {\n\t                dependent()\n\t              }\n\t            }\n\t          }\n\t        }\n        }\n      }\n    }\n\n  // For each observed object, each property is mapped with a set of computed functions depending on this property.\n  // Whenever a property is set, we re-run each one of the functions stored inside the matching Set.\n  const propertiesMap = new Map()\n\n  // Proxify the object in order to intercept get/set on props\n  const proxy = new Proxy(obj, {\n    get(_, prop) {\n      if(prop === observedSymbol)\n        return true\n\n      // If the prop is watched\n      if(isWatched(prop)) {\n        // If a computed function is being run\n        if(computedStack.length) {\n          const computedFn = computedStack[0]\n          // Tracks object and properties accessed during the function call\n          const tracker = computedFn[trackerSymbol]\n          if(tracker) {\n            let trackerSet = tracker.get(obj)\n            if(!trackerSet) {\n              trackerSet = new Set()\n              tracker.set(obj, trackerSet)\n            }\n            trackerSet.add(prop)\n          }\n          // Link the computed function and the property being accessed\n          let propertiesSet = propertiesMap.get(prop)\n          if(!propertiesSet) {\n            propertiesSet = new Set()\n            propertiesMap.set(prop, propertiesSet)\n          }\n          propertiesSet.add(computedFn)\n        }\n      }\n\n      return obj[prop]\n    },\n    set(_, prop, value) {\n      setObjectPropertyTo(obj, prop, value)\n      return true\n    },\n    defineProperty(_, prop, descriptor) {\n      if (prop === '__handler') {\n      \tthrow new Error(\"Don't track bubble handlers\")\n      } else if(!isWatched(prop)) {\n        // If the prop is ignored\n        return Reflect.defineProperty(obj,prop,descriptor)\n      } else if (! Array.isArray(obj) || (prop === 'length')) {\n      \tif (('value' in descriptor) && deep && isObj(descriptor.value)) {\n      \t  descriptor = {...descriptor} // do not modify the argument itself\n      \t  descriptor.value = observe(descriptor.value, options)\n      \t}\n      \tconst Outcome = Reflect.defineProperty(obj,prop,descriptor)\n      \t  if (prop !== modifiedProperty) {\n\t        \tobj[modifiedProperty] = prop\n\t        }\n      \treturn Outcome\n      }\n      return false\n    },\n    deleteProperty(_, prop) {\n    \tif (prop === modifiedProperty) throw new Error(\n    \t  'internal property Symbol(\"modifiedProperty\") must not be deleted'\n    \t)\n\n    \tif (prop in obj) {\n    \t\tsetObjectPropertyTo(obj, prop, undefined) // trigger observers one last time\n    \t}\n    \treturn Reflect.deleteProperty(_,prop)\n    }\n  })\n\n  if(bind) {\n    // Need this for binding es6 classes methods which are stored in the object prototype\n    getInstanceMethodKeys(obj).forEach(key => obj[key] = obj[key].bind(proxy))\n  }\n\n  return proxy\n}\n\n/**** ValuesDiffer - copied from \"javascript-interface-library\", then modified ****/\n\n  function ValuesDiffer (thisValue, otherValue, Mode) {\n  \tconst visitedObjects = new Map()\n  \t\n  \tfunction ValuesDoDiffer (thisValue, otherValue, Mode) {\n\t    if (thisValue === otherValue) { return false }\n\t\n\t    let thisType = typeof thisValue\n\t    if (thisType !== typeof otherValue) { return true }\n\t\n    /**** ArraysDiffer ****/\n\n      function ArraysDiffer (thisArray, otherArray, Mode) {\n        if (! Array.isArray(otherArray)) { return true }\n\n        if (thisArray.length !== otherArray.length) { return true }\n\n        if (visitedObjects.has(thisArray) || visitedObjects.has(otherArray)) {\n        \tif (visitedObjects.has(thisArray)  && visitedObjects.get(thisArray).has(otherArray)) { return false }\n        \tif (visitedObjects.has(otherArray) && visitedObjects.get(otherArray).has(thisArray)) { return false }\n        \t\n        \tif (! visitedObjects.has(thisArray)) { visitedObjects.set(thisArray, new Set()) }\n        \tvisitedObjects.get(thisArray).add(otherArray)\n        }\n        \n        for (let i = 0, l = thisArray.length; i < l; i++) {\n          if (ValuesDoDiffer(thisArray[i],otherArray[i],Mode)) { return true }\n        }\n\n        return false\n      }\n\n    /**** ObjectsDiffer ****/\n\n      function ObjectsDiffer (thisObject, otherObject, Mode='by-value') {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n          return true\n        }\n\n        for (let key in thisObject) {\n          if (! (key in otherObject)) { return true }\n        }\n\n        for (let key in otherObject) {\n          if (! (key in thisObject)) { return true }\n        }\n\n        if (visitedObjects.has(thisObject) || visitedObjects.has(otherObject)) {\n        \tif (visitedObjects.has(thisObject)  && visitedObjects.get(thisObject).has(otherObject)) { return false }\n        \tif (visitedObjects.has(otherObject) && visitedObjects.get(otherObject).has(thisObject)) { return false }\n        \t\n        \tif (! visitedObjects.has(thisObject)) { visitedObjects.set(thisObject, new Set()) }\n        \tvisitedObjects.get(thisObject).add(otherObject)\n        }\n\n        for (let key in thisObject) {\n          if (ValuesDoDiffer(thisObject[key],otherObject[key],Mode)) {\n            return true\n          }\n        }\n\n        return false\n      }\n\t\n\t    switch (thisType) {\n\t      case 'undefined':\n\t      case 'boolean':\n\t      case 'string':\n\t      case 'function': return true   // most primitives are compared using \"===\"\n\t      case 'number':   return (\n\t                         (isNaN(thisValue) !== isNaN(otherValue)) ||\n\t                         (Math.abs(thisValue-otherValue) > Number.EPSILON)\n\t                       )\n\t      case 'object':\n\t        if (thisValue  == null) { return true }  // since \"other_value\" != null!\n\t        if (otherValue == null) { return true }   // since \"this_value\" != null!\n\t\n\t        if ((Mode === 'by-value') && (\n\t          (thisValue instanceof Boolean) ||\n\t          (thisValue instanceof Number) ||\n\t          (thisValue instanceof String)\n\t        )) {\n\t          return (thisValue.valueOf() !== otherValue.valueOf())\n\t        }\n\t\n\t        if (Array.isArray(thisValue)) {\n\t          return ArraysDiffer(thisValue,otherValue,Mode)\n\t        }\n\t\n\t        return (\n\t          Mode === 'by-reference'\n\t          ? true                           // because (thisValue !== otherValue)\n\t          : ObjectsDiffer(thisValue,otherValue,Mode)\n\t        )\n\t      default: return true                          // unsupported property type\n\t    }\n\t\n\t    return true\n  \t}\n  \treturn ValuesDoDiffer(thisValue, otherValue, Mode)\n  }\n","import { data } from './data.js'\nconst { computedStack, trackerSymbol } = data\n\n/**\n * @typedef {Object} ComputedArguments - Computed Arguments.\n * @property {(fun: () => void) => void} computeAsync -\n * Will monitor the dependencies of the function passed as an argument. Useful when dealing with asynchronous computations.\n */\n\n/**\n * @typedef {Object} Options - Computed Options.\n * @property {boolean} [autoRun] -\n * If false, will not run the function argument when calling computed(function).\n * The computed function must be called **at least once** to calculate its dependencies.\n * @property {() => void} [callback] -\n * Specify a callback that will be re-runned each time a dependency changes instead of the computed function.\n */\n\n/**\n * Wraps a function and captures observed properties which are accessed during the function execution.\n * When those properties are mutated, the function is called to reflect the changes.\n *\n * @param {(args: ComputedArguments) => void} wrappedFunction\n * @param {Options} options\n */\nexport function computed(wrappedFunction, { autoRun = true, callback, bind, disableTracking = false } = {}) {\n  function observeComputation(fun, argsList = []) {\n    const target = callback || wrapper\n    // Track object and object properties accessed during this function call\n    if(!disableTracking) {\n      target[trackerSymbol] = new WeakMap()\n    }\n    // Store into the stack a reference to the computed function\n    computedStack.unshift(target)\n    // Inject the computeAsync argument which is used to manually declare when the computation takes part\n    if(argsList.length > 0) {\n      argsList = [...argsList, computeAsyncArg]\n    } else {\n      argsList = [computeAsyncArg]\n    }\n    // Run the computed function - or the async function\n    const result =\n      fun ? fun() :\n      bind ? wrappedFunction.apply(bind, argsList) :\n      wrappedFunction(...argsList)\n    // Remove the reference\n    computedStack.shift()\n    // Return the result\n    return result\n  }\n  const computeAsyncArg = { computeAsync: observeComputation }\n  const wrapper = (...argsList) => observeComputation(null, argsList)\n\n  // If autoRun, then call the function at once\n  if(autoRun) {\n    wrapper()\n  }\n\n  return wrapper\n}\n","import { data } from './data.js'\n\n/**\n * Will remove the computed function from the reactive Maps (the next time an bound observer property is called) allowing garbage collection.\n *\n * @param {Function} computedFunction\n */\nexport function dispose(computedFunction) {\n  computedFunction[data.trackerSymbol] = null\n  return computedFunction.__disposed = true\n}\n","import { observe, modifiedProperty } from './observe.js'\nimport { computed } from './computed.js'\nimport { dispose } from './dispose.js'\nimport { process } from './batcher.js'\n\nexport default {\n  observe, modifiedProperty,\n  computed,\n  dispose,\n  batch: process\n}\n","/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(this, this,this, html,reactively, onRender,onMount,onUnmount)\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\"></div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\">${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\">${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\">${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\">${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\">${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'/img/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}/>`\n    }\n  })\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableEMailAddress(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      let   Value           = acceptableTextline(my.Value,'').trim()\n        Value = Value.replace('C:\\\\fakepath\\\\','')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes)\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"line-height:${my.Height}px\">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'/img/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes)\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes)\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n        <span>${Placeholder}</span>\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          const OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}>\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'/img/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            const OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}>\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height}, L 0,0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height}, L ${Width},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,0, L ${Width},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},0, L 0,${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('complex Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('complex Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('complex Controls', 'QR-Code View', 'QRCodeView')\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({})\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this)\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function|undefined):void {\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["m","e","r","BIND_IGNORED","isObj","object","setHiddenKey","key","value","defineBubblingProperties","parent","getInstanceMethodKeys","prop","data","queue","__batched","process","task","enqueue","batch","computedStack","trackerSymbol","observedSymbol","modifiedProperty","observe","obj","options","props","ignore","deep","bubble","bind","isWatched","val","setObjectPropertyTo","ValuesDiffer","deeper","oldValue","ancestry","proxy","dependents","propertiesMap","dependent","tracker","trackedObj","tracked","_","computedFn","trackerSet","propertiesSet","descriptor","Outcome","thisValue","otherValue","Mode","visitedObjects","ValuesDoDiffer","thisType","ArraysDiffer","thisArray","otherArray","i","l","ObjectsDiffer","thisObject","otherObject","computed","wrappedFunction","autoRun","callback","disableTracking","observeComputation","fun","argsList","target","wrapper","computeAsyncArg","result","dispose","computedFunction","hyperactiv","ValueIsPhoneNumber","ValueIsTextline","BehaviorStyleElement","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","namedError","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","SNS_Changes","createBoard","Project","BoardId","Board","configureFolder","FolderId","Property","Folder","PropertySet","SNS_ProjectPropertySet","SNS_BoardPropertySet","attachBoard","Index","expectOrdinal","newFolder","oldFolder","sanitizeBoardList","detachBoard","destroyBoard","unregisterFolder","createSticker","StickerId","Sticker","configureSticker","SNS_StickerPropertySet","attachSticker","newBoard","oldBoard","sanitizeStickerList","detachSticker","destroySticker","unregisterSticker","allowOrdinal","BoardSet","BoardList","BoardFromList","StickerSet","StickerList","StickerFromList","defaultStickerGeometry","defaultMinWidth","defaultMaxWidth","defaultMinHeight","defaultMaxHeight","defaultGridWidth","defaultGridHeight","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableNumberInRange","minValue","maxValue","withMin","withMax","ValueIsNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","ValueIsInteger","acceptableOptionalInteger","acceptableIntegerInRange","ValueIsIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","ValueIsOrdinal","acceptableOptionalOrdinal","acceptableString","ValueIsString","acceptableOptionalString","acceptableNonEmptyString","acceptableOptionalNonEmptyString","acceptableStringMatching","Pattern","acceptableOptionalStringMatching","acceptableText","acceptableOptionalText","acceptableTextline","acceptableOptionalTextline","Result","acceptableFunction","ValueIsFunction","acceptableOptionalFunction","acceptableList","ValueIsList","acceptableOptionalList","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptableEMailAddress","ValueIsEMailAddress","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","CSSStyleOfVisual","ErrorRenderer","Error","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","registerFolder","FolderRegistry","Id","FolderWithId","StickerRegistryForProject","registerSticker","StickerRegistry","StickerWithId","removeIdsFrom","Serialization","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","normalizedBehaviorName","normalizedTemplate","BehaviorSetGroup","groupedBehaviorEntryList","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList","BehaviorSet","useBehavior","reactively","expectFunction","onRender","onMount","onUnmount","TemplateOfBehavior","me","my","PropSet","builtinSelection","builtinDragging","onKeyDown","Event","Editor","selectionStart","selectionEnd","onInput","Width","Height","DataURL","BorderRadius","onClick","Color","consumingEvent","Label","checked","indeterminate","Minimum","lowerBound","Optimum","upperBound","Maximum","HashmarkPattern","HashmarkMatcher","onBlur","Stepping","Hashmarks","HashmarkList","HashmarkId","Item","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionList","SuggestionId","TimePattern","TimeRegExp","TimeMatcher","DateTimePattern","DateTimeRegExp","DateTimeMatcher","DatePattern","DateRegExp","DateMatcher","WeekPattern","WeekRegExp","WeekMatcher","MonthPattern","MonthRegExp","MonthMatcher","onDragEnter","onDragOver","onDrop","consumeEvent","acceptableTypes","multiple","Icon","Options","Option","OptionValue","OptionLabel","LineWrapping","SVGSource","CSSStyleList","BackgroundColor","BackgroundTexture","ForegroundColor","FontFamily","FontSize","FontWeight","FontStyle","LineHeight","__publicField","newName","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","newScript","allowText","activeScript","compiledScript","Signal","newScriptError","newRenderer","newCallback","newError","Change","ArgList","serializeProperty","deserializeProperty","outerFolder","localPath","outerPath","Path","splitPath","Element","newSetting","allowBoolean","newWidth","allowCardinal","newHeight","BoardOrNameOrIndex","expectValue","expectInteger","allowInteger","BoardIndex","oldIndex","newIndex","Count","BoardCount","expectIntegerInRange","BoardsToShift","FolderOrNameOrIndex","Renderer","BoardSerialization","IndexPath","expectListSatisfying","Callback","StickerOrNameOrIndex","newSticker","StickerIndex","StickerCount","StickersToShift","StickerSerialization","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","x","y","newGeometry","newLock","expectBoolean","newVisibility","newEnabling","SNS_ConnectionStates","SNS_Adapter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}
{"version":3,"file":"shareableNoteStickers.js","sources":["../node_modules/javascript-interface-library/dist/javascript-interface-library.esm.js","../node_modules/preact/dist/preact.module.js","../node_modules/htm/dist/htm.module.js","../node_modules/htm/preact/index.module.js","../node_modules/nanoid/index.browser.js","../node_modules/nanoid-dictionary/lowercase.js","../node_modules/nanoid-dictionary/uppercase.js","../node_modules/nanoid-dictionary/numbers.js","../node_modules/nanoid-dictionary/nolookalikes.js","../node_modules/nanoid-dictionary/nolookalikes-safe.js","../node_modules/nanoid-dictionary/alphanumeric.js","../node_modules/nanoid-dictionary/index.js","../node_modules/hyperactiv/src/tools.js","../node_modules/hyperactiv/src/data.js","../node_modules/hyperactiv/src/batcher.js","../node_modules/hyperactiv/src/observe.js","../node_modules/hyperactiv/src/computed.js","../node_modules/hyperactiv/src/dispose.js","../node_modules/hyperactiv/src/index.js","../src/shareableNoteStickers.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n/**** get a reference to the \"global\" object ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n/**** Object_hasOwnProperty ****/\nfunction Object_hasOwnProperty(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n        ? Value.hasOwnProperty(PropertyName)\n        : Object.prototype.hasOwnProperty.call(Value, PropertyName));\n}\n/**** Object_isPrototypeOf ****/\nfunction Object_isPrototypeOf(Value, Candidate) {\n    return ((Value == null) || // let this method crash like its original\n        ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n        ? Value.isPrototypeOf(Candidate)\n        : Object.prototype.isPrototypeOf.call(Value, Candidate));\n}\n/**** Object_propertyIsEnumerable ****/\nfunction Object_propertyIsEnumerable(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n        ? Value.propertyIsEnumerable(PropertyName)\n        : Object.prototype.propertyIsEnumerable.call(Value, PropertyName));\n}\n/**** Object_toString ****/\nfunction Object_toString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toString' in Value) && (typeof Value.toString === 'function')\n        ? Value.toString()\n        : Object.prototype.toString.call(Value));\n}\n/**** Object_toLocaleString ****/\nfunction Object_toLocaleString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n        ? Value.toLocaleString()\n        : Object.prototype.toString.call(Value)); // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n}\n/**** Object_valueOf ****/\nfunction Object_valueOf(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n        ? Value.valueOf()\n        : Object.prototype.valueOf.call(Value));\n}\n/**** ObjectMergedWith ****/\nfunction ObjectMergedWith(TargetObject) {\n    var otherObjectList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherObjectList[_i - 1] = arguments[_i];\n    }\n    for (var i = 0, l = otherObjectList.length; i < l; i++) {\n        var otherObject = otherObjectList[i];\n        if (otherObject == null) {\n            continue;\n        }\n        if (typeof otherObject === 'object') {\n            for (var Key in otherObject) {\n                var Descriptor = Object.getOwnPropertyDescriptor(otherObject, Key);\n                if (Descriptor != null) {\n                    Object.defineProperty(TargetObject, Key, Descriptor);\n                }\n            }\n        }\n        else {\n            throwError('InvalidArgument: argument #' + (i + 1) + ' is not an object');\n        }\n    }\n    return TargetObject;\n}\n/**** throwError - simplifies construction of named errors ****/\nfunction throwError(Message) {\n    var Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message);\n    if (Match == null) {\n        throw new Error(Message);\n    }\n    else {\n        var namedError = new Error(Match[2]);\n        namedError.name = Match[1];\n        throw namedError;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n/**** ValueExists ****/\nfunction ValueExists(Value) {\n    return (Value != null);\n}\n/**** ValueIsMissing ****/\nfunction ValueIsMissing(Value) {\n    return (Value == null);\n}\n/**** ValueIsBoolean ****/\nfunction ValueIsBoolean(Value) {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean);\n}\n/**** ValueIsNumber ****/\nfunction ValueIsNumber(Value) {\n    return (typeof Value === 'number') || (Value instanceof Number);\n}\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\nfunction ValueIsFiniteNumber(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isFinite(Value.valueOf());\n}\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\nfunction ValueIsNaN(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isNaN(Value.valueOf());\n}\n/**** ValueIsNumberInRange ****/\nfunction ValueIsNumberInRange(Value, minValue, maxValue, withMin, withMax) {\n    if (withMin === void 0) { withMin = true; }\n    if (withMax === void 0) { withMax = true; }\n    if (!ValueIsNumber(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (!withMin && (Value === minValue)) ||\n                (Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n        else {\n            if ((Value < minValue) || (!withMin && (Value === minValue))) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsInteger ****/\nfunction ValueIsInteger(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value);\n}\n/**** ValueIsIntegerInRange ****/\nfunction ValueIsIntegerInRange(Value, minValue, maxValue) {\n    if (!ValueIsInteger(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (Value > maxValue)) {\n                return false;\n            }\n        }\n        else {\n            if (Value < minValue) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if (Value > maxValue) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsOrdinal ****/\nfunction ValueIsOrdinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0);\n}\n/**** ValueIsCardinal ****/\nfunction ValueIsCardinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1);\n}\n/**** ValueIsString ****/\nfunction ValueIsString(Value) {\n    return (typeof Value === 'string') || (Value instanceof String);\n}\n/**** ValueIs[Non]EmptyString ****/\nvar emptyStringPattern = /^\\s*$/;\nfunction ValueIsEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && emptyStringPattern.test(Value.valueOf());\n}\nfunction ValueIsNonEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && !emptyStringPattern.test(Value.valueOf());\n}\n/**** ValueIsStringMatching ****/\nfunction ValueIsStringMatching(Value, Pattern) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && Pattern.test(Value.valueOf());\n}\n/**** ValueIsText ****/\nvar noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsText(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsButCRLFPattern);\n}\n/**** ValueIsTextline ****/\nvar noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsTextline(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsPattern);\n}\n/**** ValueIsFunction ****/\nfunction ValueIsFunction(Value) {\n    return (typeof Value === 'function');\n}\n/**** ValueIsAnonymousFunction ****/\nfunction ValueIsAnonymousFunction(Value) {\n    return ((typeof Value === 'function') &&\n        ((Value.name == null) || (Value.name === '')));\n}\n/**** ValueIsNamedFunction ****/\nfunction ValueIsNamedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        (Value.name != null) && (Value.name !== ''));\n}\n/**** ValueIsNativeFunction ****/\nfunction ValueIsNativeFunction(Value) {\n    return ((typeof Value === 'function') &&\n        /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsScriptedFunction ****/\nfunction ValueIsScriptedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        !/^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsObject ****/\nfunction ValueIsObject(Value) {\n    return (Value != null) && (typeof Value === 'object');\n}\n/**** ValueIsPlainObject ****/\nfunction ValueIsPlainObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        (Object.getPrototypeOf(Value) === Object.prototype));\n}\n/**** ValueIsVanillaObject ****/\nfunction ValueIsVanillaObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        !(Value instanceof Object));\n}\n/**** ValueIsArray ****/\nvar ValueIsArray = Array.isArray;\n/**** ValueIsList (\"dense\" array) ****/\nfunction ValueIsList(Value, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        for (var i = 0, l = Value.length; i < l; i++) {\n            if (Value[i] === undefined) {\n                return false;\n            }\n        }\n        if (minLength != null) {\n            if (Value.length < minLength) {\n                return false;\n            }\n        }\n        if (maxLength != null) {\n            if (Value.length > maxLength) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**** ValueIsListSatisfying ****/\nfunction ValueIsListSatisfying(Value, Validator, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        try {\n            for (var i = 0, l = Value.length; i < l; i++) {\n                if (Validator(Value[i]) == false) {\n                    return false;\n                }\n            }\n            if (minLength != null) {\n                if (Value.length < minLength) {\n                    return false;\n                }\n            }\n            if (maxLength != null) {\n                if (Value.length > maxLength) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        catch (Signal) { /* nop */ }\n    }\n    return false;\n}\n/**** ValueIsInstanceOf ****/\nfunction ValueIsInstanceOf(Value, Constructor) {\n    return (Value instanceof Constructor);\n}\n/**** ValueInheritsFrom ****/\nfunction ValueInheritsFrom(Value, Prototype) {\n    return Object_isPrototypeOf(Prototype, Value);\n}\n/**** ValueIsDate ****/\nfunction ValueIsDate(Value) {\n    return (Value instanceof Date);\n}\n/**** ValueIsError ****/\nfunction ValueIsError(Value) {\n    return (Value instanceof Error);\n}\n/**** ValueIsPromise ****/\nfunction ValueIsPromise(Value) {\n    return (Value != null) && (typeof Value.then === 'function');\n}\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n/**** ValueIsRegExp ****/\nfunction ValueIsRegExp(Value) {\n    return (Value instanceof RegExp);\n}\n/**** ValueIsOneOf ****/\nfunction ValueIsOneOf(Value, ValueList) {\n    return (ValueList.indexOf(Value) >= 0);\n} // no automatic unboxing of boxed values and vice-versa!\n/**** ValueIsColor ****/\nfunction ValueIsColor(Value) {\n    return ValueIsString(Value) && (ColorSet.hasOwnProperty(Value) ||\n        /^#[a-fA-F0-9]{6}$/.test(Value) ||\n        /^#[a-fA-F0-9]{8}$/.test(Value) ||\n        /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) || // not perfect\n        /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    );\n}\n/**** ValueIsEMailAddress ****/\nvar EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n// see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\nfunction ValueIsEMailAddress(Value) {\n    return ValueIsStringMatching(Value, EMailAddressPattern);\n}\n/**** ValueIsURL ****/\nvar noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsURL(Value) {\n    if (!ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n        (Value === '')) {\n        return false;\n    }\n    try {\n        new URL(Value, 'file://');\n        return true;\n    }\n    catch (Signal) {\n        return false;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\nvar rejectNil = false;\nvar acceptNil = true;\n/**** validatedArgument ****/\nfunction validatedArgument(Description, Argument, ValueIsValid, NilIsAcceptable, Expectation) {\n    if (Argument == null) {\n        if (NilIsAcceptable) {\n            return Argument;\n        }\n        else {\n            throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n        }\n    }\n    else {\n        if (ValueIsValid(Argument)) {\n            switch (true) {\n                case Argument instanceof Boolean:\n                case Argument instanceof Number:\n                case Argument instanceof String:\n                    return Argument.valueOf(); // unboxes any primitives\n                default:\n                    return Argument;\n            }\n        }\n        else {\n            throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no valid \").concat(escaped(Expectation)));\n        }\n    }\n}\n/**** ValidatorForClassifier ****/\nfunction ValidatorForClassifier(Classifier, NilIsAcceptable, Expectation) {\n    var Validator = function (Description, Argument) {\n        return validatedArgument(Description, Argument, Classifier, NilIsAcceptable, Expectation);\n    };\n    var ClassifierName = Classifier.name;\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n        var ValidatorName = ClassifierName.replace(// derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect');\n        return FunctionWithName(Validator, ValidatorName);\n    }\n    else {\n        return Validator; // without any specific name\n    }\n}\n/**** FunctionWithName (works with older JS engines as well) ****/\nfunction FunctionWithName(originalFunction, desiredName) {\n    if (originalFunction == null) {\n        throwError('MissingArgument: no function given');\n    }\n    if (typeof originalFunction !== 'function') {\n        throwError('InvalidArgument: the given 1st Argument is not a JavaScript function');\n    }\n    if (desiredName == null) {\n        throwError('MissingArgument: no desired name given');\n    }\n    if ((typeof desiredName !== 'string') && !(desiredName instanceof String)) {\n        throwError('InvalidArgument: the given desired name is not a string');\n    }\n    if (originalFunction.name === desiredName) {\n        return originalFunction;\n    }\n    try {\n        Object.defineProperty(originalFunction, 'name', { value: desiredName });\n        if (originalFunction.name === desiredName) {\n            return originalFunction;\n        }\n    }\n    catch (signal) { /* ok - let's take the hard way */ }\n    var renamed = new Function('originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n        '}');\n    return renamed(originalFunction);\n} // also works with older JavaScript engines\n/**** expect[ed]Value ****/\nfunction expectValue(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    else {\n        return Argument.valueOf();\n    }\n}\nvar expectedValue = expectValue;\n/**** allow/expect[ed]Boolean ****/\nvar allowBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, acceptNil, 'boolean value'), allowedBoolean = allowBoolean;\nvar expectBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, rejectNil, 'boolean value'), expectedBoolean = expectBoolean;\n/**** allow/expect[ed]Number ****/\nvar allowNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, acceptNil, 'numeric value'), allowedNumber = allowNumber;\nvar expectNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, rejectNil, 'numeric value'), expectedNumber = expectNumber;\n/**** allow/expect[ed]FiniteNumber ****/\nvar allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, acceptNil, 'finite numeric value'), allowedFiniteNumber = allowFiniteNumber;\nvar expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, rejectNil, 'finite numeric value'), expectedFiniteNumber = expectFiniteNumber;\n/**** allow/expect[ed]NaN ****/\nvar allowNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, acceptNil, 'NaN value'), allowedNaN = allowNaN;\nvar expectNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, rejectNil, 'NaN value'), expectedNaN = expectNaN;\n/**** allow[ed]NumberInRange ****/\nfunction allowNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    return (Argument == null\n        ? Argument\n        : expectedNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax));\n}\nvar allowedNumberInRange = allowNumberInRange;\n/**** expect[ed]NumberInRange ****/\nfunction expectNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    expectNumber(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is not-a-number\"));\n    }\n    if (withMin == null) {\n        withMin = true;\n    }\n    if (withMax == null) {\n        withMax = true;\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue)) ||\n                (Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" (\").concat(Argument, \") is outside \") +\n                    \"the allowed range (\".concat(minValue, \"...\").concat(maxValue, \")\"));\n            }\n        }\n        else {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue))) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" is below the allowed \") +\n                    \"minimum (\".concat(Argument, \" \").concat(withMin ? '<' : '<=', \" \").concat(minValue, \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" exceeds the allowed \") +\n                    \"maximum (\".concat(Argument, \" \").concat(withMax ? '>' : '>=', \" \").concat(maxValue, \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedNumberInRange = expectNumberInRange;\n/**** allow/expect[ed]Integer ****/\nvar allowInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, acceptNil, 'integral numeric value'), allowedInteger = allowInteger;\nvar expectInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, rejectNil, 'integral numeric value'), expectedInteger = expectInteger;\n/**** allow[ed]IntegerInRange ****/\nfunction allowIntegerInRange(Description, Argument, minValue, maxValue) {\n    return (Argument == null\n        ? Argument\n        : expectedIntegerInRange(Description, Argument, minValue, maxValue));\n}\nvar allowedIntegerInRange = allowIntegerInRange;\n/**** expect[ed]IntegerInRange ****/\nfunction expectIntegerInRange(Description, Argument, minValue, maxValue) {\n    expectInteger(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is not-a-number\"));\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (Argument > maxValue)) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" (\").concat(Argument, \") is outside \") +\n                    \"the allowed range (\".concat(minValue, \"...\").concat(maxValue, \")\"));\n            }\n        }\n        else {\n            if (Argument < minValue) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" is below the allowed \") +\n                    \"minimum (\".concat(Argument, \" < \").concat(minValue, \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if (Argument > maxValue) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" exceeds the allowed \") +\n                    \"maximum (\".concat(Argument, \" > \").concat(maxValue, \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedIntegerInRange = expectIntegerInRange;\n/**** allow/expect[ed]Ordinal ****/\nvar allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, acceptNil, 'ordinal number'), allowedOrdinal = allowOrdinal;\nvar expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, rejectNil, 'ordinal number'), expectedOrdinal = expectOrdinal;\n/**** allow/expect[ed]Cardinal ****/\nvar allowCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, acceptNil, 'cardinal number'), allowedCardinal = allowCardinal;\nvar expectCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, rejectNil, 'cardinal number'), expectedCardinal = expectCardinal;\n/**** allow/expect[ed]String ****/\nvar allowString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, acceptNil, 'literal string'), allowedString = allowString;\nvar expectString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, rejectNil, 'literal string'), expectedString = expectString;\n/**** allow/expect[ed]NonEmptyString ****/\nvar allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, acceptNil, 'non-empty literal string'), allowedNonEmptyString = allowNonEmptyString;\nvar expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, rejectNil, 'non-empty literal string'), expectedNonEmptyString = expectNonEmptyString;\n/**** allow[ed]StringMatching ****/\nfunction allowStringMatching(Description, Argument, Pattern) {\n    return (Argument == null\n        ? Argument\n        : expectedStringMatching(Description, Argument, Pattern));\n}\nvar allowedStringMatching = allowStringMatching;\n/**** expect[ed]StringMatching ****/\nfunction expectStringMatching(Description, Argument, Pattern) {\n    expectString(Description, Argument);\n    if (Pattern.test(Argument)) {\n        return Argument.valueOf();\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" does not match the specified pattern\"));\n    }\n}\nvar expectedStringMatching = expectStringMatching;\n/**** allow/expect[ed]Text ****/\nvar allowText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, acceptNil, 'literal text'), allowedText = allowText;\nvar expectText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, rejectNil, 'literal text'), expectedText = expectText;\n/**** allow/expect[ed]Textline ****/\nvar allowTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, acceptNil, 'single line of text'), allowedTextline = allowTextline;\nvar expectTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, rejectNil, 'single line of text'), expectedTextline = expectTextline;\n/**** allow/expect[ed]Function ****/\nvar allowFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, acceptNil, 'JavaScript function'), allowedFunction = allowFunction;\nvar expectFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, rejectNil, 'JavaScript function'), expectedFunction = expectFunction;\n/**** allow/expect[ed]AnonymousFunction ****/\nvar allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'), allowedAnonymousFunction = allowAnonymousFunction;\nvar expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'), expectedAnonymousFunction = expectAnonymousFunction;\n/**** allow/expect[ed]NamedFunction ****/\nvar allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, acceptNil, 'named JavaScript function'), allowedNamedFunction = allowNamedFunction;\nvar expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, rejectNil, 'named JavaScript function'), expectedNamedFunction = expectNamedFunction;\n/**** allow/expect[ed]NativeFunction ****/\nvar allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, acceptNil, 'native JavaScript function'), allowedNativeFunction = allowNativeFunction;\nvar expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, rejectNil, 'native JavaScript function'), expectedNativeFunction = expectNativeFunction;\n/**** allow/expect[ed]ScriptedFunction ****/\nvar allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'), allowedScriptedFunction = allowScriptedFunction;\nvar expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'), expectedScriptedFunction = expectScriptedFunction;\n/**** allow/expect[ed]Object ****/\nvar allowObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, acceptNil, 'JavaScript object'), allowedObject = allowObject;\nvar expectObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, rejectNil, 'JavaScript object'), expectedObject = expectObject;\n/**** allow/expect[ed]PlainObject ****/\nvar allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'), allowedPlainObject = allowPlainObject;\nvar expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'), expectedPlainObject = expectPlainObject;\n/**** allow/expect[ed]VanillaObject ****/\nvar allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'), allowedVanillaObject = allowVanillaObject;\nvar expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'), expectedVanillaObject = expectVanillaObject;\n/**** allow[ed]Array ****/\nfunction allowArray(Description, Argument) {\n    return (Argument == null\n        ? Argument\n        : expectedArray(Description, Argument));\n}\nvar allowedArray = allowArray;\n/**** expect[ed]Array ****/\nfunction expectArray(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsArray(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no JavaScript array\"));\n    }\n}\nvar expectedArray = expectArray;\n/**** allow[ed]List ****/\nfunction allowList(Description, Argument, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedList(Description, Argument, Expectation, minLength, maxLength));\n}\nvar allowedList = allowList;\n/**** expect[ed]List ****/\nfunction expectList(Description, Argument, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsList(Argument, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is \") + (Expectation == null\n            ? 'either not a list or contains an invalid number of elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedList = expectList;\n/**** allow[ed]ListSatisfying ****/\nfunction allowListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength));\n}\nvar allowedListSatisfying = allowListSatisfying;\n/**** expect[ed]ListSatisfying ****/\nfunction expectListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsListSatisfying(Argument, Validator, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is \") + (Expectation == null\n            ? 'either not a list or contains invalid elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedListSatisfying = expectListSatisfying;\n/**** allow[ed]InstanceOf ****/\nfunction allowInstanceOf(Description, Argument, constructor, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedInstanceOf(Description, Argument, constructor, Expectation));\n}\nvar allowedInstanceOf = allowInstanceOf;\n/**** expect[ed]InstanceOf ****/\nfunction expectInstanceOf(Description, Argument, constructor, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (!(Argument instanceof constructor)) {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no \").concat(escaped(Expectation)));\n    }\n    return Argument;\n}\nvar expectedInstanceOf = expectInstanceOf;\n/**** allow[ed]ValueInheritingFrom ****/\nfunction allowValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedValueInheritingFrom(Description, Argument, prototype, Expectation));\n}\nvar allowedValueInheritingFrom = allowValueInheritingFrom;\n/**** expect[ed]ValueInheritingFrom ****/\nfunction expectValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (prototype.isPrototypeOf(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no \").concat(escaped(Expectation)));\n    }\n}\nvar expectedValueInheritingFrom = expectValueInheritingFrom;\n/**** allow/expect[ed]Date ****/\nvar allowDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, acceptNil, 'JavaScript Date object'), allowedDate = allowDate;\nvar expectDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, rejectNil, 'JavaScript Date object'), expectedDate = expectDate;\n/**** allow/expect[ed]Error ****/\nvar allowError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, acceptNil, 'JavaScript Error object'), allowedError = allowError;\nvar expectError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, rejectNil, 'JavaScript Error object'), expectedError = expectError;\n/**** allow/expect[ed]Promise ****/\nvar allowPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'), allowedPromise = allowPromise;\nvar expectPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'), expectedPromise = expectPromise;\n/**** allow/expect[ed]RegExp ****/\nvar allowRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, acceptNil, 'JavaScript RegExp object'), allowedRegExp = allowRegExp;\nvar expectRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, rejectNil, 'JavaScript RegExp object'), expectedRegExp = expectRegExp;\n/**** allow[ed]OneOf ****/\nfunction allowOneOf(Description, Argument, ValueList) {\n    return (Argument == null\n        ? Argument\n        : expectedOneOf(Description, Argument, ValueList));\n}\nvar allowedOneOf = allowOneOf;\n/**** expect[ed]OneOf ****/\nfunction expectOneOf(Description, Argument, ValueList) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsOneOf(Argument, ValueList)) {\n        return ( // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n            ? Argument\n            : Argument.valueOf());\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is not among the supported values\"));\n    }\n}\nvar expectedOneOf = expectOneOf;\n/**** allow/expect[ed]Color ****/\nvar allowColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, acceptNil, 'CSS color specification'), allowedColor = allowColor;\nvar expectColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, rejectNil, 'CSS color specification'), expectedColor = expectColor;\n/**** allow/expect[ed]EMailAddress ****/\nvar allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, acceptNil, 'EMail address'), allowedEMailAddress = allowEMailAddress;\nvar expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, rejectNil, 'EMail address'), expectedEMailAddress = expectEMailAddress;\n/**** allow/expect[ed]URL ****/\nvar allowURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, acceptNil, 'URL'), allowedURL = allowURL;\nvar expectURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, rejectNil, 'URL'), expectedURL = expectURL;\n/**** escaped - escapes all control characters in a given string ****/\nfunction escaped(Text) {\n    var EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match);\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** unescaped - evaluates all escape sequences in a given string ****/\nfunction unescaped(Text) {\n    var EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        switch (Match) {\n            case '\\\\0': return '\\0';\n            case '\\\\b': return '\\b';\n            case '\\\\f': return '\\f';\n            case '\\\\n': return '\\n';\n            case '\\\\r': return '\\r';\n            case '\\\\t': return '\\t';\n            case '\\\\v': return '\\v';\n            case '\\\\\\'': return \"'\";\n            case '\\\\\"': return '\"';\n            case '\\\\\\\\': return \"\\\\\";\n            default: {\n                var CharCode = parseInt(Match.slice(2), 16);\n                return String.fromCharCode(CharCode);\n            }\n        }\n    });\n}\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\nfunction quotable(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    var EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g;\n    var EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern, function (Match) {\n        switch (Match) {\n            case \"'\": return \"\\\\'\";\n            case '\"': return '\\\\\"';\n            case '\\\\': return '\\\\\\\\';\n            default: return Match;\n        }\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** quoted ****/\nfunction quoted(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    return Quote + quotable(Text, Quote) + Quote;\n}\n/**** HTMLsafe ****/\nfunction HTMLsafe(Argument, EOLReplacement) {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>';\n    return Argument.replace(/[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match) {\n        switch (Match) {\n            case '&': return '&amp;';\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case \"'\": return '&apos;';\n            case '\\b': return '&#92;b';\n            case '\\f': return '&#92;f';\n            case '\\n': return EOLReplacement;\n            case '\\r': return '&#92;r';\n            case '\\t': return '&#92;t';\n            case '\\v': return '&#92;v';\n            case '\\\\': return '&#92;';\n            default:\n                var Result = Match.charCodeAt(0).toString(16);\n                return '&#x0000'.substring(3, 7 - Result.length) + Result + ';';\n        }\n    });\n}\n/**** MarkDownSafe ****/\nfunction MarkDownSafe(Argument, EOLReplacement) {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g, '&#58;');\n}\n/**** ValuesDiffer ****/\nfunction ValuesDiffer(thisValue, otherValue, Mode) {\n    if (thisValue === otherValue) {\n        return false;\n    }\n    var thisType = typeof thisValue;\n    if (thisType !== typeof otherValue) {\n        return true;\n    }\n    /**** ArraysDiffer ****/\n    function ArraysDiffer(thisArray, otherArray, Mode) {\n        if (!Array.isArray(otherArray)) {\n            return true;\n        }\n        if (thisArray.length !== otherArray.length) {\n            return true;\n        }\n        for (var i = 0, l = thisArray.length; i < l; i++) {\n            if (ValuesDiffer(thisArray[i], otherArray[i], Mode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**** ObjectsDiffer ****/\n    function ObjectsDiffer(thisObject, otherObject, Mode) {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n            return true;\n        }\n        for (var key in thisObject) {\n            if (!(key in otherObject)) {\n                return true;\n            }\n        }\n        for (var key in otherObject) {\n            if (!(key in thisObject)) {\n                return true;\n            }\n            if (ValuesDiffer(thisObject[key], otherObject[key], Mode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    switch (thisType) {\n        case 'undefined':\n        case 'boolean':\n        case 'string':\n        case 'function': return true; // most primitives are compared using \"===\"\n        case 'number': return ((isNaN(thisValue) !== isNaN(otherValue)) ||\n            (Math.abs(thisValue - otherValue) > Number.EPSILON));\n        case 'object':\n            if (thisValue == null) {\n                return true;\n            } // since \"other_value\" != null!\n            if (otherValue == null) {\n                return true;\n            } // since \"this_value\" != null!\n            if ((Mode === 'by-value') && ((thisValue instanceof Boolean) ||\n                (thisValue instanceof Number) ||\n                (thisValue instanceof String))) {\n                return (thisValue.valueOf() !== otherValue.valueOf());\n            }\n            if (Array.isArray(thisValue)) {\n                return ArraysDiffer(thisValue, otherValue, Mode);\n            }\n            return (Mode === 'by-reference'\n                ? true // because (thisValue !== otherValue)\n                : ObjectsDiffer(thisValue, otherValue, Mode));\n        default: return true; // unsupported property type\n    }\n    return true;\n}\n/**** ValuesAreEqual ****/\nfunction ValuesAreEqual(thisValue, otherValue, Mode) {\n    return !ValuesDiffer(thisValue, otherValue, Mode);\n}\n/**** ObjectIsEmpty ****/\nfunction ObjectIsEmpty(Candidate) {\n    expectObject('candidate', Candidate);\n    for (var Key in Candidate) {\n        if (Object_hasOwnProperty(Candidate, Key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**** ObjectIsNotEmpty ****/\nfunction ObjectIsNotEmpty(Candidate) {\n    return !ObjectIsEmpty(Candidate);\n}\n/**** StringIsEmpty ****/\nfunction StringIsEmpty(Candidate) {\n    return /^\\s*$/.test(Candidate);\n}\n/**** StringIsNotEmpty ****/\nfunction StringIsNotEmpty(Candidate) {\n    return !StringIsEmpty(Candidate);\n}\n/**** constrained ****/\nfunction constrained(Value, Minimum, Maximum) {\n    if (Minimum === void 0) { Minimum = -Infinity; }\n    if (Maximum === void 0) { Maximum = Infinity; }\n    return Math.max(Minimum, Math.min(Value, Maximum));\n}\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\nvar ColorSet = {\n    transparent: 'rgba(0,0,0,0,0.0)',\n    aliceblue: 'rgba(240,248,255,1.0)', lightpink: 'rgba(255,182,193,1.0)',\n    antiquewhite: 'rgba(250,235,215,1.0)', lightsalmon: 'rgba(255,160,122,1.0)',\n    aqua: 'rgba(0,255,255,1.0)', lightseagreen: 'rgba(32,178,170,1.0)',\n    aquamarine: 'rgba(127,255,212,1.0)', lightskyblue: 'rgba(135,206,250,1.0)',\n    azure: 'rgba(240,255,255,1.0)', lightslategray: 'rgba(119,136,153,1.0)',\n    beige: 'rgba(245,245,220,1.0)', lightslategrey: 'rgba(119,136,153,1.0)',\n    bisque: 'rgba(255,228,196,1.0)', lightsteelblue: 'rgba(176,196,222,1.0)',\n    black: 'rgba(0,0,0,1.0)', lightyellow: 'rgba(255,255,224,1.0)',\n    blanchedalmond: 'rgba(255,235,205,1.0)', lime: 'rgba(0,255,0,1.0)',\n    blue: 'rgba(0,0,255,1.0)', limegreen: 'rgba(50,205,50,1.0)',\n    blueviolet: 'rgba(138,43,226,1.0)', linen: 'rgba(250,240,230,1.0)',\n    brown: 'rgba(165,42,42,1.0)', magenta: 'rgba(255,0,255,1.0)',\n    burlywood: 'rgba(222,184,135,1.0)', maroon: 'rgba(128,0,0,1.0)',\n    cadetblue: 'rgba(95,158,160,1.0)', mediumaquamarine: 'rgba(102,205,170,1.0)',\n    chartreuse: 'rgba(127,255,0,1.0)', mediumblue: 'rgba(0,0,205,1.0)',\n    chocolate: 'rgba(210,105,30,1.0)', mediumorchid: 'rgba(186,85,211,1.0)',\n    coral: 'rgba(255,127,80,1.0)', mediumpurple: 'rgba(147,112,219,1.0)',\n    cornflowerblue: 'rgba(100,149,237,1.0)', mediumseagreen: 'rgba(60,179,113,1.0)',\n    cornsilk: 'rgba(255,248,220,1.0)', mediumslateblue: 'rgba(123,104,238,1.0)',\n    crimson: 'rgba(220,20,60,1.0)', mediumspringgreen: 'rgba(0,250,154,1.0)',\n    cyan: 'rgba(0,255,255,1.0)', mediumturquoise: 'rgba(72,209,204,1.0)',\n    darkblue: 'rgba(0,0,139,1.0)', mediumvioletred: 'rgba(199,21,133,1.0)',\n    darkcyan: 'rgba(0,139,139,1.0)', midnightblue: 'rgba(25,25,112,1.0)',\n    darkgoldenrod: 'rgba(184,134,11,1.0)', mintcream: 'rgba(245,255,250,1.0)',\n    darkgray: 'rgba(169,169,169,1.0)', mistyrose: 'rgba(255,228,225,1.0)',\n    darkgreen: 'rgba(0,100,0,1.0)', moccasin: 'rgba(255,228,181,1.0)',\n    darkgrey: 'rgba(169,169,169,1.0)', navajowhite: 'rgba(255,222,173,1.0)',\n    darkkhaki: 'rgba(189,183,107,1.0)', navy: 'rgba(0,0,128,1.0)',\n    darkmagenta: 'rgba(139,0,139,1.0)', oldlace: 'rgba(253,245,230,1.0)',\n    darkolivegreen: 'rgba(85,107,47,1.0)', olive: 'rgba(128,128,0,1.0)',\n    darkorange: 'rgba(255,140,0,1.0)', olivedrab: 'rgba(107,142,35,1.0)',\n    darkorchid: 'rgba(153,50,204,1.0)', orange: 'rgba(255,165,0,1.0)',\n    darkred: 'rgba(139,0,0,1.0)', orangered: 'rgba(255,69,0,1.0)',\n    darksalmon: 'rgba(233,150,122,1.0)', orchid: 'rgba(218,112,214,1.0)',\n    darkseagreen: 'rgba(143,188,143,1.0)', palegoldenrod: 'rgba(238,232,170,1.0)',\n    darkslateblue: 'rgba(72,61,139,1.0)', palegreen: 'rgba(152,251,152,1.0)',\n    darkslategray: 'rgba(47,79,79,1.0)', paleturquoise: 'rgba(175,238,238,1.0)',\n    darkslategrey: 'rgba(47,79,79,1.0)', palevioletred: 'rgba(219,112,147,1.0)',\n    darkturquoise: 'rgba(0,206,209,1.0)', papayawhip: 'rgba(255,239,213,1.0)',\n    darkviolet: 'rgba(148,0,211,1.0)', peachpuff: 'rgba(255,218,185,1.0)',\n    deeppink: 'rgba(255,20,147,1.0)', peru: 'rgba(205,133,63,1.0)',\n    deepskyblue: 'rgba(0,191,255,1.0)', pink: 'rgba(255,192,203,1.0)',\n    dimgray: 'rgba(105,105,105,1.0)', plum: 'rgba(221,160,221,1.0)',\n    dimgrey: 'rgba(105,105,105,1.0)', powderblue: 'rgba(176,224,230,1.0)',\n    dodgerblue: 'rgba(30,144,255,1.0)', purple: 'rgba(128,0,128,1.0)',\n    firebrick: 'rgba(178,34,34,1.0)', red: 'rgba(255,0,0,1.0)',\n    floralwhite: 'rgba(255,250,240,1.0)', rosybrown: 'rgba(188,143,143,1.0)',\n    forestgreen: 'rgba(34,139,34,1.0)', royalblue: 'rgba(65,105,225,1.0)',\n    fuchsia: 'rgba(255,0,255,1.0)', saddlebrown: 'rgba(139,69,19,1.0)',\n    gainsboro: 'rgba(220,220,220,1.0)', salmon: 'rgba(250,128,114,1.0)',\n    ghostwhite: 'rgba(248,248,255,1.0)', sandybrown: 'rgba(244,164,96,1.0)',\n    gold: 'rgba(255,215,0,1.0)', seagreen: 'rgba(46,139,87,1.0)',\n    goldenrod: 'rgba(218,165,32,1.0)', seashell: 'rgba(255,245,238,1.0)',\n    gray: 'rgba(128,128,128,1.0)', sienna: 'rgba(160,82,45,1.0)',\n    green: 'rgba(0,128,0,1.0)', silver: 'rgba(192,192,192,1.0)',\n    greenyellow: 'rgba(173,255,47,1.0)', skyblue: 'rgba(135,206,235,1.0)',\n    grey: 'rgba(128,128,128,1.0)', slateblue: 'rgba(106,90,205,1.0)',\n    honeydew: 'rgba(240,255,240,1.0)', slategray: 'rgba(112,128,144,1.0)',\n    hotpink: 'rgba(255,105,180,1.0)', slategrey: 'rgba(112,128,144,1.0)',\n    indianred: 'rgba(205,92,92,1.0)', snow: 'rgba(255,250,250,1.0)',\n    indigo: 'rgba(75,0,130,1.0)', springgreen: 'rgba(0,255,127,1.0)',\n    ivory: 'rgba(255,255,240,1.0)', steelblue: 'rgba(70,130,180,1.0)',\n    khaki: 'rgba(240,230,140,1.0)', tan: 'rgba(210,180,140,1.0)',\n    lavender: 'rgba(230,230,250,1.0)', teal: 'rgba(0,128,128,1.0)',\n    lavenderblush: 'rgba(255,240,245,1.0)', thistle: 'rgba(216,191,216,1.0)',\n    lawngreen: 'rgba(124,252,0,1.0)', tomato: 'rgba(255,99,71,1.0)',\n    lemonchiffon: 'rgba(255,250,205,1.0)', turquoise: 'rgba(64,224,208,1.0)',\n    lightblue: 'rgba(173,216,230,1.0)', violet: 'rgba(238,130,238,1.0)',\n    lightcoral: 'rgba(240,128,128,1.0)', wheat: 'rgba(245,222,179,1.0)',\n    lightcyan: 'rgba(224,255,255,1.0)', white: 'rgba(255,255,255,1.0)',\n    lightgoldenrodyellow: 'rgba(250,250,210,1.0)', whitesmoke: 'rgba(245,245,245,1.0)',\n    lightgray: 'rgba(211,211,211,1.0)', yellow: 'rgba(255,255,0,1.0)',\n    lightgreen: 'rgba(144,238,144,1.0)', yellowgreen: 'rgba(154,205,50,1.0)',\n    lightgrey: 'rgba(211,211,211,1.0)',\n};\n/**** HexColor - converts a given color to #rrggbbaa ****/\nfunction HexColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        Color = ColorSet[lowerColor];\n    } // do not return here as color is now in RGBA format\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return Color + 'FF';\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return Color;\n    }\n    var HexDigit = '0123456789ABCDEF';\n    function dec2hex(Value) {\n        if (Value > 255) {\n            Value = 255;\n        }\n        return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16];\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; // not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) + 'FF');\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) +\n            dec2hex(parseFloat(Match[4]) * 255));\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\nfunction RGBAColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        return ColorSet[lowerColor]; // color is already in RGBA format\n    }\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ', 1' +\n            ')');\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ',' +\n            (parseInt(Color.slice(7), 16) / 255) +\n            ')');\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; //not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return Color.slice(0, Color.length - 1) + ',1)';\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return Color;\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** shortHexColor - converts a given color into #RRGGBB ****/\nfunction shortHexColor(Color) {\n    return HexColor(Color).slice(0, 7);\n}\n\nexport { ColorSet, FunctionWithName, HTMLsafe, HexColor, MarkDownSafe, ObjectIsEmpty, ObjectIsNotEmpty, ObjectMergedWith, Object_hasOwnProperty, Object_isPrototypeOf, Object_propertyIsEnumerable, Object_toLocaleString, Object_toString, Object_valueOf, RGBAColor, StringIsEmpty, StringIsNotEmpty, ValidatorForClassifier, ValueExists, ValueInheritsFrom, ValueIsAnonymousFunction, ValueIsArray, ValueIsBoolean, ValueIsCardinal, ValueIsColor, ValueIsDate, ValueIsEMailAddress, ValueIsEmptyString, ValueIsError, ValueIsFiniteNumber, ValueIsFunction, ValueIsInstanceOf, ValueIsInteger, ValueIsIntegerInRange, ValueIsList, ValueIsListSatisfying, ValueIsMissing, ValueIsNaN, ValueIsNamedFunction, ValueIsNativeFunction, ValueIsNonEmptyString, ValueIsNumber, ValueIsNumberInRange, ValueIsObject, ValueIsOneOf, ValueIsOrdinal, ValueIsPlainObject, ValueIsPromise, ValueIsRegExp, ValueIsScriptedFunction, ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline, ValueIsURL, ValueIsVanillaObject, ValuesAreEqual, ValuesDiffer, acceptNil, allowAnonymousFunction, allowArray, allowBoolean, allowCardinal, allowColor, allowDate, allowEMailAddress, allowError, allowFiniteNumber, allowFunction, allowInstanceOf, allowInteger, allowIntegerInRange, allowList, allowListSatisfying, allowNaN, allowNamedFunction, allowNativeFunction, allowNonEmptyString, allowNumber, allowNumberInRange, allowObject, allowOneOf, allowOrdinal, allowPlainObject, allowPromise, allowRegExp, allowScriptedFunction, allowString, allowStringMatching, allowText, allowTextline, allowURL, allowValueInheritingFrom, allowVanillaObject, allowedAnonymousFunction, allowedArray, allowedBoolean, allowedCardinal, allowedColor, allowedDate, allowedEMailAddress, allowedError, allowedFiniteNumber, allowedFunction, allowedInstanceOf, allowedInteger, allowedIntegerInRange, allowedList, allowedListSatisfying, allowedNaN, allowedNamedFunction, allowedNativeFunction, allowedNonEmptyString, allowedNumber, allowedNumberInRange, allowedObject, allowedOneOf, allowedOrdinal, allowedPlainObject, allowedPromise, allowedRegExp, allowedScriptedFunction, allowedString, allowedStringMatching, allowedText, allowedTextline, allowedURL, allowedValueInheritingFrom, allowedVanillaObject, constrained, escaped, expectAnonymousFunction, expectArray, expectBoolean, expectCardinal, expectColor, expectDate, expectEMailAddress, expectError, expectFiniteNumber, expectFunction, expectInstanceOf, expectInteger, expectIntegerInRange, expectList, expectListSatisfying, expectNaN, expectNamedFunction, expectNativeFunction, expectNonEmptyString, expectNumber, expectNumberInRange, expectObject, expectOneOf, expectOrdinal, expectPlainObject, expectPromise, expectRegExp, expectScriptedFunction, expectString, expectStringMatching, expectText, expectTextline, expectURL, expectValue, expectValueInheritingFrom, expectVanillaObject, expectedAnonymousFunction, expectedArray, expectedBoolean, expectedCardinal, expectedColor, expectedDate, expectedEMailAddress, expectedError, expectedFiniteNumber, expectedFunction, expectedInstanceOf, expectedInteger, expectedIntegerInRange, expectedList, expectedListSatisfying, expectedNaN, expectedNamedFunction, expectedNativeFunction, expectedNonEmptyString, expectedNumber, expectedNumberInRange, expectedObject, expectedOneOf, expectedOrdinal, expectedPlainObject, expectedPromise, expectedRegExp, expectedScriptedFunction, expectedString, expectedStringMatching, expectedText, expectedTextline, expectedURL, expectedValue, expectedValueInheritingFrom, expectedVanillaObject, global, quotable, quoted, rejectNil, shortHexColor, throwError, unescaped, validatedArgument };\n//# sourceMappingURL=javascript-interface-library.esm.js.map\n","var n,l,u,t,i,o,r,f,e,c,s,a,h={},p=[],v=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,y=Array.isArray;function d(n,l){for(var u in l)n[u]=l[u];return n}function w(n){var l=n.parentNode;l&&l.removeChild(n)}function _(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return g(l,f,i,o,null)}function g(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function m(){return{current:null}}function k(n){return n.children}function b(n,l){this.props=n,this.context=l}function x(n,l){if(null==l)return n.__?x(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?x(n):null}function C(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return C(n)}}function M(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!P.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(P)}function P(){var n,u,t,o,r,e,c,s;for(i.sort(f);n=i.shift();)n.__d&&(u=i.length,o=void 0,e=(r=(t=n).__v).__e,c=[],s=[],t.__P&&((o=d({},r)).__v=r.__v+1,l.vnode&&l.vnode(o),O(t.__P,o,r,t.__n,t.__P.namespaceURI,32&r.__u?[e]:null,c,null==e?x(r):e,!!(32&r.__u),s),o.__v=r.__v,o.__.__k[o.__i]=o,j(c,o,s),o.__e!=e&&C(o)),i.length>u&&i.sort(f));P.__r=0}function S(n,l,u,t,i,o,r,f,e,c,s){var a,v,y,d,w,_=t&&t.__k||p,g=l.length;for(u.__d=e,$(u,l,_),e=u.__d,a=0;a<g;a++)null!=(y=u.__k[a])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(v=-1===y.__i?h:_[y.__i]||h,y.__i=a,O(n,y,v,i,o,r,f,e,c,s),d=y.__e,y.ref&&v.ref!=y.ref&&(v.ref&&N(v.ref,null,y),s.push(y.ref,y.__c||d,y)),null==w&&null!=d&&(w=d),65536&y.__u||v.__k===y.__k?(e&&!e.isConnected&&(e=x(v)),e=I(y,e,n)):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=w}function $(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)r=t+a,null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?g(null,i,null,null,null):y(i)?g(k,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?g(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=L(i,u,r,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:f<r?f==r-1&&(a=f-r):a=0,f!==t+a&&(i.__u|=65536))):(o=u[r])&&null==o.key&&o.__e&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=x(o)),V(o,o,!1),u[r]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=x(o)),V(o,o))}function I(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=I(t[i],l,u));return l}n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling}while(null!=l&&8===l.nodeType);return l}function H(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(y(n)?n.some(function(n){H(n,l)}):l.push(n)),l}function L(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type&&0==(131072&e.__u))return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||v.test(l)?u:u+\"px\"}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n||\"onFocusOut\"===l||\"onFocusIn\"===l?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=e,n.addEventListener(l,o?s:c,o)):n.removeEventListener(l,o?s:c,o);else{if(\"http://www.w3.org/2000/svg\"==i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!=l&&\"height\"!=l&&\"href\"!=l&&\"list\"!=l&&\"form\"!=l&&\"tabIndex\"!=l&&\"download\"!=l&&\"rowSpan\"!=l&&\"colSpan\"!=l&&\"role\"!=l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u))}}function F(n){return function(u){if(this.l){var t=this.l[u.type+n];if(null==u.t)u.t=e++;else if(u.t<t.u)return;return t(l.event?l.event(u):u)}}}function O(n,u,t,i,o,r,f,e,c,s){var a,h,p,v,w,_,g,m,x,C,M,P,$,I,H,L=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof L)try{if(m=u.props,x=(a=L.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?g=(h=u.__c=t.__c).__=h.__E:(\"prototype\"in L&&L.prototype.render?u.__c=h=new L(m,C):(u.__c=h=new b(m,C),h.constructor=L,h.render=q),x&&x.sub(h),h.props=m,h.state||(h.state={}),h.context=C,h.__n=i,p=h.__d=!0,h.__h=[],h._sb=[]),null==h.__s&&(h.__s=h.state),null!=L.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=d({},h.__s)),d(h.__s,L.getDerivedStateFromProps(m,h.__s))),v=h.props,w=h.state,h.__v=u,p)null==L.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==L.getDerivedStateFromProps&&m!==v&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(m,C),!h.__e&&(null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(m,h.__s,C)||u.__v===t.__v)){for(u.__v!==t.__v&&(h.props=m,h.state=h.__s,h.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u)}),M=0;M<h._sb.length;M++)h.__h.push(h._sb[M]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(m,h.__s,C),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(v,w,_)})}if(h.context=C,h.props=m,h.__P=n,h.__e=!1,P=l.__r,$=0,\"prototype\"in L&&L.prototype.render){for(h.state=h.__s,h.__d=!1,P&&P(u),a=h.render(h.props,h.state,h.context),I=0;I<h._sb.length;I++)h.__h.push(h._sb[I]);h._sb=[]}else do{h.__d=!1,P&&P(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++$<25);h.state=h.__s,null!=h.getChildContext&&(i=d(d({},i),h.getChildContext())),p||null==h.getSnapshotBeforeUpdate||(_=h.getSnapshotBeforeUpdate(v,w)),S(n,y(H=null!=a&&a.type===k&&null==a.key?a.props.children:a)?H:[H],u,t,i,o,r,f,e,c,s),h.base=u.__e,u.__u&=-161,h.__h.length&&f.push(h),g&&(h.__E=h.__=null)}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function j(n,u,t){u.__d=void 0;for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function z(l,u,t,i,o,r,f,e,c){var s,a,p,v,d,_,g,m=t.props,k=u.props,b=u.type;if(\"svg\"===b?o=\"http://www.w3.org/2000/svg\":\"math\"===b?o=\"http://www.w3.org/1998/Math/MathML\":o||(o=\"http://www.w3.org/1999/xhtml\"),null!=r)for(s=0;s<r.length;s++)if((d=r[s])&&\"setAttribute\"in d==!!b&&(b?d.localName===b:3===d.nodeType)){l=d,r[s]=null;break}if(null==l){if(null===b)return document.createTextNode(k);l=document.createElementNS(o,b,k.is&&k),r=null,e=!1}if(null===b)m===k||e&&l.data===k||(l.data=k);else{if(r=r&&n.call(l.childNodes),m=t.props||h,!e&&null!=r)for(m={},s=0;s<l.attributes.length;s++)m[(d=l.attributes[s]).name]=d.value;for(s in m)if(d=m[s],\"children\"==s);else if(\"dangerouslySetInnerHTML\"==s)p=d;else if(\"key\"!==s&&!(s in k)){if(\"value\"==s&&\"defaultValue\"in k||\"checked\"==s&&\"defaultChecked\"in k)continue;A(l,s,null,d,o)}for(s in k)d=k[s],\"children\"==s?v=d:\"dangerouslySetInnerHTML\"==s?a=d:\"value\"==s?_=d:\"checked\"==s?g=d:\"key\"===s||e&&\"function\"!=typeof d||m[s]===d||A(l,s,d,m[s],o);if(a)e||p&&(a.__html===p.__html||a.__html===l.innerHTML)||(l.innerHTML=a.__html),u.__k=[];else if(p&&(l.innerHTML=\"\"),S(l,y(v)?v:[v],u,t,i,\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":o,r,f,r?r[0]:t.__k&&x(t,0),e,c),null!=r)for(s=r.length;s--;)null!=r[s]&&w(r[s]);e||(s=\"value\",void 0!==_&&(_!==l[s]||\"progress\"===b&&!_||\"option\"===b&&_!==m[s])&&A(l,s,_,m[s],o),s=\"checked\",void 0!==g&&g!==l[s]&&A(l,s,g,m[s],o))}return l}function N(n,u,t){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,t)}}function V(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&V(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||w(n.__e),n.__c=n.__=n.__e=n.__d=void 0}function q(n,l,u){return this.constructor(n,u)}function B(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],O(t,u=(!o&&i||t).__k=_(k,null,[u]),r||h,h,t.namespaceURI,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),j(f,u,e)}function D(n,l){B(n,l,D)}function E(l,u,t){var i,o,r,f,e=d({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),g(l.type,e,i||l.key,o||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+a++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,M(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=p.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),\"function\"==typeof n&&(n=n(d({},u),this.props)),n&&d(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),M(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),M(this))},b.prototype.render=k,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},P.__r=0,e=0,c=F(!1),s=F(!0),a=0;export{b as Component,k as Fragment,E as cloneElement,G as createContext,_ as createElement,m as createRef,_ as h,D as hydrate,t as isValidElement,l as options,B as render,H as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","module.exports = 'abcdefghijklmnopqrstuvwxyz';","module.exports = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';","module.exports = '0123456789';","module.exports = '346789ABCDEFGHJKLMNPQRTUVWXYabcdefghijkmnpqrtwxyz';\n","module.exports = '6789BCDFGHJKLMNPQRTWbcdfghjkmnpqrtwz';","const numbers = require('./numbers');\nconst lowercase = require('./lowercase');\nconst uppercase = require('./uppercase');\n\nmodule.exports = numbers + lowercase + uppercase;\n","module.exports = {\n  lowercase: require('./lowercase'),\n  uppercase: require('./uppercase'),\n  numbers: require('./numbers'),\n  nolookalikes: require('./nolookalikes'),\n  nolookalikesSafe: require('./nolookalikes-safe'),\n  alphanumeric: require('./alphanumeric'),\n}\n","const BIND_IGNORED = [\n  'String',\n  'Number',\n  'Object',\n  'Array',\n  'Boolean',\n  'Date'\n]\n\nexport function isObj(object) { return object && typeof object === 'object' }\nexport function setHiddenKey(object, key, value) {\n  Object.defineProperty(object, key, { value, enumerable: false, configurable: true })\n}\nexport function defineBubblingProperties(object, key, parent) {\n  setHiddenKey(object, '__key', key)\n  setHiddenKey(object, '__parent', parent)\n}\nexport function getInstanceMethodKeys(object) {\n  return (\n    Object\n      .getOwnPropertyNames(object)\n      .concat(\n        Object.getPrototypeOf(object) &&\n                BIND_IGNORED.indexOf(Object.getPrototypeOf(object).constructor.name) < 0 ?\n          Object.getOwnPropertyNames(Object.getPrototypeOf(object)) :\n          []\n      )\n      .filter(prop => prop !== 'constructor' && typeof object[prop] === 'function')\n  )\n}\n","export const data = {\n  computedStack: [],\n  trackerSymbol: Symbol('tracker')\n}\n","let queue = null\nexport const __batched = Symbol()\n\n/**\n * Will perform batched computations instantly.\n */\nexport function process() {\n  if(!queue)\n    return\n  for(const task of queue) {\n    task()\n    task[__batched] = false\n  }\n  queue = null\n}\n\nexport function enqueue(task, batch) {\n  if(task[__batched])\n    return\n  if(queue === null) {\n    queue = []\n    if(batch === true) {\n      queueMicrotask(process)\n    } else {\n      setTimeout(process, batch)\n    }\n  }\n  queue.push(task)\n}\n\n","import {\n  isObj,\n  defineBubblingProperties,\n  getInstanceMethodKeys,\n  setHiddenKey\n} from './tools.js'\nimport { data } from './data.js'\nimport { enqueue, __batched } from './batcher.js'\n\nconst { computedStack, trackerSymbol } = data\n\nconst observedSymbol = Symbol('__observed')\n\n/**\n * @typedef {Object} Options - Observe options.\n * @property {string[]} [props] - Observe only the properties listed.\n * @property {string[]} [ignore] - Ignore the properties listed.\n * @property {boolean | number} [batch] -\n *  Batch computed properties calls, wrapping them in a queueMicrotask and\n *  executing them in a new context and preventing excessive calls.\n *  If batch is an integer, the calls will be debounced by the value in milliseconds using setTimemout.\n * @prop {boolean} [deep] - Recursively observe nested objects and when setting new properties.\n * @prop {boolean} [bind] - Automatically bind methods to the observed object.\n */\n\nexport const modifiedProperty = Symbol('modifiedProperty')\n\n/**\n * Observes an object or an array and returns a proxified version which reacts on mutations.\n *\n * @template O\n * @param {O} obj - The object to observe.\n * @param {Options} options - Options\n * @returns {O} - A proxy wrapping the object.\n */\nexport function observe(obj, options = {}) {\n  // 'deep' is slower but reasonable; 'shallow' a performance enhancement but with side-effects\n  const {\n    props,\n    ignore,\n    batch,\n    deep = true,\n    bubble,\n    bind\n  } = options\n\n  // Ignore if the object is already observed\n  if(obj[observedSymbol]) {\n    return obj\n  }\n\n  // If the prop is explicitely not excluded\n  const isWatched = (prop) =>\n    prop !== observedSymbol &&\n    (\n      (props == null) ||\n      (props instanceof Array) && props.includes(prop)\n    ) && (\n      (ignore == null) ||\n      (ignore instanceof Array) && ! ignore.includes(prop)\n    )\n\n  // If the deep flag is set, observe nested objects/arrays\n  if(deep) {\n    Object.entries(obj).forEach(function([key, val]) {\n      if(isObj(val) && isWatched(key)) {\n        obj[key] = observe(val, options)\n        // If bubble is set, we add keys to the object used to bubble up the mutation\n        if(bubble) {\n          defineBubblingProperties(obj[key], key, obj)\n        }\n      }\n    })\n  }\n  \n    function setObjectPropertyTo (obj, prop, value) {\n      if(prop === '__handler') {\n        // Don't track bubble handlers\n        setHiddenKey(obj, '__handler', value)\n      } else if(!isWatched(prop)) {\n        // If the prop is ignored\n        obj[prop] = value\n      } else if(Array.isArray(obj) && prop === 'length' || ValuesDiffer(obj[prop],value)) {\n        // If the new/old value are not equal\n        const deeper = (prop !== modifiedProperty) && deep && isObj(value)\n\n        // Remove bubbling infrastructure and pass old value to handlers\n        const oldValue = obj[prop]\n//      if(isObj(oldValue))\n//        delete obj[prop]\n\n        // If the deep flag is set we observe the newly set value\n        obj[prop] = deeper ? observe(value, options) : value\n\n        // Co-opt assigned object into bubbling if appropriate\n        if(deeper && bubble) {\n          defineBubblingProperties(obj[prop], prop, obj)\n        }\n\n        const ancestry = [ prop ]\n        let parent = obj\n        while(parent) {\n          // If a handler explicitly returns 'false' then stop propagation\n          if(parent.__handler && parent.__handler(ancestry, value, oldValue, proxy) === false) {\n            break\n          }\n          // Continue propagation, traversing the mutated property's object hierarchy & call any __handlers along the way\n          if(parent.__key && parent.__parent) {\n            ancestry.unshift(parent.__key)\n            parent = parent.__parent\n          } else {\n            parent = null\n          }\n        }\n\n        const dependents = propertiesMap.get(prop)\n        if(dependents) {\n          // Retrieve the computed functions depending on the prop\n          for(const dependent of dependents) {\n            const tracker = dependent[trackerSymbol]\n            const trackedObj = tracker && tracker.get(obj)\n            const tracked = trackedObj && trackedObj.has(prop)\n            // If the function has been disposed or if the prop has not been used\n            // during the latest function call, delete the function reference\n            if(dependent.__disposed || tracker && !tracked) {\n              dependents.delete(dependent)\n            } else if(dependent !== computedStack[0]) {\n              // Run the computed function\n              if(typeof batch !== 'undefined' && batch !== false) {\n                enqueue(dependent, batch)\n                dependent[__batched] = true\n              } else {\n                dependent()\n              }\n            }\n          }\n        }\n\n        if (prop !== modifiedProperty) {\n        \tobj[modifiedProperty] = prop\n        \t\n\t        const dependents = propertiesMap.get(modifiedProperty)\n\t        if(dependents) {\n\t          // Retrieve the computed functions depending on \"modifiedProperty\"\n\t          for(const dependent of dependents) {\n\t            const tracker = dependent[trackerSymbol]\n\t            const trackedObj = tracker && tracker.get(obj)\n\t            const tracked = trackedObj && trackedObj.has(modifiedProperty)\n\t            // If the function has been disposed or if \"modifiedProperty\" has not been used\n\t            // during the latest function call, delete the function reference\n\t            if(dependent.__disposed || tracker && !tracked) {\n\t              dependents.delete(dependent)\n\t            } else if(dependent !== computedStack[0]) {\n\t              // Run the computed function\n\t              if(typeof batch !== 'undefined' && batch !== false) {\n\t                enqueue(dependent, batch)\n\t                dependent[__batched] = true\n\t              } else {\n\t                dependent()\n\t              }\n\t            }\n\t          }\n\t        }\n        }\n      }\n    }\n\n  // For each observed object, each property is mapped with a set of computed functions depending on this property.\n  // Whenever a property is set, we re-run each one of the functions stored inside the matching Set.\n  const propertiesMap = new Map()\n\n  // Proxify the object in order to intercept get/set on props\n  const proxy = new Proxy(obj, {\n    get(_, prop) {\n      if(prop === observedSymbol)\n        return true\n\n      // If the prop is watched\n      if(isWatched(prop)) {\n        // If a computed function is being run\n        if(computedStack.length) {\n          const computedFn = computedStack[0]\n          // Tracks object and properties accessed during the function call\n          const tracker = computedFn[trackerSymbol]\n          if(tracker) {\n            let trackerSet = tracker.get(obj)\n            if(!trackerSet) {\n              trackerSet = new Set()\n              tracker.set(obj, trackerSet)\n            }\n            trackerSet.add(prop)\n          }\n          // Link the computed function and the property being accessed\n          let propertiesSet = propertiesMap.get(prop)\n          if(!propertiesSet) {\n            propertiesSet = new Set()\n            propertiesMap.set(prop, propertiesSet)\n          }\n          propertiesSet.add(computedFn)\n        }\n      }\n\n      return obj[prop]\n    },\n    set(_, prop, value) {\n      setObjectPropertyTo(obj, prop, value)\n      return true\n    },\n    defineProperty(_, prop, descriptor) {\n      if (prop === '__handler') {\n      \tthrow new Error(\"Don't track bubble handlers\")\n      } else if(!isWatched(prop)) {\n        // If the prop is ignored\n        return Reflect.defineProperty(obj,prop,descriptor)\n      } else if (! Array.isArray(obj) || (prop === 'length')) {\n      \tif (('value' in descriptor) && deep && isObj(descriptor.value)) {\n      \t  descriptor = {...descriptor} // do not modify the argument itself\n      \t  descriptor.value = observe(descriptor.value, options)\n      \t}\n      \tconst Outcome = Reflect.defineProperty(obj,prop,descriptor)\n      \t  if (prop !== modifiedProperty) {\n\t        \tobj[modifiedProperty] = prop\n\t        }\n      \treturn Outcome\n      }\n      return false\n    },\n    deleteProperty(_, prop) {\n    \tif (prop === modifiedProperty) throw new Error(\n    \t  'internal property Symbol(\"modifiedProperty\") must not be deleted'\n    \t)\n\n    \tif (prop in obj) {\n    \t\tsetObjectPropertyTo(obj, prop, undefined) // trigger observers one last time\n    \t}\n    \treturn Reflect.deleteProperty(_,prop)\n    }\n  })\n\n  if(bind) {\n    // Need this for binding es6 classes methods which are stored in the object prototype\n    getInstanceMethodKeys(obj).forEach(key => obj[key] = obj[key].bind(proxy))\n  }\n\n  return proxy\n}\n\n/**** ValuesDiffer - copied from \"javascript-interface-library\", then modified ****/\n\n  function ValuesDiffer (thisValue, otherValue, Mode) {\n  \tconst visitedObjects = new Map()\n  \t\n  \tfunction ValuesDoDiffer (thisValue, otherValue, Mode) {\n\t    if (thisValue === otherValue) { return false }\n\t\n\t    let thisType = typeof thisValue\n\t    if (thisType !== typeof otherValue) { return true }\n\t\n    /**** ArraysDiffer ****/\n\n      function ArraysDiffer (thisArray, otherArray, Mode) {\n        if (! Array.isArray(otherArray)) { return true }\n\n        if (thisArray.length !== otherArray.length) { return true }\n\n        if (visitedObjects.has(thisArray) || visitedObjects.has(otherArray)) {\n        \tif (visitedObjects.has(thisArray)  && visitedObjects.get(thisArray).has(otherArray)) { return false }\n        \tif (visitedObjects.has(otherArray) && visitedObjects.get(otherArray).has(thisArray)) { return false }\n        \t\n        \tif (! visitedObjects.has(thisArray)) { visitedObjects.set(thisArray, new Set()) }\n        \tvisitedObjects.get(thisArray).add(otherArray)\n        }\n        \n        for (let i = 0, l = thisArray.length; i < l; i++) {\n          if (ValuesDoDiffer(thisArray[i],otherArray[i],Mode)) { return true }\n        }\n\n        return false\n      }\n\n    /**** ObjectsDiffer ****/\n\n      function ObjectsDiffer (thisObject, otherObject, Mode='by-value') {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n          return true\n        }\n\n        for (let key in thisObject) {\n          if (! (key in otherObject)) { return true }\n        }\n\n        for (let key in otherObject) {\n          if (! (key in thisObject)) { return true }\n        }\n\n        if (visitedObjects.has(thisObject) || visitedObjects.has(otherObject)) {\n        \tif (visitedObjects.has(thisObject)  && visitedObjects.get(thisObject).has(otherObject)) { return false }\n        \tif (visitedObjects.has(otherObject) && visitedObjects.get(otherObject).has(thisObject)) { return false }\n        \t\n        \tif (! visitedObjects.has(thisObject)) { visitedObjects.set(thisObject, new Set()) }\n        \tvisitedObjects.get(thisObject).add(otherObject)\n        }\n\n        for (let key in thisObject) {\n          if (ValuesDoDiffer(thisObject[key],otherObject[key],Mode)) {\n            return true\n          }\n        }\n\n        return false\n      }\n\t\n\t    switch (thisType) {\n\t      case 'undefined':\n\t      case 'boolean':\n\t      case 'string':\n\t      case 'function': return true   // most primitives are compared using \"===\"\n\t      case 'number':   return (\n\t                         (isNaN(thisValue) !== isNaN(otherValue)) ||\n\t                         (Math.abs(thisValue-otherValue) > Number.EPSILON)\n\t                       )\n\t      case 'object':\n\t        if (thisValue  == null) { return true }  // since \"other_value\" != null!\n\t        if (otherValue == null) { return true }   // since \"this_value\" != null!\n\t\n\t        if ((Mode === 'by-value') && (\n\t          (thisValue instanceof Boolean) ||\n\t          (thisValue instanceof Number) ||\n\t          (thisValue instanceof String)\n\t        )) {\n\t          return (thisValue.valueOf() !== otherValue.valueOf())\n\t        }\n\t\n\t        if (Array.isArray(thisValue)) {\n\t          return ArraysDiffer(thisValue,otherValue,Mode)\n\t        }\n\t\n\t        return (\n\t          Mode === 'by-reference'\n\t          ? true                           // because (thisValue !== otherValue)\n\t          : ObjectsDiffer(thisValue,otherValue,Mode)\n\t        )\n\t      default: return true                          // unsupported property type\n\t    }\n\t\n\t    return true\n  \t}\n  \treturn ValuesDoDiffer(thisValue, otherValue, Mode)\n  }\n","import { data } from './data.js'\nconst { computedStack, trackerSymbol } = data\n\n/**\n * @typedef {Object} ComputedArguments - Computed Arguments.\n * @property {(fun: () => void) => void} computeAsync -\n * Will monitor the dependencies of the function passed as an argument. Useful when dealing with asynchronous computations.\n */\n\n/**\n * @typedef {Object} Options - Computed Options.\n * @property {boolean} [autoRun] -\n * If false, will not run the function argument when calling computed(function).\n * The computed function must be called **at least once** to calculate its dependencies.\n * @property {() => void} [callback] -\n * Specify a callback that will be re-runned each time a dependency changes instead of the computed function.\n */\n\n/**\n * Wraps a function and captures observed properties which are accessed during the function execution.\n * When those properties are mutated, the function is called to reflect the changes.\n *\n * @param {(args: ComputedArguments) => void} wrappedFunction\n * @param {Options} options\n */\nexport function computed(wrappedFunction, { autoRun = true, callback, bind, disableTracking = false } = {}) {\n  function observeComputation(fun, argsList = []) {\n    const target = callback || wrapper\n    // Track object and object properties accessed during this function call\n    if(!disableTracking) {\n      target[trackerSymbol] = new WeakMap()\n    }\n    // Store into the stack a reference to the computed function\n    computedStack.unshift(target)\n    // Inject the computeAsync argument which is used to manually declare when the computation takes part\n    if(argsList.length > 0) {\n      argsList = [...argsList, computeAsyncArg]\n    } else {\n      argsList = [computeAsyncArg]\n    }\n    // Run the computed function - or the async function\n    const result =\n      fun ? fun() :\n      bind ? wrappedFunction.apply(bind, argsList) :\n      wrappedFunction(...argsList)\n    // Remove the reference\n    computedStack.shift()\n    // Return the result\n    return result\n  }\n  const computeAsyncArg = { computeAsync: observeComputation }\n  const wrapper = (...argsList) => observeComputation(null, argsList)\n\n  // If autoRun, then call the function at once\n  if(autoRun) {\n    wrapper()\n  }\n\n  return wrapper\n}\n","import { data } from './data.js'\n\n/**\n * Will remove the computed function from the reactive Maps (the next time an bound observer property is called) allowing garbage collection.\n *\n * @param {Function} computedFunction\n */\nexport function dispose(computedFunction) {\n  computedFunction[data.trackerSymbol] = null\n  return computedFunction.__disposed = true\n}\n","import { observe, modifiedProperty } from './observe.js'\nimport { computed } from './computed.js'\nimport { dispose } from './dispose.js'\nimport { process } from './batcher.js'\n\nexport default {\n  observe, modifiedProperty,\n  computed,\n  dispose,\n  batch: process\n}\n","/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(this, this,this, html,reactively, onRender,onMount,onUnmount)\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\"></div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\">${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\">${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\">${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\">${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\">${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'/img/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}/>`\n    }\n  })\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableEMailAddress(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readonly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      let   Value           = acceptableTextline(my.Value,'').trim()\n        Value = Value.replace('C:\\\\fakepath\\\\','')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes)\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"line-height:${my.Height}px\">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'/img/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes)\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes)\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n        <span>${Placeholder}</span>\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          const OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}>\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'/img/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            const OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}>\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readonly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:readonly {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height}, L 0,0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height}, L ${Width},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,0, L ${Width},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},0, L 0,${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('complex Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('complex Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('complex Controls', 'QR-Code View', 'QRCodeView')\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({})\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this)\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function|undefined):void {\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["throwError","Message","Match","namedError","ValueIsBoolean","Value","ValueIsNumber","ValueIsFiniteNumber","ValueIsNumberInRange","minValue","maxValue","withMin","withMax","ValueIsInteger","ValueIsIntegerInRange","ValueIsOrdinal","ValueIsCardinal","ValueIsString","ValueIsStringMatching","Pattern","noCtrlCharsButCRLFPattern","ValueIsText","noCtrlCharsPattern","ValueIsTextline","ValueIsFunction","ValueIsObject","ValueIsPlainObject","ValueIsArray","ValueIsList","minLength","maxLength","l","ValueIsListSatisfying","Validator","i","ValueIsOneOf","ValueList","ValueIsColor","ColorSet","EMailAddressPattern","ValueIsEMailAddress","noCtrlCharsOrWhitespacePattern","ValueIsURL","rejectNil","acceptNil","validatedArgument","Description","Argument","ValueIsValid","NilIsAcceptable","Expectation","escaped","ValidatorForClassifier","Classifier","ClassifierName","ValidatorName","FunctionWithName","originalFunction","desiredName","renamed","expectValue","allowBoolean","expectBoolean","allowInteger","expectInteger","allowIntegerInRange","expectedIntegerInRange","expectIntegerInRange","allowOrdinal","expectOrdinal","allowCardinal","allowText","allowTextline","expectTextline","allowFunction","expectFunction","allowPlainObject","expectListSatisfying","allowOneOf","expectedOneOf","expectOneOf","allowColor","allowURL","Text","EscapeSequencePattern","CtrlCharCodePattern","HexCode","quotable","Quote","EscSeqOrSglQuotePattern","EscSeqOrDblQuotePattern","quoted","ValuesDiffer","thisValue","otherValue","Mode","thisType","ArraysDiffer","thisArray","otherArray","ObjectsDiffer","thisObject","otherObject","key","n","u","p","_","o","r","f","g","t","s","e","h","a","m","random","bytes","customRandom","alphabet","defaultSize","getRandom","mask","step","size","id","j","customAlphabet","lowercase","uppercase","numbers","nolookalikes","nolookalikesSafe","require$$0","require$$1","require$$2","alphanumeric","nanoidDictionary","require$$3","require$$4","require$$5","BIND_IGNORED","isObj","object","setHiddenKey","value","defineBubblingProperties","parent","getInstanceMethodKeys","prop","data","queue","__batched","process","task","enqueue","batch","computedStack","trackerSymbol","observedSymbol","modifiedProperty","observe","obj","options","props","ignore","deep","bubble","bind","isWatched","val","setObjectPropertyTo","deeper","oldValue","ancestry","proxy","dependents","propertiesMap","dependent","tracker","trackedObj","tracked","computedFn","trackerSet","propertiesSet","descriptor","Outcome","visitedObjects","ValuesDoDiffer","computed","wrappedFunction","autoRun","callback","disableTracking","observeComputation","fun","argsList","target","wrapper","computeAsyncArg","result","dispose","computedFunction","hyperactiv","ValueIsPhoneNumber","BehaviorStyleElement","SNS_FontStyles","SNS_ErrorTypes","throwReadOnlyError","Name","ValueIsVisual","SNS_Visual","allowVisual","allowedVisual","expectVisual","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","SNS_Changes","createBoard","Project","BoardId","Board","configureFolder","FolderId","Property","Folder","PropertySet","SNS_ProjectPropertySet","SNS_BoardPropertySet","attachBoard","Index","newFolder","oldFolder","sanitizeBoardList","detachBoard","destroyBoard","unregisterFolder","createSticker","StickerId","Sticker","configureSticker","SNS_StickerPropertySet","attachSticker","newBoard","oldBoard","sanitizeStickerList","detachSticker","destroySticker","unregisterSticker","BoardSet","BoardList","BoardFromList","StickerSet","StickerList","StickerFromList","defaultStickerGeometry","defaultMinWidth","defaultMaxWidth","defaultMinHeight","defaultMaxHeight","defaultGridWidth","defaultGridHeight","acceptableBoolean","Default","acceptableOptionalBoolean","acceptableNumber","acceptableOptionalNumber","acceptableNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","acceptableOptionalInteger","acceptableIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","acceptableOptionalOrdinal","acceptableString","acceptableOptionalString","acceptableNonEmptyString","acceptableOptionalNonEmptyString","acceptableStringMatching","acceptableOptionalStringMatching","acceptableText","acceptableOptionalText","acceptableTextline","acceptableOptionalTextline","Result","acceptableFunction","acceptableOptionalFunction","acceptableList","acceptableOptionalList","acceptableListSatisfying","Matcher","acceptableOptionalListSatisfying","acceptableColor","acceptableOptionalColor","acceptableEMailAddress","acceptablePhoneNumber","acceptableURL","DefaultRenderer","html","CSSStyleOfVisual","ErrorRenderer","Error","newId","FolderRegistryForProject","registerFolder","FolderRegistry","Id","FolderWithId","StickerRegistryForProject","registerSticker","StickerRegistry","StickerWithId","removeIdsFrom","Serialization","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","normalizedGroupName","normalizedBehaviorName","normalizedTemplate","BehaviorSetGroup","groupedBehaviorEntryList","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList","BehaviorSet","useBehavior","reactively","onRender","onMount","onUnmount","TemplateOfBehavior","me","my","PropSet","builtinSelection","builtinDragging","onKeyDown","Event","Editor","selectionStart","selectionEnd","onInput","Width","Height","DataURL","BorderRadius","onClick","Color","consumingEvent","Label","checked","indeterminate","Minimum","lowerBound","Optimum","upperBound","Maximum","HashmarkPattern","HashmarkMatcher","onBlur","Stepping","Hashmarks","HashmarkList","HashmarkId","Item","Placeholder","readonly","SpellChecking","Suggestions","SuggestionList","SuggestionId","TimePattern","TimeRegExp","TimeMatcher","DateTimePattern","DateTimeRegExp","DateTimeMatcher","DatePattern","DateRegExp","DateMatcher","WeekPattern","WeekRegExp","WeekMatcher","MonthPattern","MonthRegExp","MonthMatcher","onDragEnter","onDragOver","onDrop","consumeEvent","acceptableTypes","multiple","Icon","Options","Option","OptionValue","OptionLabel","LineWrapping","SVGSource","CSSStyleList","BackgroundColor","BackgroundTexture","ForegroundColor","FontFamily","FontSize","FontWeight","FontStyle","LineHeight","__publicField","newName","newColor","newTexture","newFontFamily","newFontSize","newFontWeight","newFontStyle","newLineHeight","newForegroundColor","newValue","newScript","activeScript","compiledScript","Signal","newScriptError","newRenderer","newCallback","newError","Change","ArgList","serializeProperty","deserializeProperty","outerFolder","localPath","outerPath","Path","splitPath","Element","newSetting","newWidth","newHeight","BoardOrNameOrIndex","BoardIndex","oldIndex","newIndex","Count","BoardCount","BoardsToShift","FolderOrNameOrIndex","Renderer","BoardSerialization","IndexPath","Callback","StickerOrNameOrIndex","newSticker","StickerIndex","StickerCount","StickersToShift","StickerSerialization","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","x","y","newGeometry","newLock","newVisibility","newEnabling","SNS_ConnectionStates","SNS_Adapter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}
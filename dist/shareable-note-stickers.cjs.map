{"version":3,"file":"shareable-note-stickers.cjs","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS DefaultSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Outline - e.g., for screenshot areas ****/\n\n  registerBehavior('basic Views', 'Outline', 'Outline', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      return html`<div class=\"SNS Outline\"/>`\n    }\n  },`\n/**** Outline ****/\n\n  .SNS.Outline {\n    outline:dotted 1px blue;\n    outline-offset:2px;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\n  useBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\n  useBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\n  useBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<div class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\n  useBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'/icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\n  useBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\n  useBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\n  useBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}\n      style=\"accent-color:${my.ForegroundColor || 'dodgerblue'}\"/>`\n    }\n  },`\n/**** Progressbar ****/\n\n  .SNS.Sticker > .SNS.Progressbar {\n    -webkit-appearance:none; -moz-appearance:none; appearance:none;\n    background-color:#EEEEEE;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-bar {\n    background-color:#EEEEEE;\n    border:solid 1px #E0E0E0; border-radius:2px;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-value,\n  .SNS.Sticker > .SNS.Progressbar::-moz-progress-bar {\n    background-color:dodgerblue;\n    border:none; border-radius:2px;\n  }\n  `)\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\n  useBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'/icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\n  useBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\n  useBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'/icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\n  useBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\n  useBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\n  useBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView', {\n    Geometry:{ x:20,y:20, Width:120,Height:120 },\n    activeScript:`\n  useBehavior('QRCodeView')\n//my.Value           = '...'\n//my.ForegroundColor = 'black'\n//my.BackgroundColor = 'white'\n//my.CorrectionLevel = 'low'|'medium'|'quartile'|'high'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onMount(() => me.rerender())\n\n    const CorrectionLevelSet:Indexable = {\n      low:     (QRCode as Indexable).CorrectLevel.L,\n      medium:  (QRCode as Indexable).CorrectLevel.M,\n      quartile:(QRCode as Indexable).CorrectLevel.Q,\n      high:    (QRCode as Indexable).CorrectLevel.H\n    }\n\n    onRender(() => {\n      if (my.View != null) {\n        my.View.innerHTML = ''\n\n        const CorrectionLevel = (\n// @ts-ignore TS7053 allow indexing of \"CorrectionLevelSet\"\n          CorrectionLevelSet[''+my.CorrectionLevel] || QRCode.CorrectLevel.L\n        )\n        const Value = String(my.Value || 'https://github.com/rozek/shareable-note-stickers')\n        const Size  = Math.min(my.Width,my.Height)\n\n// @ts-ignore TS2351 allow construction of \"QRCode\"\n        new QRCode(my.View,{\n          text:Value,\n          width:Size, height:Size,\n          colorDark: my.ForegroundColor || 'black',\n          colorLight:my.BackgroundColor || 'white',\n          correctLevel:CorrectionLevel\n        })\n      }\n      return ''\n    })\n  })\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"PropSet\" to be never read\n    public Rendering (PropSet:Indexable):any { return '' }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'Value','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRender ****/\n\n    protected _onRender:SNS_onRenderCallback[] = []\n\n    public onRender (Callback:SNS_onRenderCallback):void {\n      expectFunction('\"onRender\" callback',Callback)\n      this._onRender.push(Callback)\n    }\n\n  /**** rerender ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRender.forEach(\n        (Callback:SNS_onRenderCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isLocked)    { Serialization.Lock       = true }\n      if (! this.isVisible) { Serialization.Visibility = false }\n      if (! this.isEnabled) { Serialization.Enabling   = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Lock       != null) { this.Lock       = Serialization.Lock       as boolean }\n      if (Serialization.Visibility != null) { this.Visibility = Serialization.Visibility as boolean }\n      if (Serialization.Enabling   != null) { this.Enabling   = Serialization.Enabling   as boolean }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    throwError, throwReadOnlyError,\n    SNS_Project\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","sanitizeBoardList","Project","Folder","Board","Index","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","_detachBoardAt","add","sanitizeStickerList","Sticker","StickerSet","StickerList","StickerFromList","_detachStickerAt","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","undefined","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableOptionalNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalOrdinal","ValueIsOrdinal","acceptableOptionalStringMatching","Pattern","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","onClick","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","unregisterFolder","FolderRegistry","get","Id","FolderWithId","StickerRegistryForProject","unregisterSticker","StickerRegistry","removeIdsFrom","Serialization","ValueIsList","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","trim","useBehavior","_this2","onRender","bind","onMount","onUnmount","expectFunction","Geometry","me","my","reactively","_templateObject3","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_my$Geometry","_templateObject5","_templateObject6","_templateObject7","CSSStyle","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","__html","_templateObject13","DataURL","btoa","_templateObject14","_templateObject15","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject16","Enabling","_onClick","Color","_templateObject17","_templateObject18","_templateObject19","consumingEvent","_templateObject20","LineHeight","checked","indeterminate","_templateObject21","_templateObject22","ValueIsString","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject23","_templateObject24","HashmarkPattern","HashmarkMatcher","onInput","_onInput","onBlur","rerender","ValueToShow","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject25","map","Item","_templateObject26","_templateObject27","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","ValueIsEMailAddress","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","_templateObject43","TimeRegExp","TimeMatcher","_templateObject44","_templateObject45","_templateObject46","DateTimeRegExp","DateTimeMatcher","_templateObject47","_templateObject48","_templateObject49","DateRegExp","DateMatcher","_templateObject50","_templateObject51","_templateObject52","WeekRegExp","WeekMatcher","_templateObject53","_templateObject54","_templateObject55","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject56","_templateObject57","_templateObject58","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject59","_templateObject60","_templateObject61","Icon","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","Options","_templateObject70","Option","OptionValue","OptionLabel","disabled","test","_templateObject71","_templateObject72","_templateObject73","LineWrapping","_templateObject74","_my$Geometry2","_templateObject75","_my$Geometry3","_templateObject76","_my$Geometry4","_templateObject77","_my$Geometry5","_templateObject78","_my$Geometry6","_templateObject79","_my$Geometry7","_templateObject80","_my$Geometry8","_templateObject81","_my$Geometry9","_templateObject82","_my$Geometry10","_templateObject83","_my$Geometry11","_templateObject84","_my$Geometry12","_templateObject85","_my$Geometry13","_templateObject86","_my$Geometry14","_templateObject87","_my$Geometry15","_templateObject88","_my$Geometry16","_templateObject89","_my$Geometry17","_templateObject90","Canvas","unobserved","Placement","drawLine","x0","y0","x1","y1","Text","Context","beginPath","moveTo","lineTo","stroke","fillText","width","height","getContext","clearRect","strokeStyle","lineWidth","textAlign","textBaseline","CorrectionLevelSet","low","QRCode","CorrectLevel","L","medium","M","quartile","Q","high","H","CorrectionLevel","String","Size","text","colorDark","colorLight","correctLevel","propagateEvent","_Id","_Name","_Project","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","_createClass","activateScript","_this3","compiledScript","Function","Signal","console","error","Cause","newRenderer","Rendering","newCallback","_this4","_this5","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","warn","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","containsFolder","IndexOfBoard","BoardOrNameOrIndex","expectValue","ValueIsInteger","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","newBoard","_attachBoardAt","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","BoardCount","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","newFolder","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","destroyBoard","clear","hasError","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","SNS_ProjectPropertySet","Property","_SNS_Folder2","_this13","_onChange","_onRender","_onError","_proto3","BoardAtIndexPath","expectListSatisfying","BoardWithId","StickerWithId","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","_this15","onError","_this16","deserializedFrom","SNS_BoardPropertySet","_SNS_Folder3","_this17","_StickerList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","_attachStickerAt","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickerCount","StickersToShift","destroySticker","newHandler","_serializeStickersInto","_this19","StickerSerialization","SNS_StickerPropertySet","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","Visibility","hide","enable","disable","maxWidth","maxHeight","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newVisibility","newEnabling","window","SNS","log","dispatchEvent","CustomEvent","detail","SNS_Adapter","ValueIsFunction","ValueIsIntegerInRange","BoardId","FolderId","expectOrdinal","oldFolder","setTimeout","StickerId","oldBoard","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList"],"mappings":"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"}
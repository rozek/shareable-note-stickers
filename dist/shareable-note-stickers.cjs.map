{"version":3,"file":"shareable-note-stickers.cjs","sources":["../src/shareable-note-stickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n  declare const QRCode:Function|Indexable\n\n  import {\n//  throwError,\n    quoted,\n    ValuesDiffer,\n    ValueIsBoolean,\n    ValueIsNumber, ValueIsNumberInRange, ValueIsFiniteNumber,\n      ValueIsInteger, ValueIsIntegerInRange, ValueIsOrdinal,\n    ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline,\n    ValueIsFunction,\n    ValueIsObject, ValueIsPlainObject,\n    ValueIsList, ValueIsListSatisfying,\n    ValueIsOneOf,\n    ValueIsColor, ValueIsURL,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    expectValue,\n    allowBoolean, expectBoolean,\n    allowInteger, expectInteger, allowIntegerInRange, expectIntegerInRange,\n      allowOrdinal, expectOrdinal, allowCardinal,\n    allowText, allowTextline, expectTextline,\n    allowPlainObject,\n    expectListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowColor, ValueIsEMailAddress, allowURL,\n  } from 'javascript-interface-library'\n\n  const ValueIsPhoneNumber = ValueIsTextline // *C* should be implemented\n\n  import { html } from 'htm/preact'\n\n  import { customAlphabet }   from 'nanoid'\n// @ts-ignore TS2307 typescript has problems importing \"nanoid-dictionary\"\n  import { nolookalikesSafe } from 'nanoid-dictionary'\n\n  import hyperactiv from 'hyperactiv'\n  const { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n/**** prepare an SNS-specific Stylesheet ****/\n\n  const BehaviorStyleElement = document.createElement('style')\n    BehaviorStyleElement.innerHTML = `\n/**** DefaultSticker ****/\n\n  .SNS.DefaultSticker {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n`\n  document.head.appendChild(BehaviorStyleElement)\n\n//------------------------------------------------------------------------------\n//--                             Type Definitions                             --\n//------------------------------------------------------------------------------\n\n  export type SNS_Id         = string         // mainly for illustrative reasons\n  export type SNS_Identifier = string                                    // dto.\n  export type SNS_Name       = string                                    // dto.\n  export type SNS_Ordinal    = number                                    // dto.\n  export type SNS_Cardinal   = number                                    // dto.\n  export type SNS_Text       = string                                    // dto.\n  export type SNS_Textline   = string                                    // dto.\n  export type SNS_URL        = string                                    // dto.\n  export type SNS_Color      = string                                    // dto.\n\n/**** geometry-related types ****/\n\n  export type SNS_Location  = number         // mainly for illustrative purposes\n  export type SNS_Dimension = number                                     // dto.\n  export type SNS_Position  = { x:SNS_Location,y:SNS_Location }\n  export type SNS_Size      = { Width:SNS_Dimension,Height:SNS_Dimension }\n  export type SNS_Geometry  = { x:SNS_Location,y:SNS_Location, Width:SNS_Dimension,Height:SNS_Dimension }\n\n/**** configuration-related types ****/\n\n  export const SNS_FontStyles = ['normal','italic']\n  export type  SNS_FontStyle  = typeof SNS_FontStyles[number]\n\n/**** Rendering Callback ****/\n\n  export type SNS_onRenderingCallback = (\n    Project:SNS_Project, Board?:SNS_Board, Sticker?:SNS_Sticker\n  ) => void\n\n/**** Error Report ****/\n\n  export const SNS_ErrorTypes = [\n    'missing Behaviour',         'Behaviour Execution Failure',\n    'Script Compilation Failure','Script Execution Failure',\n    'Rendering Failure',         'Event Handling Failure',\n    '\"onMount\" Callback Failure','\"onUnmount\" Callback Failure'\n  ]\n  export type SNS_ErrorType = typeof SNS_ErrorTypes[number]\n\n  export type SNS_Error = {\n    Type:SNS_ErrorType,          // also serves as a title for the error display\n    Message:SNS_Text,\n    Cause:any\n  }\n\n/**** Error Callback ****/\n\n  export type SNS_onErrorCallback = (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ) => void\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                 Classification and Validation Functions                  --\n//------------------------------------------------------------------------------\n\n/**** ValueIsVisual ****/\n\n  export function ValueIsVisual (Value:any):boolean {\n    return(Value instanceof SNS_Visual)\n  }\n\n/**** allow/expect[ed]Visual ****/\n\n  export const allowVisual = ValidatorForClassifier(\n    ValueIsVisual, acceptNil, 'SNS visual'\n  ), allowedVisual = allowVisual\n\n  export const expectVisual = ValidatorForClassifier(\n    ValueIsVisual, rejectNil, 'SNS visual'\n  ), expectedVisual = expectVisual\n\n/**** ValueIsFolder ****/\n\n  export function ValueIsFolder (Value:any):boolean {\n    return (Value instanceof SNS_Folder)\n  }\n\n/**** allow/expect[ed]Folder ****/\n\n  export const allowFolder = ValidatorForClassifier(\n    ValueIsFolder, acceptNil, 'SNS folder'\n  ), allowedFolder = allowFolder\n\n  export const expectFolder = ValidatorForClassifier(\n    ValueIsFolder, rejectNil, 'SNS folder'\n  ), expectedFolder = expectFolder\n\n/**** ValueIsProject ****/\n\n  export function ValueIsProject (Value:any):boolean {\n    return (Value instanceof SNS_Project)\n  }\n\n/**** allow/expect[ed]Project ****/\n\n  export const allowProject = ValidatorForClassifier(\n    ValueIsProject, acceptNil, 'SNS project'\n  ), allowedProject = allowProject\n\n  export const expectProject = ValidatorForClassifier(\n    ValueIsProject, rejectNil, 'SNS project'\n  ), expectedProject = expectProject\n\n/**** ValueIsBoard ****/\n\n  export function ValueIsBoard (Value:any):boolean {\n    return (Value instanceof SNS_Board)\n  }\n\n/**** allow/expect[ed]Board ****/\n\n  export const allowBoard = ValidatorForClassifier(\n    ValueIsBoard, acceptNil, 'SNS board'\n  ), allowedBoard = allowBoard\n\n  export const expectBoard = ValidatorForClassifier(\n    ValueIsBoard, rejectNil, 'SNS board'\n  ), expectedBoard = expectBoard\n\n/**** ValueIsSticker ****/\n\n  export function ValueIsSticker (Value:any):boolean {\n    return (Value instanceof SNS_Sticker)\n  }\n\n/**** allow/expect[ed]Sticker ****/\n\n  export const allowSticker = ValidatorForClassifier(\n    ValueIsSticker, acceptNil, 'SNS sticker'\n  ), allowedSticker = allowSticker\n\n  export const expectSticker = ValidatorForClassifier(\n    ValueIsSticker, rejectNil, 'SNS sticker'\n  ), expectedSticker = expectSticker\n\n/**** ValueIsId ****/\n\n  export function ValueIsId (Value:any):boolean {\n    return ValueIsTextline(Value) // *C* could definitely be better\n  }\n\n/**** allow/expect[ed]Id ****/\n\n  export const allowId = ValidatorForClassifier(\n    ValueIsId, acceptNil, 'unique SNS id'\n  ), allowedId = allowId\n\n  export const expectId = ValidatorForClassifier(\n    ValueIsId, rejectNil, 'unique SNS id'\n  ), expectedId = expectId\n\n/**** ValueIsIdentifier ****/\n\n  const SNS_IdentifierPattern = /^[a-z$_][a-z$_0-9]*$/i\n\n  export function ValueIsIdentifier (Value:any):boolean {\n    return ValueIsStringMatching(Value, SNS_IdentifierPattern)\n  }\n\n/**** allow/expect[ed]Identifier ****/\n\n  export const allowIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, acceptNil, 'note stickers identifier'\n  ), allowedIdentifier = allowIdentifier\n\n  export const expectIdentifier = ValidatorForClassifier(\n    ValueIsIdentifier, rejectNil, 'note stickers identifier'\n  ), expectedIdentifier = expectIdentifier\n\n/**** ValueIsName ****/\n\n  export function ValueIsName (Value:any):boolean {\n    return ValueIsTextline(Value)\n  }\n\n/**** allow/expect[ed]Name ****/\n\n  export const allowName = ValidatorForClassifier(\n    ValueIsName, acceptNil, 'SNS name'\n  ), allowedName = allowName\n\n  export const expectName = ValidatorForClassifier(\n    ValueIsName, rejectNil, 'SNS name'\n  ), expectedName = expectName\n\n/**** ValueIsLocation ****/\n\n  export function ValueIsLocation (Value:any):boolean {\n    return ValueIsFiniteNumber(Value)\n  }\n\n/**** allow/expect[ed]Location ****/\n\n  export const allowLocation = ValidatorForClassifier(\n    ValueIsLocation, acceptNil, 'sticker coordinate'\n  ), allowedLocation = allowLocation\n\n  export const expectLocation = ValidatorForClassifier(\n    ValueIsLocation, rejectNil, 'sticker coordinate'\n  ), expectedLocation = expectLocation\n\n/**** ValueIsDimension ****/\n\n  export function ValueIsDimension (Value:any):boolean {\n    return ValueIsFiniteNumber(Value) && (Value >= 0)\n  }\n\n/**** allow/expect[ed]Dimension ****/\n\n  export const allowDimension = ValidatorForClassifier(\n    ValueIsDimension, acceptNil, 'sticker dimension'\n  ), allowedDimension = allowDimension\n\n  export const expectDimension = ValidatorForClassifier(\n    ValueIsDimension, rejectNil, 'sticker dimension'\n  ), expectedDimension = expectDimension\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) &&\n      ValueIsLocation(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'sticker position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'sticker position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsSize ****/\n\n  export function ValueIsSize (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsDimension(Value.Width) &&\n      ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Size ****/\n\n  export const allowSize = ValidatorForClassifier(\n    ValueIsSize, acceptNil, 'sticker size'\n  ), allowedSize = allowSize\n\n  export const expectSize = ValidatorForClassifier(\n    ValueIsSize, rejectNil, 'sticker size'\n  ), expectedSize = expectSize\n\n/**** ValueIsGeometry ****/\n\n  export function ValueIsGeometry (Value:any):boolean {\n    return (\n      ValueIsObject(Value) &&\n      ValueIsLocation(Value.x) && ValueIsDimension(Value.Width) &&\n      ValueIsLocation(Value.y) && ValueIsDimension(Value.Height)\n    )\n  }\n\n/**** allow/expect[ed]Geometry ****/\n\n  export const allowGeometry = ValidatorForClassifier(\n    ValueIsGeometry, acceptNil, 'sticker geometry'\n  ), allowedGeometry = allowGeometry\n\n  export const expectGeometry = ValidatorForClassifier(\n    ValueIsGeometry, rejectNil, 'sticker geometry'\n  ), expectedGeometry = expectGeometry\n\n/**** ValueIsError ****/\n\n  export function ValueIsError (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ValueIsOneOf(Value.Type,SNS_ErrorTypes) &&\n      ValueIsText(Value.Message)\n    )\n  }\n\n/**** allow/expect[ed]Error ****/\n\n  export const allowError = ValidatorForClassifier(\n    ValueIsError, acceptNil, 'error descriptor'\n  ), allowedError = allowError\n\n  export const expectError = ValidatorForClassifier(\n    ValueIsError, rejectNil, 'error descriptor'\n  ), expectedError = expectError\n\n/**** ValueIsSerializable ****/\n\n  export function ValueIsSerializable (Value:any):boolean {\n    return ValueIsPlainObject(Value) // *C* could definitely be better!\n  }\n\n/**** allow/expect[ed]Serializable ****/\n\n  export const allowSerializable = ValidatorForClassifier(\n    ValueIsSerializable, acceptNil, 'serializable object'\n  ), allowedSerializable = allowSerializable\n\n  export const expectSerializable = ValidatorForClassifier(\n    ValueIsSerializable, rejectNil, 'serializable object'\n  ), expectedSerializable = expectSerializable\n\n//------------------------------------------------------------------------------\n//--                      Primitives and Change Reports                       --\n//------------------------------------------------------------------------------\n\n  export const SNS_Changes = [\n    'createBoard',   'configureFolder',  'attachBoard',   'detachBoard',   'destroyBoard',\n    'createSticker', 'configureSticker', 'attachSticker', 'detachSticker', 'destroySticker',\n  ]\n  export type SNS_Change = typeof SNS_Changes[number]\n\n  export type SNS_onChangeCallback = (\n    Project:SNS_Project, Change:SNS_Change, Id:SNS_Id, ...ArgList:any[]\n  ) => void\n\n/**** createBoard ****/\n\n  export function createBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board != null) {\n      console.error('a board with the given \"BoardId\" exists already')\n      return\n    }\n\n    Board = new SNS_Board(Project,BoardId)   // will automatically be registered\n  }\n\n/**** configureFolder ****/\n\n  export function configureFolder (\n    Project:SNS_Project, FolderId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                  ('folder id',FolderId)\n    expectIdentifier('property identifier',Property)\n\n    let Folder = Project.FolderWithId(FolderId)\n    if (Folder == null) {                                 // should never happen\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    const PropertySet:Indexable = (\n      ValueIsProject(Folder) ? SNS_ProjectPropertySet : SNS_BoardPropertySet\n    )\n    if (! (Property in PropertySet)) {\n      console.warn('unsupported folder property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Folder\"\n      Folder[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachBoard ****/\n\n  export function attachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    let newFolder = Project.FolderWithId(FolderId)\n    if (newFolder == null) {\n      console.error('no folder with the given \"FolderId\" found')\n      return\n    }\n\n    if (Board === newFolder) {\n      console.error('cannot attach a board to itself')\n      return\n    }\n\n    if (Board.containsFolder(newFolder)) {\n      console.error('cannot attach an outer board to one of its inner boards')\n      return\n    }\n\n    const oldFolder = Board.Folder\n    switch (true) {\n      case (oldFolder === newFolder):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board,Index),0);  break\n      case (oldFolder != null):\n        setTimeout(() => sanitizeBoardList(Project,oldFolder,Board),0)\n    }\n\n    newFolder._attachBoardAt(Board,Index)\n  }\n\n/**** detachBoard ****/\n\n  export function detachBoard (\n    Project:SNS_Project, BoardId:SNS_Id, FolderId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId            ('board id',BoardId)\n    expectId           ('folder id',FolderId)\n    expectOrdinal('insertion index',Index)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    let oldFolder = Project.FolderWithId(FolderId)\n    if (oldFolder == null) { return }                 // operation is idempotent\n\n    if ((Board.Folder === oldFolder) && (oldFolder.Board(Index) === Board)) {\n      oldFolder._detachBoardAt(Index)\n    }\n  }\n\n/**** destroyBoard ****/\n\n  export function destroyBoard (\n    Project:SNS_Project, BoardId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId        ('board id',BoardId)\n\n    if (BoardId === Project.Id) {\n      console.error('the given \"BoardId\" is the id of the current project')\n      return\n    }\n\n    let Board = Project.BoardWithId(BoardId)\n    if (Board == null) { return }                     // operation is idempotent\n\n    if (\n      (Board.Folder != null) || (Board.BoardCount > 0) || (Board.StickerCount > 0)\n    ) {\n      console.error('cannot destroy a board that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Board._Project = undefined           // detaches this board from the project\n    unregisterFolder(Board)\n  }\n\n/**** createSticker ****/\n\n  export function createSticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker != null) {\n      console.error('a sticker with the given \"StickerId\" exists already')\n      return\n    }\n\n    Sticker = new SNS_Sticker(Project,StickerId)  // will automat. be registered\n  }\n\n/**** configureSticker ****/\n\n  export function configureSticker (\n    Project:SNS_Project, StickerId:SNS_Id, Property:SNS_Identifier, Value:any\n  ):void {\n    expectProject           ('SNS project',Project)\n    expectId                 ('sticker id',StickerId)\n    expectIdentifier('property identifier',Property)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {                                // should never happen\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    if (! (Property in SNS_StickerPropertySet)) {\n      console.warn('unsupported sticker property \"' + Property + '\"')\n      return\n    }\n\n    try {\n// @ts-ignore TS7053 allow indexing of \"Sticker\"\n      Sticker[Property] = Value\n    } catch (Signal:any) {\n      console.warn('unsupported \"' + Property + '\" value received')\n      return\n    }\n  }\n\n/**** attachSticker ****/\n\n  export function attachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) {\n      console.error('no sticker with the given \"StickerId\" found')\n      return\n    }\n\n    let newBoard = Project.BoardWithId(BoardId)\n    if (newBoard == null) {\n      console.error('no board with the given \"BoardId\" found')\n      return\n    }\n\n    const oldBoard = Sticker.Board\n    switch (true) {\n      case (oldBoard === newBoard):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker,Index),0);  break\n      case (oldBoard != null):\n        setTimeout(() => sanitizeStickerList(Project,oldBoard,Sticker),0)\n    }\n\n    newBoard._attachStickerAt(Sticker,Index)\n  }\n\n/**** detachSticker ****/\n\n  export function detachSticker (\n    Project:SNS_Project, StickerId:SNS_Id, BoardId:SNS_Id, Index:SNS_Ordinal\n  ):void {\n    expectProject    ('SNS project',Project)\n    expectId          ('sticker id',StickerId)\n    expectId            ('board id',BoardId)\n    expectOrdinal('insertion index',Index)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    let oldBoard = Project.BoardWithId(BoardId)\n    if (oldBoard == null) { return }                  // operation is idempotent\n\n    if ((Sticker.Board === oldBoard) && (oldBoard.Sticker(Index) === Sticker)) {\n      oldBoard._detachStickerAt(Index)\n    }\n  }\n\n/**** destroySticker ****/\n\n  export function destroySticker (\n    Project:SNS_Project, StickerId:SNS_Id\n  ):void {\n    expectProject('SNS project',Project)\n    expectId      ('sticker id',StickerId)\n\n    let Sticker = Project.StickerWithId(StickerId)\n    if (Sticker == null) { return }                   // operation is idempotent\n\n    if (Sticker.Board != null) {\n      console.error('cannot destroy a sticker that is still in use')\n      return\n    }\n\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n    Sticker._Project = undefined       // detaches this sticker from the project\n    unregisterSticker(Sticker)\n  }\n\n/**** sanitizeBoardList ****/\n\n  export function sanitizeBoardList (\n    Project:SNS_Project, Folder:SNS_Folder, Board:SNS_Board, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectFolder      ('folder',Folder)\n    expectBoard        ('board',Board)\n    allowOrdinal       ('index',Index) // undefined means: always detach \"Board\"\n\n    let BoardSet:Set<SNS_Board> = new Set()\n\n    const BoardList = Folder.BoardList\n    for (let i = BoardList.length-1; i >= 0; i--) {\n      const BoardFromList = BoardList[i]\n      if (\n        (BoardFromList.Folder !== Folder) ||//\"Board\" doesn't belong to \"Folder\"\n        (BoardFromList === Board) && (Index !== i) ||\n        BoardSet.has(BoardFromList)           // \"Board\" already occurred before\n      ) {\n        Folder._detachBoardAt(i)\n      } else {\n        BoardSet.add(BoardFromList)\n      }\n    }\n  }\n\n/**** sanitizeStickerList ****/\n\n  export function sanitizeStickerList (\n    Project:SNS_Project, Board:SNS_Board, Sticker:SNS_Sticker, Index?:SNS_Ordinal\n  ):void {\n    expectProject('SNS project',Project)\n    expectBoard        ('board',Board)\n    expectSticker    ('sticker',Sticker)\n    allowOrdinal       ('index',Index)  // undef. means: always detach \"Sticker\"\n\n    let StickerSet:Set<SNS_Sticker> = new Set()\n\n    const StickerList = Board.StickerList\n    for (let i = StickerList.length-1; i >= 0; i--) {\n      const StickerFromList = StickerList[i]\n      if (\n        (StickerFromList.Board !== Board) ||      // \"Sticker\" belongs elsewhere\n        (StickerFromList === Sticker) && (Index !== i) ||\n        StickerSet.has(StickerFromList)     // \"Sticker\" already occurred before\n      ) {\n        Board._detachStickerAt(i)\n      } else {\n        StickerSet.add(StickerFromList)\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          Configuration Defaults                          --\n//------------------------------------------------------------------------------\n\n  const defaultStickerGeometry = { x:20,y:20, Width:80,Height:60 }\n  const defaultMinWidth  = 10\n  const defaultMaxWidth  = undefined\n  const defaultMinHeight = 10\n  const defaultMaxHeight = undefined\n\n  const defaultGridWidth  = 10\n  const defaultGridHeight = 10\n\n//------------------------------------------------------------------------------\n//--                               Acceptables                                --\n//------------------------------------------------------------------------------\n\n/**** acceptableBoolean ****/\n\n  export function acceptableBoolean (Value:any, Default:boolean):boolean {\n    return (ValueIsBoolean(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalBoolean ****/\n\n  export function acceptableOptionalBoolean (\n    Value:any, Default?:boolean|undefined\n  ):boolean|undefined {\n    return (\n      Value == null\n      ? undefined\n      : ValueIsBoolean(Value) ? Value : Default\n    )\n  }\n\n/**** acceptableNumber ****/\n\n  export function acceptableNumber (Value:any, Default:number):number {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumber ****/\n\n  export function acceptableOptionalNumber (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableNumberInRange ****/\n\n  export function acceptableNumberInRange (\n    Value:any, Default:number,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number {\n    return (ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax) ? Value : Default)\n  }\n\n/**** acceptableOptionalNumberInRange ****/\n\n  export function acceptableOptionalNumberInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity,\n    withMin:boolean = false, withMax:boolean = false\n  ):number|undefined {\n    return (\n      ValueIsNumberInRange(Value,minValue,maxValue,withMin,withMax)\n      ? Value\n      : Default\n    )\n  }\n\n/**** acceptableInteger ****/\n\n  export function acceptableInteger (Value:any, Default:number):number {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalInteger ****/\n\n  export function acceptableOptionalInteger (\n    Value:any, Default:number|undefined\n  ):number|undefined {\n    return (ValueIsInteger(Value) ? Value : Default)\n  }\n\n/**** acceptableIntegerInRange ****/\n\n  export function acceptableIntegerInRange (\n    Value:any, Default:number, minValue:number = -Infinity, maxValue:number = Infinity\n  ):number {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOptionalIntegerInRange ****/\n\n  export function acceptableOptionalIntegerInRange (\n    Value:any, Default:number|undefined,\n    minValue:number = -Infinity, maxValue:number = Infinity\n  ):number|undefined {\n    return (ValueIsIntegerInRange(Value,minValue,maxValue) ? Value : Default)\n  }\n\n/**** acceptableOrdinal ****/\n\n  export function acceptableOrdinal (Value:any, Default:number):number {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalOrdinal ****/\n\n  export function acceptableOptionalOrdinal (\n    Value:any, Default?:number|undefined\n  ):number|undefined {\n    return (ValueIsOrdinal(Value) ? Value : Default)\n  }\n\n/**** acceptableString ****/\n\n  export function acceptableString (Value:any, Default:string):string {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalString ****/\n\n  export function acceptableOptionalString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) ? Value : Default)\n  }\n\n/**** acceptableNonEmptyString ****/\n\n  export function acceptableNonEmptyString (Value:any, Default:string):string {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableOptionalNonEmptyString ****/\n\n  export function acceptableOptionalNonEmptyString (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsString(Value) && (Value.trim() !== '') ? Value : Default)\n  }\n\n/**** acceptableStringMatching ****/\n\n  export function acceptableStringMatching (\n    Value:any, Default:string, Pattern:RegExp\n  ):string {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalStringMatching ****/\n\n  export function acceptableOptionalStringMatching (\n    Value:any, Default:string|undefined, Pattern:RegExp\n  ):string|undefined {\n    return (ValueIsStringMatching(Value,Pattern) ? Value : Default)\n  }\n\n/**** acceptableText ****/\n\n  const noCtrlCharsButCRLFTABPattern = /^[^\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/\n\n  export function acceptableText (Value:any, Default:string):string {\n    return (ValueIsStringMatching(Value,noCtrlCharsButCRLFTABPattern) ? Value : Default)\n  }\n\n/**** acceptableOptionalText ****/\n\n  export function acceptableOptionalText (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsText(Value) ? Value : Default)\n  }\n\n/**** acceptableTextline ****/\n\n  export function acceptableTextline (Value:any, Default:string):string {\n    return (ValueIsTextline(Value) ? Value : Default).replace(\n      /[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...'\n    )\n  }\n\n/**** acceptableOptionalTextline ****/\n\n  export function acceptableOptionalTextline (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    const Result = ValueIsTextline(Value) ? Value : Default\n    return (\n      Result == null\n      ? undefined\n      : Result.replace(/[\\f\\r\\n\\v\\u0085\\u2028\\u2029].*$/,'...')\n    )\n  }\n\n/**** acceptableFunction ****/\n\n  export function acceptableFunction (Value:any, Default:Function):Function {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalFunction ****/\n\n  export function acceptableOptionalFunction (\n    Value:any, Default?:Function|undefined\n  ):Function|undefined {\n    return (ValueIsFunction(Value) ? Value : Default)\n  }\n\n/**** acceptableList ****/\n\n  export function acceptableList (Value:any, Default:any[]):any[] {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalList ****/\n\n  export function acceptableOptionalList (\n    Value:any, Default?:any[]|undefined\n  ):any[]|undefined {\n    return (ValueIsList(Value) ? Value : Default)\n  }\n\n/**** acceptableListSatisfying ****/\n\n  export function acceptableListSatisfying (\n    Value:any, Default:any[], Matcher:Function\n  ):any[] {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableOptionalListSatisfying ****/\n\n  export function acceptableOptionalListSatisfying (\n    Value:any, Default:any[]|undefined, Matcher:Function\n  ):any[]|undefined {\n    return (ValueIsListSatisfying(Value,Matcher) ? Value : Default)\n  }\n\n/**** acceptableColor ****/\n\n  export function acceptableColor (Value:any, Default:string):string {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableOptionalColor ****/\n\n  export function acceptableOptionalColor (\n    Value:any, Default?:string|undefined\n  ):string|undefined {\n    return (ValueIsColor(Value) ? Value : Default)\n  }\n\n/**** acceptableEMailAddress ****/\n\n  export function acceptableEMailAddress (Value:any, Default:string):string {\n    return (ValueIsEMailAddress(Value) ? Value : Default)\n  }\n\n/**** acceptablePhoneNumber ****/\n\n  export function acceptablePhoneNumber (Value:any, Default:string):string {\n    return (ValueIsPhoneNumber(Value) ? Value : Default)\n  }\n\n/**** acceptableURL ****/\n\n  export function acceptableURL (Value:any, Default:string):string {\n    return (ValueIsURL(Value) ? Value : Default)\n  }\n\n//------------------------------------------------------------------------------\n//--                             basic Renderers                              --\n//------------------------------------------------------------------------------\n\n/**** default Renderer ****/\n\n  function DefaultRenderer (this:SNS_Visual):any {\n    return html`<div class=\"SNS DefaultSticker\" style=${CSSStyleOfVisual(this)}/>`\n  }\n\n/**** Error Renderer ****/\n\n  function ErrorRenderer (this:SNS_Visual):any {\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const Error = this.Error\n    if (Error == null) { return DefaultRenderer.call(this) }// should never happen\n\n// @ts-ignore TS2532 \"ErrorRenderer.call(this)\" will define \"this\"\n    const onClick = () => this.Project.showError(this,Error)\n\n    return html`<div class=\"SNS brokenSticker\">\n      <div class=\"SNS ErrorIndicator\" onClick=${onClick}/>\n    </div>`\n  }\n\n//------------------------------------------------------------------------------\n//--                               Id Handling                                --\n//------------------------------------------------------------------------------\n\n/**** newId - uses nanoid with custom dictionary ****/\n\n  export const newId = customAlphabet(nolookalikesSafe,21)\n\n/**** registerFolder ****/\n\n  const FolderRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerFolder (Project:SNS_Project, Folder:SNS_Folder):void {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) {\n      FolderRegistryForProject.set(Project,FolderRegistry = Object.create(null))\n    }\n\n    const Id = Folder.Id\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    if (Id in FolderRegistry) throwError(\n      'NonUniqueId: the id of the given folder (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"FolderRegistry\" is not undefined\n    FolderRegistry[Id] = Folder\n  }\n\n/**** unregisterFolder ****/\n\n  function unregisterFolder (Folder:SNS_Folder):void {\n    const Project = Folder.Project\n\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return }\n\n    delete FolderRegistry[Folder.Id]\n  }\n\n/**** FolderWithId ****/\n\n  function FolderWithId (Project:SNS_Project, Id:SNS_Id):SNS_Folder|undefined {\n    let FolderRegistry = FolderRegistryForProject.get(Project)\n    if (FolderRegistry == null) { return undefined }\n\n    return FolderRegistry[Id]\n  }\n\n/**** registerSticker ****/\n\n  const StickerRegistryForProject:WeakMap<SNS_Project,Indexable> = new WeakMap()\n\n  function registerSticker (Project:SNS_Project, Sticker:SNS_Sticker):void {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) {\n      StickerRegistryForProject.set(Project,StickerRegistry = Object.create(null))\n    }\n\n    const Id = Sticker.Id\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    if (Id in StickerRegistry) throwError(\n      'NonUniqueId: the id of the given sticker (' + quoted(Id) +\n      ') has already been registered'\n    )\n\n// @ts-ignore TS18048 \"StickerRegistry\" is not undefined\n    StickerRegistry[Id] = Sticker\n  }\n\n/**** unregisterSticker ****/\n\n  function unregisterSticker (Sticker:SNS_Sticker):void {\n    const Project = Sticker.Project\n\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return }\n\n    delete StickerRegistry[Sticker.Id]\n  }\n\n/**** StickerWithId ****/\n\n  function StickerWithId (Project:SNS_Project, Id:SNS_Id):SNS_Sticker|undefined {\n    let StickerRegistry = StickerRegistryForProject.get(Project)\n    if (StickerRegistry == null) { return undefined }\n\n    return StickerRegistry[Id]\n  }\n\n/**** removeIdsFrom ****/\n\n  export function removeIdsFrom (Serialization:Serializable) {\n    expectSerializable('serialization',Serialization)\n\n    delete Serialization.Id\n\n    if (ValueIsList(Serialization.BoardList)) {\n      (Serialization.BoardList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n\n    if (ValueIsList(Serialization.StickerList)) {\n      (Serialization.StickerList as Serializable[]).forEach(\n        (Serialization:Serializable) => removeIdsFrom(Serialization)\n      )\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                           Reactivity Handling                            --\n//------------------------------------------------------------------------------\n\n  const reactiveFunctionsForVisual:WeakMap<SNS_Visual,Function[]>  = new WeakMap()\n\n/**** registerReactiveFunctionIn ****/\n\n  function registerReactiveFunctionIn (\n    Visual:SNS_Visual, reactiveFunction:Function\n  ):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) {\n      reactiveFunctionsForVisual.set(Visual,reactiveFunctions = [])\n    }\n    reactiveFunctions.push(reactiveFunction)\n  }\n\n/**** unregisterAllReactiveFunctionsFrom ****/\n\n  function unregisterAllReactiveFunctionsFrom (Visual:SNS_Visual):void {\n    let reactiveFunctions = reactiveFunctionsForVisual.get(Visual)\n    if (reactiveFunctions == null) { return }\n\n    reactiveFunctions.forEach((reactiveFunction:Function) => {\n      dispose(reactiveFunction)\n    })\n  }\n\n//------------------------------------------------------------------------------\n//--                            Behavior Handling                             --\n//------------------------------------------------------------------------------\n\n  type SNS_groupedBehaviorSet = { [GroupLabel:string]:SNS_BehaviorSetGroup }\n  type SNS_BehaviorSetGroup   = { GroupLabel:SNS_Textline, BehaviorSet:SNS_BehaviorSet }\n  type SNS_BehaviorSet        = { [BehaviorName:string]:SNS_Behavior }\n  type SNS_Behavior           = { Label:SNS_Textline, Executable?:Function, Template:Serializable }\n\n  const groupedBehaviorRegistry:SNS_groupedBehaviorSet          = Object.create(null)\n  const BehaviorRegistry:{ [BehaviorName:string]:Function }     = Object.create(null)\n  const TemplateRegistry:{ [BehaviorName:string]:Serializable } = Object.create(null)\n\n/**** registerBehavior ****/\n\n  function registerBehavior (\n    GroupLabel:SNS_Textline, BehaviorLabel:SNS_Textline,\n    BehaviorName:SNS_Identifier, Template?:Serializable,\n    BehaviorFunction?:Function, BehaviorStyle?:SNS_Text\n  ):void {\n    expectTextline('behavior group label',GroupLabel)\n    expectTextline      ('behavior label',BehaviorLabel)\n    expectIdentifier     ('behavior name',BehaviorName)\n    allowPlainObject  ('sticker template',Template)\n    allowFunction    ('behavior function',BehaviorFunction)\n\n    const normalizedGroupName    = GroupLabel.toLowerCase().replace(/\\s/g,'')\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const normalizedTemplate = { ...Template }\n    if (normalizedTemplate.activeScript == null) {\n      normalizedTemplate.activeScript = `useBehavior('${BehaviorName}')\\n`\n    } else {\n      normalizedTemplate.activeScript = (\n        (normalizedTemplate.activeScript as SNS_Text).replace(/^\\s*\\n/,'').replace(/\\n\\s*$/,'\\n')\n      )\n    }\n\n    if (normalizedBehaviorName in BehaviorRegistry) throwError(\n      'BehaviorExists: behavior ' + quoted(BehaviorName) + ' was already registered'\n    )\n\n    let BehaviorSetGroup = groupedBehaviorRegistry[normalizedGroupName]\n    if (BehaviorSetGroup == null) {\n      groupedBehaviorRegistry[normalizedGroupName] = BehaviorSetGroup = {\n        GroupLabel, BehaviorSet:Object.create(null)\n      }\n    }\n\n    BehaviorSetGroup.BehaviorSet[BehaviorName] = {\n      Label:BehaviorLabel, Executable:BehaviorFunction, Template:normalizedTemplate\n    }\n\n    if (BehaviorFunction != null) {\n      TemplateRegistry[normalizedBehaviorName] = normalizedTemplate\n      BehaviorRegistry[normalizedBehaviorName] = BehaviorFunction\n    }\n\n    if (BehaviorStyle != null) {\n      if (BehaviorStyleElement.innerHTML.indexOf(BehaviorStyle.trim()) < 0) {\n        BehaviorStyleElement.innerHTML += BehaviorStyle\n      }\n    }\n  }\n\n/**** groupedBehaviorEntryList ****/\n\n  export type SNS_groupedBehaviorEntryList = SNS_BehaviorEntryGroup[]\n  export type SNS_BehaviorEntryGroup = {\n    GroupLabel:SNS_Textline,\n    BehaviorEntryList:SNS_BehaviorEntry[]\n  }\n  export type SNS_BehaviorEntry = {\n    Label:SNS_Textline, Name:SNS_Identifier, disabled:boolean\n  }\n\n  export function groupedBehaviorEntryList ():SNS_groupedBehaviorEntryList {\n    const Result:SNS_groupedBehaviorEntryList = []\n      function BehaviorEntriesIn (BehaviorGroup:SNS_BehaviorSetGroup):SNS_BehaviorEntryGroup {\n        const BehaviorEntryList:SNS_BehaviorEntry[] = []\n          const BehaviorSet = BehaviorGroup.BehaviorSet\n          for (let BehaviorName in BehaviorSet) {\n            BehaviorEntryList.push({\n              Label:BehaviorSet[BehaviorName].Label, Name:BehaviorName,\n              disabled:! (BehaviorName.toLowerCase() in BehaviorRegistry)\n            })\n          }\n        return { GroupLabel:BehaviorGroup.GroupLabel, BehaviorEntryList }\n      }\n\n      for (let GroupLabel in groupedBehaviorRegistry) {\n        Result.push(BehaviorEntriesIn(groupedBehaviorRegistry[GroupLabel]))\n      }\n    return Result\n  }\n\n/**** useBehavior ****/\n\n  function useBehavior (this:SNS_Visual, BehaviorName:SNS_Identifier):void {\n    expectSticker          ('visual',this)\n    expectIdentifier('behavior name',BehaviorName)\n\n    const BehaviorFunction = BehaviorRegistry[BehaviorName.toLowerCase()]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    const reactively = (reactiveFunction:Function):void => {\n      expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n      registerReactiveFunctionIn(this,computed(reactiveFunction))\n    }\n\n    const onRender  = this.onRender.bind(this)\n    const onMount   = this.onMount.bind(this)\n    const onUnmount = this.onUnmount.bind(this)\n\n    BehaviorFunction.call(\n      this, this,this, html,reactively, onRender,onMount,onUnmount\n    )\n  }\n\n/**** TemplateOfBehavior ****/\n\n  export function TemplateOfBehavior (BehaviorName:SNS_Identifier):Serializable {\n    expectIdentifier('behavior name',BehaviorName)\n\n    const normalizedBehaviorName = BehaviorName.toLowerCase()\n\n    const BehaviorFunction = BehaviorRegistry[normalizedBehaviorName]\n    if (BehaviorFunction == null) throwError(\n      'NoSuchBehavior: no behavior called ' + quoted(BehaviorName) + ' found'\n    )\n\n    return TemplateRegistry[normalizedBehaviorName]\n  }\n\n//------------------------------------------------------------------------------\n//--                           intrinsic Behaviors                            --\n//------------------------------------------------------------------------------\n\n  type IndexableSticker = SNS_Sticker & Indexable\n\n/**** plain Sticker ****/\n\n  registerBehavior('basic Views', 'plain Sticker', 'plainSticker', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    activeScript:'onRender(() => html`<div class=\"SNS Placeholder\">Script me!</div>`)',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS plainSticker\"></div>`)\n  },`\n/**** plain Stickers ****/\n\n  .SNS.plainSticker {\n    border:dotted 1px gray;\n  }\n  `)\n\n/**** sticky Note ****/\n\n  registerBehavior('basic Views', 'sticky Note', 'stickyNote', {\n    Selectability:true,\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    minWidth:20, minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Selectability = true                       // for backwards compatibility\n\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinSelection,builtinDragging } = PropSet\n\n      const Value = acceptableText(my.Value,'')\n\n      const onKeyDown = (Event:KeyboardEvent) => {\n        if (Event.key === 'Tab') {\n          Event.stopPropagation()\n          Event.preventDefault()\n\n          const Editor = Event.target as HTMLTextAreaElement\n          const { value, selectionStart,selectionEnd } = Editor\n            Editor.value = value.slice(0,selectionStart) + '\\t' + value.slice(selectionEnd)\n          Editor.selectionStart = Editor.selectionEnd = selectionStart+1\n\n          return false\n        }\n      }\n\n      const onInput = (Event:InputEvent) => {\n        my.Value = (Event.target as HTMLTextAreaElement).value\n      }\n\n      return html`<div class=\"SNS NoteSticker\" style=${CSSStyleOfVisual(me)}\n        onPointerDown=${builtinSelection}\n      >\n        <div class=\"Header builtinDraggable\"\n          onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n          onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n        />\n        <textarea class=\"Editor\" value=${Value} tabindex=-1\n          onKeyDown=${onKeyDown} onInput=${onInput}\n        ></textarea>\n      </div>`\n    }\n  },`\n/**** \"classical\" Note Stickers ****/\n\n  .SNS.NoteSticker {\n    background:ivory;\n    border:solid 1px darkgray;\n    outline:none;\n    font-family:'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n  }\n\n  .SNS.NoteSticker > .Header {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; height:10px;\n    margin:0px; padding:0px;\n    background:#000000; opacity:0.3;\n  }\n\n  .SNS.NoteSticker > .Editor {\n    display:block; position:absolute;\n    left:0px; top:10px; right:0px; bottom:0px;\n    margin:0px; padding:2px;\n    background:none; border:none;\n\n    background-color:inherit; background-image:inherit;\n    font-family:inherit; font-size:inherit; font-weight:inherit;\n    line-height:inherit; color:inherit;\n\n    tab-size:10px; resize:none;\n  }\n  `)\n\n/**** Placeholder ****/\n\n  registerBehavior('basic Views', 'Placeholder', 'Placeholder', {\n    Selectability:true,\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Selectability = true                       // for backwards compatibility\n\n    my.Renderer = function (PropSet:Indexable) {\n      const { builtinDragging } = PropSet\n      const { Width,Height }    = my.Geometry\n\n      return html`<div class=\"SNS Placeholder builtinDraggable\" style=\"\n        line-height:${Height}px;\n      \"\n        onPointerDown=${builtinDragging} onPointerMove=${builtinDragging}\n        onPointerUp=${builtinDragging} onPointerCancel=${builtinDragging}\n      >${Width}x${Height}</div>`\n    }\n  },`\n/**** simple Placeholders ****/\n\n  .SNS.Placeholder {\n    border:dotted 1px gray;\n    text-align:center;\n  }\n  `)\n\n/**** Outline - e.g., for screenshot areas ****/\n\n  registerBehavior('basic Views', 'Outline', 'Outline', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function (PropSet:Indexable) {\n      return html`<div class=\"SNS Outline\"/>`\n    }\n  },`\n/**** Outline ****/\n\n  .SNS.Outline {\n    outline:dotted 1px blue;\n    outline-offset:2px;\n    pointer-events:none;\n  }\n  `)\n\n/**** Title View ****/\n\n  registerBehavior('basic Views', 'Title', 'Title', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Title',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Title\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Title Views ****/\n\n  .SNS.Sticker > .SNS.Title {\n    font-size:22px; font-weight:bold; line-height:32px;\n  }\n  `)\n\n/**** Subtitle View ****/\n\n  registerBehavior('basic Views', 'Subtitle', 'Subtitle', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Subtitle',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Subtitle\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Subtitle Views ****/\n\n  .SNS.Sticker > .SNS.Subtitle {\n    font-size:18px; font-weight:bold; line-height:27px;\n  }\n  `)\n\n/**** Label View ****/\n\n  registerBehavior('basic Views', 'Label', 'Label', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Label',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableTextline(my.Value,'')\n      return html`<div class=\"SNS Label\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Label Views ****/\n\n  .SNS.Sticker > .SNS.Label {\n    font-size:14px; font-weight:bold; line-height:21px;\n  }\n  `)\n\n/**** Text View ****/\n\n  registerBehavior('basic Views', 'Text', 'Text', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Text',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS Text\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** Text Views ****/\n\n  .SNS.Sticker > .SNS.Text {\n    font-size:14px; font-weight:normal; line-height:21px;\n  }\n  `)\n\n/**** FinePrint View ****/\n\n  registerBehavior('basic Views', 'FinePrint', 'FinePrint', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'FinePrint',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => {\n      const Value = acceptableText(my.Value,'')\n      return html`<div class=\"SNS FinePrint\" style=${my.CSSStyle}>${Value}</div>`\n    })\n  },`\n/**** FinePrint Views ****/\n\n  .SNS.Sticker > .SNS.FinePrint {\n    font-size:12px; font-weight:normal; line-height:18px;\n  }\n  `)\n\n/**** HTML View ****/\n\n  registerBehavior('basic Views', 'HTML View', 'HTMLView', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:'<b><u>HTML View</u></b>',\n    activeScript:`\nuseBehavior('HTMLView')\n//my.Value = 'HTML Markup'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<div class=\"SNS HTMLView\"\n      dangerouslySetInnerHTML=${{__html:acceptableText(my.Value,'')}}\n    />`\n  })\n\n/**** Image View ****/\n\n  registerBehavior('basic Views', 'Image View', 'ImageView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    Value:'https://www.rozek.de/Bangle.js/Mandelbrot_240x240.png',\n    activeScript:`\nuseBehavior('ImageView')\n//my.Value = 'Image URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<img class=\"SNS ImageView\" src=${acceptableURL(my.Value,'')}/>`\n  },`\n/**** Image View ****/\n\n  .SNS.Sticker > .SNS.ImageView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** SVG View ****/\n\n  registerBehavior('basic Views', 'SVG View', 'SVGView', {\n    Geometry:{ x:20,y:20, Width:90,Height:90 },\n    activeScript:`\nuseBehavior('SVGView')\n//my.Value = 'SVG Document'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(acceptableText(my.Value,''))\n      return html`<img class=\"SNS SVGView\" src=${DataURL}/>`\n    }\n  },`\n/**** SVG View ****/\n\n  .SNS.Sticker > .SNS.SVGView {\n    object-fit:contain; object-position:center;\n  }\n  `)\n\n/**** 2D Canvas View ****/\n\n  registerBehavior('basic Views', '2D Canvas View', 'Canvas2DView')\n\n/**** Web View ****/\n\n  registerBehavior('basic Views', 'Web View', 'WebView', {\n    Geometry:{ x:20,y:20, Width:640,Height:480 },\n    minWidth:120, minHeight:80,\n    Value:'https://www.rozek.de',\n    activeScript:`\nuseBehavior('WebView')\n//my.Value = 'Document URL'\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => html`<iframe class=\"SNS WebView\"\n      src=${acceptableURL(my.Value,'')}\n    />`\n  })\n\n/**** Badge ****/\n\n  registerBehavior('basic Views', 'Badge', 'Badge', {\n    Geometry:{ x:20,y:20, Width:30,Height:30 },\n    Value:1, ForegroundColor:'red', BackgroundColor:'white',\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = (\n        ValueIsNumber(my.Value)\n        ? ''+my.Value\n        : acceptableTextline(my.Value,'')\n      )\n      const BorderRadius = Math.round(Math.min(my.Width,my.Height/2))\n\n      return html`<div class=\"SNS Badge\" style=\"\n        border-color:${my.ForegroundColor}; border-radius:${BorderRadius}px;\n        line-height:${my.Height-4}px;\n      \">${acceptableTextline(Value,'')}</>`\n    }\n  },`\n/**** Badge ****/\n\n  .SNS.Sticker > .SNS.Badge {\n    font-size:18px; font-weight:bold; text-align:center;\n    border:solid 2px black;\n  }\n  `)\n\n/**** Icon ****/\n\n  registerBehavior('basic Views', 'Icon', 'Icon', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('Icon')\n//my.Value = 'icon image url'\n//onClick(() => ...)\n`,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableURL(my.Value,'./icons/pencil.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      return html`<div class=\"SNS Icon\" style=\"\n        -webkit-mask-image:url(${Value}); mask-image:url(${Value});\n        background-color:${Color};\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  },`\n/**** Icon ****/\n\n  .SNS.Sticker > .SNS.Icon {\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** horizontalSeparator ****/\n\n  registerBehavior('basic Views', 'horizontal Separator', 'horizontalSeparator', {\n    Geometry:{ x:20,y:20, Width:80,Height:10 },\n    minWidth:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS horizontalSeparator\"></div>`)\n  },`\n/**** horizontal Separator ****/\n\n  .SNS.horizontalSeparator {\n    border:none; border-top:solid 1px black;\n  }\n  `)\n\n\n/**** verticalSeparator ****/\n\n  registerBehavior('basic Views', 'vertical Separator', 'verticalSeparator', {\n    Geometry:{ x:20,y:20, Width:10,Height:40 },\n    minHeight:10,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onRender(() => html`<div class=\"SNS verticalSeparator\"></div>`)\n  },`\n/**** vertical Separator ****/\n\n  .SNS.verticalSeparator {\n    border:none; border-left:solid 1px black;\n  }\n  `)\n\n/**** Tab ****/\n\n  registerBehavior('basic Views', 'Tab', 'Tab')\n\n/**** IconTab ****/\n\n  registerBehavior('basic Views', 'Icon Tab', 'IconTab')\n\n/**** Button ****/\n\n  registerBehavior('native Controls', 'Button', 'Button', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:'Button',\n    activeScript:`\nuseBehavior('Button')\n//my.Value = 'Label'\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Label = acceptableTextline(my.Label || my.Value,'')\n\n      return html`<button class=\"SNS Button\" style=\"\n        line-height:${my.LineHeight || my.Height}px;\n      \" disabled=${my.Enabling == false} onClick=${onClick}\n      >${Label}</>`\n    }\n  },`\n/**** Button ****/\n\n  .SNS.Sticker > .SNS.Button {\n    border:solid 1px black; border-radius:4px;\n    background:white;\n    font-weight:bold; color:black;\n    text-align.center;\n  }\n  `)\n\n/**** Checkbox ****/\n\n  registerBehavior('native Controls', 'Checkbox', 'Checkbox', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Checkbox')\n//my.Value = null/true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableOptionalBoolean(my.Value)\n\n      const checked       = (Value == true)\n      const indeterminate = (Value == null)\n\n      return html`<input type=\"checkbox\" class=\"SNS Checkbox\"\n        checked=${checked} indeterminate=${indeterminate}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Radiobutton ****/\n\n  registerBehavior('native Controls', 'Radiobutton', 'Radiobutton', {\n    Geometry:{ x:20,y:20, Width:20,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Radiobutton')\n//my.Value = true/false\n//onClick(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onClick (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.checked\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onClick === 'function') { my._onClick(Event) }\n    }\n\n    my.Renderer = () => {\n      const Value = acceptableBoolean(my.Value,false)\n\n      return html`<input type=\"radio\" class=\"SNS Radiobutton\"\n        checked=${Value == true}\n        disabled=${my.Enabling == false} onClick=${onClick}\n      />`\n    }\n  })\n\n/**** Gauge ****/\n\n  registerBehavior('native Controls', 'Gauge', 'Gauge', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:0,\n    activeScript:`\nuseBehavior('Gauge')\n//my.Value      = 0\n//my.Minimum    = 0\n//my.lowerBound = 0\n//my.Optimum    = undefined\n//my.upperBound = 1\n//my.Maximum    = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum    = acceptableOptionalNumber(my.Minimum)\n      const lowerBound = acceptableOptionalNumber(my.lowerBound)\n      const Optimum    = acceptableOptionalNumber(my.Optimum)\n      const upperBound = acceptableOptionalNumber(my.upperBound)\n      const Maximum    = acceptableOptionalNumber(my.Maximum)\n\n      return html`<meter class=\"SNS Gauge\" value=${Value}\n        min=${Minimum} low=${lowerBound} opt=${Optimum}\n        high=${upperBound} max=${Maximum}\n      />`\n    }\n  })\n\n/**** Progressbar ****/\n\n  registerBehavior('native Controls', 'Progressbar', 'Progressbar', {\n    Geometry:{ x:20,y:20, Width:100,Height:10 },\n    Value:0,\n    activeScript:`\nuseBehavior('Progressbar')\n//my.Value   = 0\n//my.Maximum = 1\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = () => {\n      const Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Maximum = acceptableOptionalNumber(my.Maximum)\n\n      return html`<progress class=\"SNS Progressbar\" value=${Value} max=${Maximum}\n      style=\"accent-color:${my.ForegroundColor || 'dodgerblue'}\"/>`\n    }\n  },`\n/**** Progressbar ****/\n\n  .SNS.Sticker > .SNS.Progressbar {\n    -webkit-appearance:none; -moz-appearance:none; appearance:none;\n    background-color:#EEEEEE;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-bar {\n    background-color:#EEEEEE;\n    border:solid 1px #E0E0E0; border-radius:2px;\n  }\n  .SNS.Sticker > .SNS.Progressbar::-webkit-progress-value,\n  .SNS.Sticker > .SNS.Progressbar::-moz-progress-bar {\n    background-color:dodgerblue;\n    border:none; border-radius:2px;\n  }\n  `)\n\n/**** Slider ****/\n\n  const HashmarkPattern = /^\\s*([+-]?(\\d+([.]\\d+)?|[.]\\d+)([eE][+-]?\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  registerBehavior('native Controls', 'Slider', 'Slider', {\n    Geometry:{ x:20,y:20, Width:100,Height:20 },\n    Value:null,\n    activeScript:`\nuseBehavior('Slider')\n//my.Value     = 0\n//my.Minimum   = undefined\n//my.Stepping  = undefined\n//my.Maximum   = undefined\n//my.Hashmarks = [0:'zero',1,2]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function HashmarkMatcher (Value:any):boolean {\n      return ValueIsStringMatching(Value,HashmarkPattern) || ValueIsNumber(Value)\n    }\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Minimum  = acceptableOptionalNumber(my.Minimum)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalNumber(my.Maximum)\n\n      const Hashmarks = acceptableOptionalListSatisfying(\n        my.Hashmarks, undefined, HashmarkMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let HashmarkList:any = '', HashmarkId\n      if ((Hashmarks != null) && (Hashmarks.length > 0)) {\n        HashmarkId = my.Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string|number) => {\n            Item = ''+Item\n            const Value = Item.replace(/:.*$/,'').trim()\n            const Label = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option value=${Value}>${Label}</option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<input type=\"range\" class=\"SNS Slider\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${HashmarkId}\n      />${HashmarkList}`\n    }\n  })\n\n/**** Textline Input ****/\n\n  registerBehavior('native Controls', 'Textline Input', 'TextlineInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TextlineInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"text\" class=\"SNS TextlineInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TextlineInput ****/\n\n  .SNS.Sticker > .SNS.TextlineInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextlineInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Password Input ****/\n\n  registerBehavior('native Controls', 'Password Input', 'PasswordInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('PasswordInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<input type=\"password\" class=\"SNS PasswordInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      />`\n    }\n  },`\n/**** PasswordInput ****/\n\n  .SNS.Sticker > .SNS.PasswordInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PasswordInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Number Input ****/\n\n  registerBehavior('native Controls', 'Number Input', 'NumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('NumberInput')\n//my.Value       = 0\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = [0,...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = 0\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = parseFloat(Event.target.value)\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:number|undefined = acceptableNumber(\n        ValueIsString(my.Value) ? parseFloat(my.Value as string) : my.Value, 0\n      )\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const Minimum     = acceptableOptionalNumber(my.Minimum)\n      const Stepping    = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum     = acceptableOptionalNumber(my.Maximum)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:number) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"number\" class=\"SNS NumberInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} placeholder=${Placeholder}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** NumberInput ****/\n\n  .SNS.Sticker > .SNS.NumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.NumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Phone Number Input ****/\n\n  registerBehavior('native Controls', 'Phone Number Input', 'PhoneNumberInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('PhoneNumberInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptablePhoneNumber(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsPhoneNumber\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"tel\" class=\"SNS PhoneNumberInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** PhoneNumberInput ****/\n\n  .SNS.Sticker > .SNS.PhoneNumberInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.PhoneNumberInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** EMail Address Input ****/\n\n  registerBehavior('native Controls', 'EMail Address Input', 'EMailAddressInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('EMailAddressInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableTextline(my.Value,'') // not(!) acceptableEMailAddress\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsEMailAddress\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"email\" class=\"SNS EMailAddressInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** EMailAddressInput ****/\n\n  .SNS.Sticker > .SNS.EMailAddressInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.EMailAddressInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** URL Input ****/\n\n  registerBehavior('native Controls', 'URL Input', 'URLInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('URLInput')\n//my.Value       = ''\n//my.Placeholder = undefined\n//my.readonly    = false\n//my.minLength   = 0\n//my.maxLength   = undefined\n//my.Pattern     = '.*'\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value       = acceptableURL(my.Value,'')\n      const Placeholder = acceptableOptionalTextline(my.Placeholder)\n      const readonly    = acceptableOptionalBoolean(my.readonly)\n      const minLength   = acceptableOptionalOrdinal(my.minLength)\n      const maxLength   = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern     = acceptableOptionalTextline(my.Pattern)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsURL\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"url\" class=\"SNS URLInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** URLInput ****/\n\n  .SNS.Sticker > .SNS.URLInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.URLInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Time Input ****/\n\n  const TimePattern = '\\\\d{2}:\\\\d{2}'\n  const TimeRegExp  = /\\d{2}:\\d{2}/\n\n  function TimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,TimeRegExp)\n  }\n\n  registerBehavior('native Controls', 'Time Input', 'TimeInput', {\n    Geometry:{ x:20,y:20, Width:80,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, TimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, TimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, TimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, TimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"time\" class=\"SNS TimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${TimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** TimeInput ****/\n\n  .SNS.Sticker > .SNS.TimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date and Time Input ****/\n\n  const DateTimePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}'\n  const DateTimeRegExp  = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/\n\n  function DateTimeMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateTimeRegExp)\n  }\n  registerBehavior('native Controls', 'Date and Time Input', 'DateTimeInput', {\n    Geometry:{ x:20,y:20, Width:180,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DateTimeInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateTimeRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateTimeRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateTimeRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateTimeMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"datetime-local\" class=\"SNS DateTimeInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DateTimePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateTimeInput ****/\n\n  .SNS.Sticker > .SNS.DateTimeInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateTimeInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Date Input ****/\n\n  const DatePattern = '\\\\d{4}-\\\\d{2}-\\\\d{2}'\n  const DateRegExp  = /\\d{4}-\\d{2}-\\d{2}/\n\n  function DateMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,DateRegExp)\n  }\n\n  registerBehavior('native Controls', 'Date Input', 'DateInput', {\n    Geometry:{ x:20,y:20, Width:120,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DateInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, DateRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, DateRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, DateRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, DateMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"date\" class=\"SNS DateInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${DatePattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** DateInput ****/\n\n  .SNS.Sticker > .SNS.DateInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.DateInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Week Input ****/\n\n  const WeekPattern = '\\\\d{4}-W\\\\d{2}'\n  const WeekRegExp  = /\\d{4}-W\\d{2}/\n\n  function WeekMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,WeekRegExp)\n  }\n\n  registerBehavior('native Controls', 'Week Input', 'WeekInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('WeekInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, WeekRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, WeekRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, WeekRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, WeekMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"week\" class=\"SNS WeekInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${WeekPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** WeekInput ****/\n\n  .SNS.Sticker > .SNS.WeekInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.WeekInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Month Input ****/\n\n  const MonthPattern = '\\\\d{4}-\\\\d{2}'\n  const MonthRegExp  = /\\d{4}-\\d{2}/\n\n  function MonthMatcher (Value:any):boolean {\n    return ValueIsStringMatching(Value,MonthRegExp)\n  }\n\n  registerBehavior('native Controls', 'Month Input', 'MonthInput', {\n    Geometry:{ x:20,y:20, Width:150,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('MonthInput')\n//my.Value       = 0\n//my.readonly    = false\n//my.Minimum     = undefined\n//my.Stepping    = undefined\n//my.Maximum     = undefined\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value:string|undefined = acceptableOptionalStringMatching(\n        my.Value, undefined, MonthRegExp\n      )\n      const readonly = acceptableOptionalBoolean(my.readonly)\n      const Minimum  = acceptableOptionalStringMatching(my.Minimum, undefined, MonthRegExp)\n      const Stepping = acceptableOptionalNumberInRange(my.Stepping,undefined, 0)\n      const Maximum  = acceptableOptionalStringMatching(my.Maximum, undefined, MonthRegExp)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, MonthMatcher\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"month\" class=\"SNS MonthInput\"\n        value=${Value} min=${Minimum} max=${Maximum} step=${Stepping}\n        readOnly=${readonly} pattern=${MonthPattern}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** MonthInput ****/\n\n  .SNS.Sticker > .SNS.MonthInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.MonthInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** File Input ****/\n\n  registerBehavior('native Controls', 'File Input', 'FileInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('FileInput')\n//my.Value           = ''\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Value           = acceptableText(my.Value,'').trim().replace(/[\\n\\r]+/g,',')\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileInput\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}\n      >\n        ${Value === ''\n          ? Placeholder === '' ? '' : html`<span style=\"\n              font-size:${Math.round((my.FontSize || 14)*0.95)}px; line-height:${my.Height}px\n            \">${Placeholder}</span>`\n          : html`<span style=\"line-height:${my.Height}px\">${Value}</span>`\n        }\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileInput ****/\n\n  .SNS.Sticker > .SNS.FileInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  .SNS.Sticker > .SNS.FileInput > span {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    color:gray;\n    padding:0px 2px 0px 2px; white-space:pre; text-overflow:ellipsis;\n  }\n  `)\n\n/**** Pseudo File Input ****/\n\n  registerBehavior('native Controls', 'Pseudo File Input', 'PseudoFileInput', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('PseudoFileInput')\n//my.Value           = ''\n//my.Icon            = 'icon image url'\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    my.Renderer = () => {\n      const Icon            = acceptableURL(my.Icon,'./icons/arrow-up-from-bracket.png')\n      const Color           = acceptableColor(my.Color,'black')\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS PseudoFileInput\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <input type=\"file\" style=\"display:none\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** PseudoFileInput ****/\n\n  .SNS.Sticker > .SNS.PseudoFileInput > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n  `)\n\n/**** File Drop Area ****/\n\n  registerBehavior('native Controls', 'File Drop Area', 'FileDropArea', {\n    Geometry:{ x:20,y:20, Width:100,Height:80 },\n    Value:null,\n    activeScript:`\nuseBehavior('FileDropArea')\n//my.Value           = ['']\n//my.Placeholder     = undefined\n//my.acceptableTypes = undefined\n//my.multiple        = false\n//onInput(() => ...)\n//onDrop(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Array.from(Event.target.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event,Event.target.files) }\n    }\n\n    function onDragEnter (Event:Event):void { return consumingEvent(Event) }\n    function onDragOver  (Event:Event):void { return consumingEvent(Event) }\n\n    function onDrop (Event:any):void {\n      consumeEvent(Event)\n      if (my.Enabling == false) { return }\n\n      my.Value = Array.from(Event.dataTransfer.files).map((File:any) => File.name).join('\\n')\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onDrop === 'function') { my._onDrop(Event,Event.dataTransfer.files) }\n    }                 // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n    my.Renderer = () => {\n      const Placeholder     = acceptableTextline(my.Placeholder,'').trim()\n      const acceptableTypes = acceptableOptionalTextline(my.acceptableTypes,'*')\n      const multiple        = acceptableOptionalBoolean(my.multiple)\n\n      return html`<label class=\"SNS FileDropArea\"\n        onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onDrop}>\n        <span>${Placeholder}</span>\n        <input type=\"file\"\n          multiple=${multiple} accept=${acceptableTypes}\n          onInput=${onInput}\n        />\n      </label>`\n    }\n  },`\n/**** FileDropArea ****/\n\n  .SNS.Sticker > .SNS.FileDropArea {\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD; background:white;\n  }\n\n  .SNS.Sticker > .SNS.FileDropArea * { pointer-events:none }\n\n  .SNS.Sticker > .SNS.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Search Input ****/\n\n  registerBehavior('native Controls', 'Search Input', 'SearchInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('SearchInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.Pattern       = '.*'\n//my.SpellChecking = undefined\n//my.Suggestions   = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableTextline(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const Pattern       = acceptableOptionalTextline(my.Pattern)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"search\" class=\"SNS SearchInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        pattern=${Pattern} spellcheck=${SpellChecking}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** SearchInput ****/\n\n  .SNS.Sticker > .SNS.SearchInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.SearchInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Color Input ****/\n\n  registerBehavior('native Controls', 'Color Input', 'ColorInput', {\n    Geometry:{ x:20,y:20, Width:40,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('ColorInput')\n//my.Value       = ''\n//my.Suggestions = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableOptionalColor(my.Value)\n\n      const Suggestions = acceptableOptionalListSatisfying(\n        my.Suggestions, undefined, ValueIsColor\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      let SuggestionList:any = '', SuggestionId\n      if ((Suggestions != null) && (Suggestions.length > 0)) {\n        SuggestionId = my.Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<input type=\"color\" class=\"SNS ColorInput\"\n        value=${Value}\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        list=${SuggestionId}\n      />${SuggestionList}`\n    }\n  },`\n/**** ColorInput ****/\n\n  .SNS.Sticker > .SNS.ColorInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** DropDown ****/\n\n  registerBehavior('native Controls', 'DropDown', 'DropDown', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('DropDown')\n//my.Value   = '...'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let Value = acceptableTextline(my.Value,'')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<select class=\"SNS DropDown\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n      >${Options.map((Option:string) => {\n          const OptionValue = Option.replace(/:.*$/,'').trim()\n          let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n          const disabled    = (OptionLabel[0] === '-')\n            if (/^-[^-]+$/.test(OptionLabel)) {\n              OptionLabel = OptionLabel.slice(1)\n            }\n          return html`<option value=${OptionValue} selected=${OptionValue === Value}\n            disabled=${disabled}\n          >\n            ${OptionLabel}\n          </option>`\n        }\n      )}</select>`\n    }\n  },`\n/**** DropDown ****/\n\n  .SNS.Sticker > .SNS.DropDown {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n  `)\n\n/**** Pseudo DropDown ****/\n\n  registerBehavior('native Controls', 'Pseudo DropDown', 'PseudoDropDown', {\n    Geometry:{ x:20,y:20, Width:24,Height:24 },\n    Value:null,\n    activeScript:`\nuseBehavior('PseudoDropDown')\n//my.Value   = '...'\n//my.Icon    = 'icon image url'\n//my.Options = ['...',...]\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value = acceptableTextline(my.Value,'')\n      const Icon  = acceptableURL(my.Icon,'./icons/menu.png')\n      const Color = acceptableColor(my.Color,'black')\n\n      const Options = acceptableListSatisfying(\n        my.Options, [], ValueIsTextline\n      )\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<div class=\"SNS PseudoDropDown\">\n        <div style=\"\n          -webkit-mask-image:url(${Icon}); mask-image:url(${Icon});\n          background-color:${Color};\n        \"></div>\n        <select disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}>\n          ${Options.map((Option:string) => {\n            const OptionValue = Option.replace(/:.*\\$/,'').trim()\n            let   OptionLabel = Option.replace(/^[^:]+:/,'').trim()\n            const disabled    = (OptionLabel[0] === '-')\n              if (/^-[^-]+$/.test(OptionLabel)) {\n                OptionLabel = OptionLabel.slice(1)\n              }\n            return html`<option value=${OptionValue} selected=${OptionValue === Value}\n              disabled=${disabled}\n            >\n              ${OptionLabel}\n            </option>`\n          })}\n        </select>\n      </div>`\n    }\n  },`\n/**** PseudoDropDown ****/\n\n  .SNS.Sticker > .SNS.PseudoDropDown > div {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    -webkit-mask-size:contain;           mask-size:contain;\n    -webkit-mask-position:center center; mask-position:center center;\n  }\n\n  .SNS.Sticker > .SNS.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n  `)\n\n/**** Text Input ****/\n\n  registerBehavior('native Controls', 'Text Input', 'TextInput', {\n    Geometry:{ x:20,y:20, Width:100,Height:30 },\n    Value:null,\n    activeScript:`\nuseBehavior('TextInput')\n//my.Value         = ''\n//my.Placeholder   = undefined\n//my.readonly      = false\n//my.minLength     = 0\n//my.maxLength     = undefined\n//my.LineWrapping  = false\n//my.SpellChecking = undefined\n//onInput(() => ...)\n`,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.ValueToShow = ''\n\n    function onInput (Event:any):void {\n      if (my.Enabling == false) { return consumingEvent(Event) }\n\n      my.Value = my.ValueToShow = Event.target.value\n// @ts-ignore TS2445 well, this object *is* a subinstance of SNS_Sticker\n      if (typeof my._onInput === 'function') { my._onInput(Event) }\n    }\n\n    function onBlur () { me.rerender() }\n\n    my.Renderer = () => {\n      let   Value         = acceptableText(my.Value,'')\n      const Placeholder   = acceptableOptionalTextline(my.Placeholder)\n      const readonly      = acceptableOptionalBoolean(my.readonly)\n      const minLength     = acceptableOptionalOrdinal(my.minLength)\n      const maxLength     = acceptableOptionalOrdinal(my.maxLength)\n      const LineWrapping  = acceptableOptionalBoolean(my.LineWrapping)\n      const SpellChecking = acceptableOptionalBoolean(my.SpellChecking)\n\n      if (document.activeElement === my.View) {\n        Value = my.ValueToShow\n      } else {\n        my.ValueToShow = Value\n      }\n\n      return html`<textarea class=\"SNS TextInput\"\n        value=${Value} minlength=${minLength} maxlength=${maxLength}\n        readOnly=${readonly} placeholder=${Placeholder}\n        spellcheck=${SpellChecking} style=\"resize:none; ${\n          LineWrapping == true\n          ? 'white-space:pre; overflow-wrap:break-word; hyphens:auto'\n          : undefined\n        }\"\n        disabled=${my.Enabling == false} onInput=${onInput} onBlur=${onBlur}\n        value=${Value}\n      />`\n    }\n  },`\n/**** TextInput ****/\n\n  .SNS.Sticker > .SNS.TextInput {\n    left:1px; top:1px; right:1px; bottom:1px; width:auto; height:auto;\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff;\n    padding:0px 2px 0px 2px;\n  }\n\n  .SNS.Sticker > .SNS.TextInput:read-only {\n    border:solid 1px #DDDDDD; border-radius:2px;\n    background:#F0F0F0;\n  }\n  `)\n\n/**** Line ****/\n\n  registerBehavior('basic Shapes', 'Line', 'Line')\n\n/**** Polyline ****/\n\n  registerBehavior('basic Shapes', 'Polyline', 'Polyline')\n\n/**** Arc ****/\n\n  registerBehavior('basic Shapes', 'Arc', 'Arc')\n\n/**** quadratic Bezier ****/\n\n  registerBehavior('basic Shapes', 'quadratic Bezier', 'quadraticBezier')\n\n/**** cubic Bezier ****/\n\n  registerBehavior('basic Shapes', 'cubic Bezier', 'cubicBezier')\n\n/**** Box ****/\n\n  registerBehavior('basic Shapes', 'Box', 'Box')\n\n/**** rounded Box ****/\n\n  registerBehavior('basic Shapes', 'rounded Box', 'roundedBox')\n\n/**** Oval ****/\n\n  registerBehavior('basic Shapes', 'Oval', 'Oval')\n\n/**** Chord ****/\n\n  registerBehavior('basic Shapes', 'Chord', 'Chord')\n\n/**** Pie ****/\n\n  registerBehavior('basic Shapes', 'Pie', 'Pie')\n\n/**** Polygon ****/\n\n  registerBehavior('basic Shapes', 'Polygon', 'Polygon')\n\n/**** regular Polygon ****/\n\n  registerBehavior('basic Shapes', 'regular Polygon', 'regularPolygon')\n\n/**** straightArrow_nw ****/\n\n  registerBehavior('straight Arrows', 'nw', 'straightArrow_nw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},${Height-6}, L 6,6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_n ****/\n\n  registerBehavior('straight Arrows', 'n', 'straightArrow_n', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},${Height}, L ${Width/2},0\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_ne ****/\n\n  registerBehavior('straight Arrows', 'ne', 'straightArrow_ne', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,${Height-6}, L ${Width-6},6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_e ****/\n\n  registerBehavior('straight Arrows', 'e', 'straightArrow_e', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 0,${Height/2}, L ${Width},${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_se ****/\n\n  registerBehavior('straight Arrows', 'se', 'straightArrow_se', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M 6,6, L ${Width-6},${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_s ****/\n\n  registerBehavior('straight Arrows', 's', 'straightArrow_s', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width/2},0, L ${Width/2},${Height}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_sw ****/\n\n  registerBehavior('straight Arrows', 'sw', 'straightArrow_sw', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width-6},6, L 6,${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** straightArrow_w ****/\n\n  registerBehavior('straight Arrows', 'w', 'straightArrow_w', {\n    Geometry:{ x:20,y:20, Width:40,Height:40 },\n    minWidth:12, minHeight:12,\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"4\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\"\n            d=\"M ${Width},${Height/2}, L 0,${Height/2}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** straight Arrows ****/\n\n  .SNS.straightArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw n ****/\n\n  registerBehavior('curved Arrows', 'cw n', 'curvedArrow_cw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},${Height-6}, A ${Width-6} ${Height-18} 0 0 1 6 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw e ****/\n\n  registerBehavior('curved Arrows', 'cw e', 'curvedArrow_cw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,${Height}, A ${Width-18} ${Height-6} 0 0 1 ${Width-12} 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw s ****/\n\n  registerBehavior('curved Arrows', 'cw s', 'curvedArrow_cw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,6, A ${Width-6} ${Height-18} 0 0 1 ${Width-6} ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow cw w ****/\n\n  registerBehavior('curved Arrows', 'cw w', 'curvedArrow_cw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},0, A ${Width-18} ${Height-6} 0 0 1 12 ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw n ****/\n\n  registerBehavior('curved Arrows', 'ccw n', 'curvedArrow_ccw_n', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 0,${Height-6}, A ${Width-6} ${Height-18} 0 0 0 ${Width-6} 12\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw e ****/\n\n  registerBehavior('curved Arrows', 'ccw e', 'curvedArrow_ccw_e', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M 6,0, A ${Width-18} ${Height-6} 0 0 0 ${Width-12} ${Height-6}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw s ****/\n\n  registerBehavior('curved Arrows', 'ccw s', 'curvedArrow_ccw_s', {\n    Geometry:{ x:20,y:20, Width:50,Height:60 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width},6, A ${Width-6} ${Height-18} 0 0 0 6 ${Height-12}\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** curvedArrow ccw w ****/\n\n  registerBehavior('curved Arrows', 'ccw w', 'curvedArrow_ccw_w', {\n    Geometry:{ x:20,y:20, Width:60,Height:50 },\n  }, (\n    me:SNS_Sticker, my:SNS_Sticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    my.Renderer = function () {\n      const { Width,Height } = my.Geometry\n      const Color = my.ForegroundColor || 'black'\n\n      const SVGSource = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"${Width}\" height=\"${Height}\"\n        >\n          <defs>\n            <marker id=\"arrow-head\" orient=\"auto\"\n              markerWidth=\"5\" markerHeight=\"4\"\n              refX=\"0\" refY=\"2\"\n            >\n              <path d=\"M0,0 V4 L5,2 Z\" fill=\"${Color}\"/>\n            </marker>\n          </defs>\n\n          <path marker-end=\"url(#arrow-head)\" stroke-width=\"3\" stroke=\"${Color}\" fill=\"none\"\n            d=\"M ${Width-6},${Height}, A ${Width-18} ${Height-8} 0 0 0 12 6\"\n          />\n        </svg>\n      `\n      const DataURL = 'data:image/svg+xml;base64,' + btoa(SVGSource)\n      return html`<img class=\"SNS straightArrow\" src=${DataURL}/>`\n    }\n  },`\n/**** curved Arrows ****/\n\n  .SNS.curvedArrow {\n    overflow:visible;\n  }\n  `)\n\n/**** horizontal Ruler ****/\n\n  registerBehavior('other Controls', 'horizontal Ruler', 'horizontalRuler', {\n    Geometry:{ x:20,y:20, Width:120,Height:40 },\n    activeScript:`\nuseBehavior('horizontalRuler')\n//my.Placement = 'above'|'below'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'above') {\n            Context.fillText(Text, x0,y1-5)\n          } else {\n            Context.fillText(Text, x0,y1+5)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'above') {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'bottom'\n\n          drawLine(0,Height, Width,Height)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,Height, x,Height-15, x); break\n              case (x % 50  === 0): drawLine(x,Height, x,Height-10); break\n              default:              drawLine(x,Height, x,Height-7)\n            }\n          }\n        } else {\n          Context.textAlign    = 'center'\n          Context.textBaseline = 'top'\n\n          drawLine(0,0, Width,0)\n          for (let x = 0; x <= Width; x += 10) {\n            switch (true) {\n              case (x % 100 === 0): drawLine(x,0, x,15, x); break\n              case (x % 50  === 0): drawLine(x,0, x,10); break\n              default:              drawLine(x,0, x,7)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** horizontalRuler ****/\n\n  .SNS.horizontalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** vertical Ruler ****/\n\n  registerBehavior('other Controls', 'vertical Ruler', 'verticalRuler', {\n    Geometry:{ x:20,y:20, Width:40,Height:120 },\n    activeScript:`\nuseBehavior('verticalRuler')\n//my.Placement = 'left'|'right'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    let Canvas = my.unobserved.Canvas = document.createElement('canvas')\n\n    onRender(() => {\n      const Placement = my.Placement\n\n      if (my.View == null) {\n        me.rerender()\n      } else {\n        my.View.innerHTML = ''\n        my.View.appendChild(Canvas)\n      }\n\n      const { Width,Height } = me\n\n      Canvas.width  = Width\n      Canvas.height = Height\n\n      function drawLine (x0:number,y0:number, x1:number,y1:number, Text?:any):void {\n        Context.beginPath()\n          Context.moveTo(x0,y0)\n          Context.lineTo(x1,y1)\n        Context.stroke()\n\n        if (Text != null) {\n          if (Placement === 'left') {\n            Context.fillText(Text, x1-5,y1)\n          } else {\n            Context.fillText(Text, x1+5,y1)\n          }\n        }\n      }\n\n      const Context = Canvas.getContext('2d') as CanvasRenderingContext2D\n        Context.clearRect(0,0, Width,Height)\n\n        Context.strokeStyle = my.Color || 'black'\n        Context.lineWidth   = 1\n\n        if (Placement === 'left') {\n          Context.textAlign    = 'right'\n          Context.textBaseline = 'middle'\n\n          drawLine(Width,0, Width,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(Width,y, Width-15,y, y); break\n              case (y % 50  === 0): drawLine(Width,y, Width-10,y); break\n              default:              drawLine(Width,y, Width-7,y)\n            }\n          }\n        } else {\n          Context.textAlign    = 'left'\n          Context.textBaseline = 'middle'\n\n          drawLine(0,0, 0,Height)\n          for (let y = 0; y <= Height; y += 10) {\n            switch (true) {\n              case (y % 100 === 0): drawLine(0,y, 15,y, y); break\n              case (y % 50  === 0): drawLine(0,y, 10,y); break\n              default:              drawLine(0,y, 7,y)\n            }\n          }\n        }\n      return ''\n    })\n  },`\n/**** verticalRuler ****/\n\n  .SNS.verticalRuler > canvas {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n  `)\n\n/**** flat List View ****/\n\n  registerBehavior('other Controls', 'flat List View', 'FlatListView')\n\n/**** nested List View ****/\n\n  registerBehavior('other Controls', 'nested List View', 'NestedListView')\n\n/**** QR-Code View ****/\n\n  registerBehavior('other Controls', 'QR-Code View', 'QRCodeView', {\n    Geometry:{ x:20,y:20, Width:120,Height:120 },\n    activeScript:`\nuseBehavior('QRCodeView')\n//my.Value           = '...'\n//my.ForegroundColor = 'black'\n//my.BackgroundColor = 'white'\n//my.CorrectionLevel = 'low'|'medium'|'quartile'|'high'\n    `,\n  }, (\n    me:IndexableSticker, my:IndexableSticker, html:Function, reactively:Function,\n    onRender:Function, onMount:Function, onUnmount:Function\n  ):void => {\n    onMount(() => me.rerender())\n\n    const CorrectionLevelSet:Indexable = {\n      low:     (QRCode as Indexable).CorrectLevel.L,\n      medium:  (QRCode as Indexable).CorrectLevel.M,\n      quartile:(QRCode as Indexable).CorrectLevel.Q,\n      high:    (QRCode as Indexable).CorrectLevel.H\n    }\n\n    onRender(() => {\n      if (my.View != null) {\n        my.View.innerHTML = ''\n\n        const CorrectionLevel = (\n// @ts-ignore TS7053 allow indexing of \"CorrectionLevelSet\"\n          CorrectionLevelSet[''+my.CorrectionLevel] || QRCode.CorrectLevel.L\n        )\n        const Value = String(my.Value || 'https://github.com/rozek/shareable-note-stickers')\n        const Size  = Math.min(my.Width,my.Height)\n\n// @ts-ignore TS2351 allow construction of \"QRCode\"\n        new QRCode(my.View,{\n          text:Value,\n          width:Size, height:Size,\n          colorDark: my.ForegroundColor || 'black',\n          colorLight:my.BackgroundColor || 'white',\n          correctLevel:CorrectionLevel\n        })\n      }\n      return ''\n    })\n  })\n\n/**** CSSStyleOfVisual ****/\n\n  export function CSSStyleOfVisual (Visual:SNS_Visual):string {\n    expectVisual('visual',Visual)\n\n    let CSSStyleList:string[] = []\n      const {\n        BackgroundColor, BackgroundTexture, ForegroundColor,\n        FontFamily, FontSize, FontWeight, FontStyle, LineHeight\n      } = Visual\n\n      if (BackgroundColor != null) { CSSStyleList.push(`background-color:${BackgroundColor}`) }\n      if (BackgroundTexture != null) {\n        CSSStyleList.push(\n          `background-image:${BackgroundTexture}; background-repeat:repeat`\n        )\n      }\n      if (ForegroundColor != null) { CSSStyleList.push(`color:${ForegroundColor}`) }\n\n      if (FontFamily != null) { CSSStyleList.push(`font-family:${FontFamily}`) }\n      if (FontSize   != null) { CSSStyleList.push(`font-size:${FontSize}px`) }\n      if (FontWeight != null) { CSSStyleList.push(`font-weight:${FontWeight}`) }\n      if (FontStyle  != null) { CSSStyleList.push(`font-style:${FontStyle}`) }\n      if (LineHeight != null) { CSSStyleList.push(`line-height:${LineHeight}px`) }\n    return CSSStyleList.join(';')\n  }\n\n/**** consume/consumingEvent ****/\n\n  function consumeEvent (Event:Event):void {\n    Event.stopPropagation()\n    Event.preventDefault()\n  }\n  const consumingEvent = consumeEvent\n\n/**** propagateEvent ****/\n\n  function propagateEvent (Event:Event):void { /* nop - just a dummy */ }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Visual                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      this._Project = Project\n      this._Id = Id || newId()\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Id - for internal use only ****/\n\n    private _Id:SNS_Id\n\n    public get Id ():SNS_Id  { return this._Id }\n    public set Id (_:SNS_Id) { throwReadOnlyError('Id') }\n\n  /**** Name ****/\n\n    protected _Name:SNS_Name|undefined\n\n    public get Name ():SNS_Name|undefined { return this._Name }\n    public set Name (newName:SNS_Name|undefined) {\n      allowName('visual name',newName)\n      if (newName != null) {\n        newName = newName.trim()\n        if (newName === '') { newName = undefined }\n      }\n\n      if (this._Name !== newName) {\n        this._Name = newName\n        this._reportChange('configure',this,'Name',newName)\n        this.rerender()\n      }\n    }\n\n  /**** Project ****/\n\n    protected _Project:SNS_Project\n\n    public get Project ():SNS_Project  { return this._Project }\n    public set Project (_:SNS_Project) { throwReadOnlyError('Project') }\n\n  /**** Folder ****/\n\n    protected _Folder:SNS_Folder|undefined\n\n    public get Folder ():SNS_Folder|undefined  { return this._Folder }\n    public set Folder (_:SNS_Folder|undefined) { throwReadOnlyError('Folder') }\n\n  /**** isAttached ****/\n\n    public get isAttached ():boolean  {\n      return (this._Folder == null ? ValueIsProject(this) : this._Folder.isAttached )\n    }\n    public set isAttached (_:boolean) { throwReadOnlyError('isAttached') }\n\n  /**** BackgroundColor ****/\n\n    protected _BackgroundColor:SNS_Color|undefined\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return (\n        this._BackgroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundColor\n        : this._BackgroundColor\n      )\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('visual background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    protected _BackgroundTexture:SNS_URL|undefined\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return (\n        this._BackgroundTexture == null\n        ? this._Folder == null ? undefined : this._Folder.BackgroundTexture\n        : this._BackgroundTexture\n      )\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('visual background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** FontFamily ****/\n\n    protected _FontFamily:SNS_Textline|undefined\n\n    public get FontFamily ():SNS_Textline|undefined {\n      return (\n        this._FontFamily == null\n        ? this._Folder == null ? undefined : this._Folder.FontFamily\n        : this._FontFamily\n      )\n    }\n\n    public set FontFamily (newFontFamily:SNS_Textline|undefined) {\n      allowTextline('visual font family',newFontFamily)\n      if (this._FontFamily !== newFontFamily) {\n        this._FontFamily = newFontFamily\n\n        this._reportChange('configure',this,'FontFamily',newFontFamily)\n        this.rerender()\n      }\n    }\n\n  /**** FontSize ****/\n\n    protected _FontSize:SNS_Ordinal|undefined\n\n    public get FontSize ():SNS_Ordinal|undefined {\n      return (\n        this._FontSize == null\n        ? this._Folder == null ? undefined : this._Folder.FontSize\n        : this._FontSize\n      )\n    }\n\n    public set FontSize (newFontSize:SNS_Ordinal|undefined) {\n      allowOrdinal('visual font size',newFontSize)\n      if (this._FontSize !== newFontSize) {\n        this._FontSize = newFontSize\n\n        this._reportChange('configure',this,'FontSize',newFontSize)\n        this.rerender()\n      }\n    }\n\n  /**** FontWeight ****/\n\n    protected _FontWeight:SNS_Ordinal|undefined\n\n    public get FontWeight ():SNS_Ordinal|undefined {\n      return (\n        this._FontWeight == null\n        ? this._Folder == null ? undefined : this._Folder.FontWeight\n        : this._FontWeight\n      )\n    }\n\n    public set FontWeight (newFontWeight:SNS_Ordinal|undefined) {\n      allowIntegerInRange('visual font weight',newFontWeight, 1,1000)\n      if (this._FontWeight !== newFontWeight) {\n        this._FontWeight = newFontWeight\n\n        this._reportChange('configure',this,'FontWeight',newFontWeight)\n        this.rerender()\n      }\n    }\n\n  /**** FontStyle ****/\n\n    protected _FontStyle:SNS_FontStyle|undefined\n\n    public get FontStyle ():SNS_FontStyle|undefined {\n      return (\n        this._FontStyle == null\n        ? this._Folder == null ? undefined : this._Folder.FontStyle\n        : this._FontStyle\n      )\n    }\n\n    public set FontStyle (newFontStyle:SNS_FontStyle|undefined) {\n      allowOneOf('visual font style',newFontStyle, SNS_FontStyles)\n      if (this._FontStyle !== newFontStyle) {\n        this._FontStyle = newFontStyle\n\n        this._reportChange('configure',this,'FontStyle',newFontStyle)\n        this.rerender()\n      }\n    }\n\n  /**** LineHeight ****/\n\n    protected _LineHeight:SNS_Ordinal|undefined\n\n    public get LineHeight ():SNS_Ordinal|undefined {\n      return (\n        this._LineHeight == null\n        ? this._Folder == null ? undefined : this._Folder.LineHeight\n        : this._LineHeight\n      )\n    }\n\n    public set LineHeight (newLineHeight:SNS_Ordinal|undefined) {\n      allowOrdinal('visual line height',newLineHeight)\n      if (this._LineHeight !== newLineHeight) {\n        this._LineHeight = newLineHeight\n\n        this._reportChange('configure',this,'LineHeight',newLineHeight)\n        this.rerender()\n      }\n    }\n\n  /**** ForegroundColor ****/\n\n    protected _ForegroundColor:SNS_Color|undefined\n\n    public get ForegroundColor ():SNS_Color|undefined {\n      return (\n        this._ForegroundColor == null\n        ? this._Folder == null ? undefined : this._Folder.ForegroundColor\n        : this._ForegroundColor\n      )\n    }\n\n    public set ForegroundColor (newForegroundColor:SNS_Color|undefined) {\n      allowColor('visual foreground color',newForegroundColor)\n      if (this._ForegroundColor !== newForegroundColor) {\n        this._ForegroundColor = newForegroundColor\n\n        this._reportChange('configure',this,'ForegroundColor',newForegroundColor)\n        this.rerender()\n      }\n    }\n\n  /**** Color ****/\n\n    public get Color ():SNS_Color|undefined { return this.ForegroundColor }\n    public set Color (newColor:SNS_Color|undefined) { this.ForegroundColor = newColor }\n\n  /**** Value ****/\n\n    protected _Value:serializableValue = null\n\n    public get Value ():serializableValue  { return this._Value }\n    public set Value (newValue:serializableValue) {\n      if (ValuesDiffer(this._Value,newValue)) {\n        this._Value = newValue\n\n        this._reportChange('configure',this,'Value',newValue)\n        this.rerender()\n      }\n    }\n\n  /**** editableValue (may be overwritten) ****/\n\n    public get editableValue ():SNS_Text {\n      return (this._Value == null ? '' : ''+this._Value)\n    }                      // stringify non-literal values before returning them\n\n    public set editableValue (newValue:SNS_Text) {\n      this.Value = newValue      // parse text before setting non-literal values\n    }\n\n  /**** observed ****/\n\n// @ts-ignore TS2564 allow \"_observed\" to be assigned upon first use\n    protected _observed:Indexable\n\n    public get observed ():Indexable {\n      if (this._observed == null) {\n        this._observed = observe({},{ deep:false })\n      }\n      return this._observed\n    }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** unobserved ****/\n\n// @ts-ignore TS2564 allow \"_unobserved\" to be assigned upon first use\n    protected _unobserved:Indexable\n\n    public get unobserved ():Indexable {\n      if (this._unobserved == null) {\n        this._unobserved = {}\n      }\n      return this._unobserved\n    }\n    public set unobserved (_:Indexable) { throwReadOnlyError('unobserved') }\n\n  /**** memoized ****/\n\n// @ts-ignore TS2564 allow \"_memoized\" to be assigned upon first use\n    protected _memoized:Indexable\n\n    public get memoized ():Indexable {\n      if (this._memoized == null) {\n        this._memoized = {}\n      }\n      return this._memoized\n    }\n    public set memoized (_:Indexable) { throwReadOnlyError('memoized') }\n\n  /**** Script ****/\n\n    public get Script ():SNS_Text|undefined {\n      return (this._pendingScript == null ? this._activeScript : this._pendingScript)\n    }\n    public set Script (_:SNS_Text|undefined) { throwReadOnlyError('Script') }\n\n  /**** activeScript ****/\n\n    protected _activeScript:SNS_Text|undefined\n\n    public get activeScript ():SNS_Text|undefined {\n      return this._activeScript\n    }\n\n    public set activeScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (newScript === '') { newScript = undefined }      // no \".trim()\" here!\n\n      if (this._activeScript !== newScript) {\n        this._activeScript = newScript\n//      this.activateScript()                   // not here (because of sharing)\n\n        this._reportChange('configure',this,'activeScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** pendingScript ****/\n\n    protected _pendingScript:SNS_Text|undefined\n\n    public get pendingScript ():SNS_Text|undefined {\n      return this._pendingScript\n    }\n\n    public set pendingScript (newScript:SNS_Text|undefined) {\n      allowText('visual script',newScript)\n      if (this._pendingScript !== newScript) {\n        this._pendingScript = newScript\n\n        this._reportChange('configure',this,'pendingScript',newScript)\n        this.rerender()\n      }\n    }\n\n  /**** activateScript ****/\n\n    public activateScript ():void {\n      let activeScript:string|undefined = (this._activeScript || '').trim()\n//    if (activeScript === '') { activeScript = undefined }\n\n      this.Error = undefined\n\n      this._Renderer = undefined\n      unregisterAllReactiveFunctionsFrom(this)\n\n      if (activeScript != null) {\n        let compiledScript\n        try {\n          compiledScript = new Function(\n            'me,my, html,reactively, onRender,onMount,onUnmount, useBehavior, ' +\n            'onClick,onInput,onDrop', activeScript\n          )\n        } catch (Signal:any) {\n          console.error('visual script compilation failure',Signal)\n          this.Error = {\n            Type:'Script Compilation Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also autoamtically rerenders this visual\n          return\n        }\n\n        const reactively = (reactiveFunction:Function):void => {\n          expectFunction('reactive function',reactiveFunction)\n// @ts-ignore TS2345 do not care about the specific signature of \"reactiveFunction\"\n          registerReactiveFunctionIn(this,computed(reactiveFunction))\n        }\n\n        const onRender  = this.onRender.bind(this)\n        const onMount   = this.onMount.bind(this)\n        const onUnmount = this.onUnmount.bind(this)\n\n// @ts-ignore TS7053 allow indexing for a moment\n        const onClick = (this['onClick'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onInput = (this['onInput'] || propagateEvent).bind(this)\n// @ts-ignore TS7053 allow indexing for a moment\n        const onDrop  = (this['onDrop']  || propagateEvent).bind(this)\n\n        try {\n          compiledScript.call(\n            this, this,this, html,reactively, onRender,onMount,onUnmount,\n            useBehavior.bind(this), onClick,onInput,onDrop\n          )\n        } catch (Signal) {\n          console.error('visual script execution failure',Signal)\n          this.Error = {\n            Type:'Script Execution Failure',\n            Message:''+Signal, Cause:Signal\n          }                          // also automatically rerenders this visual\n          return\n        }\n      }\n      this.rerender()\n    }\n\n  /**** ScriptError - for internal use only ****/\n\n    protected _ScriptError:SNS_Error|undefined\n\n    public get ScriptError ():SNS_Error|undefined {\n      return (this._ScriptError == null ? undefined : { ...this._ScriptError })\n    }\n    public set ScriptError (newScriptError:SNS_Error|undefined) {\n      allowError('script error setting',newScriptError)\n      if (ValuesDiffer(this._ScriptError,newScriptError)) {\n        this._ScriptError = newScriptError\n\n        this._reportChange('configure',this,'ScriptError',newScriptError)\n        this.rerender()\n      }\n    }\n\n  /**** CSSStyle ****/\n\n    public get CSSStyle ():string  { return CSSStyleOfVisual(this) }\n    public set CSSStyle (_:string) { throwReadOnlyError('CSSStyle') }\n\n  /**** Renderer ****/\n\n    protected _Renderer:Function|undefined\n\n    public get Renderer ():Function|undefined { return this._Renderer }\n    public set Renderer (newRenderer:Function|undefined) {\n      allowFunction('visual renderer',newRenderer)\n      if (this._Renderer !== newRenderer) {\n        this._Renderer = newRenderer\n        this.rerender()\n      }\n    }\n\n  /**** onRender ****/\n\n    public onRender (newRenderer:Function):void {\n      expectFunction('renderer callback',newRenderer)\n      this.Renderer = newRenderer\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender (to be overwritten) ****/\n\n// @ts-ignore TS2564 allow \"Board\" and \"Sticker\" to be never read\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      /* to be overwritten */\n    }\n\n  /**** View ****/\n\n    private _View:HTMLElement|undefined\n\n    public get View ():HTMLElement|undefined { return this._View }\n    public set View (_:HTMLElement)          { throwReadOnlyError('View') }\n\n  /**** isMounted ****/\n\n    public get isMounted ():boolean  { return (this._View != null) }\n    public set isMounted (_:boolean) { throwReadOnlyError('isMounted') }\n\n  /**** onMount ****/\n\n    protected _onMount:Function|undefined\n\n    public onMount (newCallback:Function|undefined):void {\n      allowFunction('\"onMount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onMount = undefined\n      } else {\n        this._onMount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onMount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n            this.rerender()\n          }\n        }\n      }\n    }\n\n  /**** onUnmount ****/\n\n    protected _onUnmount:Function|undefined\n\n    public onUnmount (newCallback:Function|undefined):void {\n      allowFunction('\"onUnmount\" callback',newCallback)\n      if (newCallback == null) {\n        this._onUnmount = undefined\n      } else {\n        this._onUnmount = () => {\n          try {\n            newCallback.call(this)\n          } catch (Signal:any) {\n            this.Error = {\n              Type:'\"onUnmount\" Callback Failure',\n              Message:''+Signal, Cause:Signal\n            }\n          }\n        }\n      }\n    }\n\n  /**** Error - for internal use only ****/\n\n    protected _Error:SNS_Error|undefined\n\n    public get Error ():SNS_Error|undefined {\n      return (this._Error == null ? undefined : {...this._Error})\n    }\n    public set Error (newError:SNS_Error|undefined) {\n      allowError('error setting',newError)\n      if (ValuesDiffer(this._Error,newError)) {\n        this._Error = newError\n\n        this._reportChange('configure',this,'Error',newError)\n        this.rerender()\n      }\n    }\n\n  /**** hasError ****/\n\n    public get hasError ():boolean  { return (this._Error != null) }\n    public set hasError (_:boolean) { throwReadOnlyError('hasError') }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', ...ArgList:any[]\n    ):void {\n// @ts-ignore TS2556 what is this error good for?\n      this._Project._reportChange(Change, ...ArgList)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      Serialization.Id = this.Id                                 // special case\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        'memoized','Value','activeScript','pendingScript',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\" and \"Serialization\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      deserializeProperty('activeScript')            // e.g., for custom setters\n\n      ;[\n        'Name','BackgroundColor','BackgroundTexture',\n        'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n        'ForegroundColor',\n        /*'memoized',*/'Value','activeScript','pendingScript',\n      ].forEach((Name:string) => deserializeProperty(Name))\n\n      if (ValueIsPlainObject(Serialization.memoized)) {\n        try {\n          Object.assign(this.memoized,Serialization.memoized)\n        } catch (Signal:any) {\n          console.warn(\n            'DeserializationError:invalid value for property \"memoized\"'\n          )\n        }\n      }\n    }   // deserializing \"activeScript\" also automatically activates that script\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Folder                                --\n//------------------------------------------------------------------------------\n\n  export class SNS_Folder extends SNS_Visual {\n    protected constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n    }   // IMPORTANT: SNS_Project constructor will pass \"undefined\" as \"Project\"\n\n  /**** Path ****/\n\n    public get Path ():SNS_Textline  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return '|'\n      } else {\n        const localPath = this.Name || ('#' + this.Index)\n        const outerPath = outerFolder.Path\n        return (outerPath === '|' ? '' : outerPath) + '|' + localPath\n      }\n    }\n    public set Path (_:SNS_Textline) { throwReadOnlyError('Path') }\n\n  /**** BoardAtPath ****/\n\n    public BoardAtPath (Path:SNS_Textline):SNS_Board|undefined {\n      expectTextline('board path',Path)\n\n      Path = Path.trim()\n      if (Path === '') {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n        return (this._Folder == null ? undefined : this as SNS_Board)\n      }\n\n      if (Path.startsWith('|')) {        // let \"Project\" process absolute paths\n        return this._Project.BoardAtPath(Path.replace(/^(\\s*\\|)*/,''))\n      }\n\n      Path = Path.replace(/\\|+/g,'|')        // reduce multiple consecutive \"|\"s\n\n      const splitPath:(string|number)[] = Path.split('|').map(\n        (Element:string) => Element.trim()      // eliminate leading/trailing ws\n      ).map(\n        (Element:string) => (/^#\\d+$/.test(Element)    // disting. names/indices\n          ? parseInt(Element.slice(1),10)\n          : Element\n        )\n      )\n\n      let Result:SNS_Board|undefined\n        for (let i = 0, l = splitPath.length; i < l; i++) {\n          const Element:string|number = splitPath[i]\n          if (typeof Element === 'number') {\n            Result = (Result || this).BoardAt(Element)\n          } else {\n            Result = (Result || this).BoardNamed(Element)\n          }\n          if (Result == null) { return undefined }\n        }\n      return Result\n    }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  {\n      const outerFolder = this._Folder\n      if (outerFolder == null) {\n        return []\n      } else {\n        return outerFolder.IndexPath.concat(this.Index)\n      }\n    }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** SnapToGrid - inherited from outer folders ****/\n\n    protected _SnapToGrid:boolean|undefined\n\n    public get SnapToGrid ():boolean {\n      return (\n        ! this._SnapToGrid\n        ? this._Folder == null ? false : this._Folder.SnapToGrid\n        : this._SnapToGrid == true\n      )\n    }\n\n    public set SnapToGrid (newSetting:boolean|undefined) {\n      allowBoolean('snap-to-grid setting',newSetting)\n      if (this._SnapToGrid !== newSetting) {\n        this._SnapToGrid = newSetting\n\n        this._reportChange('configure',this,'SnapToGrid',newSetting)\n        this.rerender()\n      }\n    }\n\n  /**** GridWidth ****/\n\n    protected _GridWidth:SNS_Cardinal|undefined\n\n    public get GridWidth ():SNS_Cardinal {\n      return (\n        this._GridWidth == null\n        ? this._Folder == null ? defaultGridWidth : this._Folder.GridWidth\n        : this._GridWidth\n      )\n    }\n\n    public set GridWidth (newWidth:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid width',newWidth)\n      if (this._GridWidth !== newWidth) {\n        this._GridWidth = newWidth\n\n        this._reportChange('configure',this,'GridWidth',newWidth)\n        this.rerender()\n      }\n    }\n\n  /**** GridHeight ****/\n\n    protected _GridHeight:SNS_Cardinal|undefined\n\n    public get GridHeight ():SNS_Cardinal {\n      return (\n        this._GridHeight == null\n        ? this._Folder == null ? defaultGridHeight : this._Folder.GridHeight\n        : this._GridHeight\n      )\n    }\n\n    public set GridHeight (newHeight:SNS_Cardinal|undefined) {\n      allowCardinal('snap-to-grid height',newHeight)\n      if (this._GridHeight !== newHeight) {\n        this._GridHeight = newHeight\n\n        this._reportChange('configure',this,'GridHeight',newHeight)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? -1 : this._Folder.IndexOfBoard(this))\n    }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardUp(this))\n    }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardDown(this))\n    }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** mayBeShiftedIn ****/\n\n    public get mayBeShiftedIn ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardIn(this))\n    }\n    public set mayBeShiftedIn (_:boolean) { throwReadOnlyError('mayBeShiftedIn') }\n\n  /**** mayBeShiftedOut ****/\n\n    public get mayBeShiftedOut ():boolean  {\n// @ts-ignore TS2322 a \"Folder\" with no outer folder is a \"Board\"\n      return (this._Folder == null ? false : this._Folder.mayShiftBoardOut(this))\n    }\n    public set mayBeShiftedOut (_:boolean) { throwReadOnlyError('mayBeShiftedOut') }\n\n  /**** containsFolder ****/\n\n    public containsFolder (Folder:SNS_Folder):boolean {\n      expectFolder('folder',Folder)\n\n      Folder = Folder.Folder as SNS_Folder\n        while (Folder != null) {\n          if (Folder === this) { return true }\n          Folder = Folder.Folder as SNS_Folder\n        }\n      return false\n    }\n\n  /**** BoardList ****/\n\n    protected _BoardList:SNS_Board[] = []\n\n    public get BoardList ():SNS_Board[]  { return this._BoardList.slice() }\n    public set BoardList (_:SNS_Board[]) { throwReadOnlyError('BoardList') }\n\n  /**** BoardCount ****/\n\n    public get BoardCount ():number  { return this._BoardList.length }\n    public set BoardCount (_:number) { throwReadOnlyError('BoardCount') }\n\n  /**** IndexOfBoard ****/\n\n    public IndexOfBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):number {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) { return -1 }\n\n      return this._BoardList.indexOf(Board)\n    }\n\n  /**** Board ****/\n\n    public Board (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board|undefined {\n      expectValue('board, name or index',BoardOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsBoard(BoardOrNameOrIndex):\n          const Board = BoardOrNameOrIndex as SNS_Board\n          return (Board._Folder === this ? Board : undefined)\n        case ValueIsInteger(BoardOrNameOrIndex):\n          let Index = BoardOrNameOrIndex as number\n          if (Index < 0) { Index += this._BoardList.length }\n          return this._BoardList[Index]\n        case ValueIsName(BoardOrNameOrIndex):\n          return this.BoardNamed(BoardOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid board, board name or board index given'\n      )\n    }\n\n  /**** existingBoard ****/\n\n    public existingBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):SNS_Board {\n      let Board = this.Board(BoardOrNameOrIndex)\n        if (Board == null) throwError(\n          'BoardNotFound: the desired board could not be found'\n        )\n      return Board\n    }\n\n  /**** BoardNamed ****/\n\n    public BoardNamed (Name:SNS_Name):SNS_Board|undefined {\n      expectName('SNS board name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Board|undefined = undefined\n        this._BoardList.forEach((Board:SNS_Board) => {\n          if (\n            (Result == null) &&\n            (Board.Name != null) && (Board.Name.toLowerCase() === Name)\n          ) {\n            Result = Board\n          }\n        })\n      return Result\n    }\n\n  /**** BoardAt ****/\n\n    public BoardAt (Index:number):SNS_Board|undefined {\n      expectInteger('SNS board index',Index)\n      if (Index < 0) { Index += this._BoardList.length }\n      return this._BoardList[Index]\n    }\n\n  /**** hasBoard ****/\n\n    public hasBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this.Board(BoardOrNameOrIndex) != null)\n    }\n\n  /**** newBoardAt ****/\n\n    public newBoardAt (Index?:number, Id?:SNS_Id):SNS_Board {\n      return (\n        Id == null\n        ? this.BoardDeserializedAt({},Index)\n        : this.BoardDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** BoardDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public BoardDeserializedAt (Serialization:Serializable, Index?:number):SNS_Board {\n      expectSerializable('board serialization',Serialization)\n      allowInteger     ('board insertionindex',Index)\n\n      if (Index == null) {\n        Index = this._BoardList.length\n      } else {\n        if (Index < 0) { Index += this._BoardList.length }\n        Index = Math.max(0,Math.min(Index,this._BoardList.length))\n      }\n\n      const Id = allowedId('board id',Serialization.Id)\n\n      let newBoard = new SNS_Board(this._Project, Id)        // registers itself\n        this._attachBoardAt(newBoard,Index)\n\n        newBoard._deserializeConfigurationFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeStickersFrom(Serialization)\n// @ts-ignore TS2445 \"newBoard\" *IS* an SNS_Board\n        newBoard._deserializeBoardsFrom(Serialization)\n\n        this.rerender()\n      return newBoard\n    }\n\n  /**** DuplicateOfBoardAt ****/\n\n    public DuplicateOfBoardAt (Index:number):SNS_Board {\n      expectInteger('board index',Index)\n      const Board = this.existingBoard(Index)                             // DRY\n      const Serialization = Board.Serialization\n        removeIdsFrom(Serialization)\n      return this.BoardDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftBoardUp/Down ****/\n\n    public mayShiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return (this._BoardList.indexOf(Board) > 0)\n    }\n\n    public mayShiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      const BoardList  = this._BoardList\n      const BoardIndex = BoardList.indexOf(Board)\n      return (BoardIndex >= 0) && (BoardIndex < BoardList.length-1)\n    }\n\n  /**** shiftBoardToTop ****/\n\n    public shiftBoardToTop (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardUp ****/\n\n    public shiftBoardUp (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardUp(Board)) {                       // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardDown ****/\n\n    public shiftBoardDown (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardToBottom ****/\n\n    public shiftBoardToBottom (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardDown(Board)) {                     // keeps code DRY\n        const oldIndex = this._BoardList.indexOf(Board)\n        this._detachBoardAt(oldIndex)\n        this._attachBoardAt(Board,this._BoardList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftBoardTo ****/\n\n    public shiftBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number, newIndex:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n\n      expectInteger('SNS board index',newIndex)\n      if (newIndex < 0) { newIndex += this._BoardList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._BoardList.length))\n\n      const oldIndex = this._BoardList.indexOf(Board)\n      if (oldIndex === newIndex) { return }\n\n      this._detachBoardAt(oldIndex)\n      this._attachBoardAt(Board,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftBoardsByIndex ****/\n\n    public shiftBoardsByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const BoardCount = this._BoardList.length\n\n      expectIntegerInRange('old index',oldIndex,0,BoardCount)\n      expectIntegerInRange('new index',newIndex,0,BoardCount)\n\n      const BoardsToShift = this._BoardList.slice(oldIndex,oldIndex+Count)\n      BoardsToShift.forEach((_:any) => this._detachBoardAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      BoardsToShift.forEach(\n        (Board:SNS_Board,i:number) => this._attachBoardAt(Board,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** mayShiftBoardIn/Out ****/\n\n    public mayShiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      return this.mayShiftBoardDown(Board)                                // DRY\n    }\n\n    public mayShiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):boolean {\n      return (this._Folder != null)\n    }\n\n  /**** shiftBoardIn ****/\n\n    public shiftBoardIn (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardIn(Board)) {                       // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._BoardList[oldIndex+1]\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,0)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** shiftBoardOut ****/\n\n    public shiftBoardOut (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      if (this.mayShiftBoardOut(Board)) {                      // keeps code DRY\n        const oldIndex  = this._BoardList.indexOf(Board)\n        const newFolder = this._Folder as SNS_Folder\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newFolder.Index)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** mayMoveBoardTo ****/\n\n    public mayMoveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):boolean {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const Folder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      return (\n        Folder.isAttached && (Folder !== Board) && ! Board.containsFolder(Folder)\n      )\n    }\n\n  /**** moveBoardTo ****/\n\n    public moveBoardTo (\n      BoardOrNameOrIndex:SNS_Board|SNS_Name|number,\n      FolderOrNameOrIndex:SNS_Folder|SNS_Name|number, Index?:number\n    ):void {\n      const Board = this.existingBoard(BoardOrNameOrIndex)\n      const newFolder = (\n        ValueIsFolder(FolderOrNameOrIndex)\n        ? FolderOrNameOrIndex as SNS_Folder\n        : this.existingBoard(FolderOrNameOrIndex as SNS_Name|number)\n      )\n      allowInteger('insertion index',Index)\n\n      if (\n        newFolder.isAttached && (newFolder !== Board) &&\n        ! Board.containsFolder(newFolder)\n      ) {\n        const oldIndex = this._BoardList.indexOf(Board)\n\n        let newIndex = (Index == null ? newFolder.BoardCount : Index)\n        if (newIndex < 0) { newIndex += newFolder.BoardCount }\n        newIndex = Math.max(0, Math.min(newIndex,newFolder.BoardCount))\n\n        this._detachBoardAt(oldIndex)\n        newFolder._attachBoardAt(Board,newIndex)\n\n        this.rerender()\n        newFolder.rerender()\n      }\n    }\n\n  /**** destroyBoard ****/\n\n    public destroyBoard (BoardOrNameOrIndex:SNS_Board|SNS_Name|number):void {\n      const Board = this.Board(BoardOrNameOrIndex)\n      if (Board == null) {\n        if (ValueIsBoard(BoardOrNameOrIndex)) throwError(\n          'NoSuchBoard: the given board could not be found'\n        )\n        return\n      }\n\n      ;(Board as SNS_Board).clear()\n      unregisterAllReactiveFunctionsFrom(Board as SNS_Board)\n\n      const oldIndex = this._BoardList.indexOf(Board as SNS_Board)\n      this._detachBoardAt(oldIndex)\n\n      unregisterFolder(Board)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Board._Project = undefined         // detaches this board from the project\n\n      this._reportChange('destroyBoard',Board)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      for (let i = 0, l = this._BoardList.length; i < l; i++) {\n        this.destroyBoard(this._BoardList[0])\n      }\n    }\n\n  /**** _attachBoardAt ****/\n\n    /* protected */ _attachBoardAt (Board:SNS_Board, Index:number):void {\n      Board._Folder = this\n      this._BoardList.splice(Index,0, Board)\n      this._reportChange('attachBoard', Board, this, Index)\n    }\n\n  /**** _detachBoardAt ****/\n\n    /* protected */ _detachBoardAt (Index:number):void {\n      const Board = this._BoardList.splice(Index,1)[0]\n      Board._Folder = undefined\n      this._reportChange('detachBoard', Board, this, Index)\n    }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      const serializeProperty = (Name:string) => {\n// @ts-ignore TS7053 allow indexing of \"this\"\n        if (this['_'+Name] != null) {\n// @ts-ignore TS7053 allow indexing of \"Serialization\"\n          Serialization[Name] = this[Name]\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => serializeProperty(Name))\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      const deserializeProperty = (Name:string) => {\n        if (Serialization[Name] != null) {\n          try {\n// @ts-ignore TS7053 allow indexing of \"this\"\n            this[Name] = Serialization[Name]   // also validates the given value\n          } catch (Signal:any) {\n            console.warn(\n              'DeserializationError:invalid value for property ' + quoted(Name)\n            )\n          }\n        }\n      }\n\n      ;[\n        'SnapToGrid','GridWidth','GridHeight',\n      ].forEach((Name:string) => deserializeProperty(Name))\n    }\n\n  /**** _serializeBoardsInto ****/\n\n    protected _serializeBoardsInto (Serialization:Serializable):void {\n      const BoardList = this._BoardList.slice()\n      if (BoardList.length > 0) {\n        Serialization.BoardList = BoardList.map(\n          (Board:SNS_Board) => Board.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeBoardsFrom ****/\n\n    protected _deserializeBoardsFrom (Serialization:Serializable):void {\n      const BoardList = this._BoardList\n      if (BoardList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.BoardList,ValueIsPlainObject) &&\n        ((Serialization.BoardList as any[]).length > 0)\n      ) {\n        (Serialization.BoardList as Serializable[]).forEach(\n          (BoardSerialization:Serializable, Index:number) => {\n            this.BoardDeserializedAt(BoardSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Project                                --\n//------------------------------------------------------------------------------\n\n  const SNS_ProjectPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_ProjectPropertySet[Property] = true)\n\n  export class SNS_Project extends SNS_Folder {\n    protected constructor (Name:SNS_Name) {\n// @ts-ignore TS2345 allow \"undefined\" here, as \"this\" is not possible\n      super(undefined,undefined)\n      this._Project = this // n.b. \"this\" must not be passed to \"super\"\n\n      expectName('project name',Name)\n      this._Name = Name\n    }\n\n  /**** Name ****/\n\n    public get Name ():SNS_Name|undefined  { return this._Name }\n    public set Name (_:SNS_Name|undefined) { throwReadOnlyError('Name') }\n\n  /**** IndexPath ****/\n\n    public get IndexPath ():SNS_Ordinal[]  { return [] }\n    public set IndexPath (_:SNS_Ordinal[]) { throwReadOnlyError('IndexPath') }\n\n  /**** BoardAtIndexPath ****/\n\n    public BoardAtIndexPath (IndexPath:SNS_Ordinal[]):SNS_Board|undefined {\n      expectListSatisfying('board index path',IndexPath,ValueIsOrdinal)\n\n      if (IndexPath.length === 0) {\n        return undefined\n      } else {\n        let Result:SNS_Board|undefined\n          for (let i = 0, l = IndexPath.length; i < l; i++) {\n            Result = (Result || this).BoardAt(IndexPath[i])\n            if (Result == null) { return undefined }\n          }\n        return Result\n      }\n    }\n\n  /**** FolderWithId ****/\n\n    public FolderWithId (Id:SNS_Id):SNS_Folder|undefined {\n      expectId('folder id',Id)\n      return FolderWithId(this,Id)\n    }\n\n  /**** BoardWithId ****/\n\n    public BoardWithId (Id:SNS_Id):SNS_Board|undefined {\n      const Folder = FolderWithId(this,Id)\n      if (ValueIsProject(Folder)) throwError(\n        'NotABoard: the folder with the given id is not a board, but the project'\n      )\n\n      return Folder as SNS_Board\n    }\n\n  /**** StickerWithId ****/\n\n    public StickerWithId (Id:SNS_Id):SNS_Sticker|undefined {\n      expectId('sticker id',Id)\n      return StickerWithId(this,Id)\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n    }\n\n  /**** onChange ****/\n\n    protected _onChange:SNS_onChangeCallback[] = []\n\n    public onChange (Callback:SNS_onChangeCallback):void {\n      expectFunction('\"onChange\" callback',Callback)\n      this._onChange.push(Callback)\n    }\n\n  /**** _reportChange ****/\n\n    /* protected */ _reportChange (\n      Change:SNS_Change|'configure', Visual:SNS_Visual, ...ArgList:any[]\n    ):void {\n      if (Change === 'configure') {\n        Change = ValueIsFolder(Visual) ? 'configureFolder' : 'configureSticker'\n      }\n\n      ArgList.unshift(this, Change, Visual)\n      this._onChange.forEach(\n// @ts-ignore TS2345 skip checking of individual \"ArgList\" elements\n        (Callback:SNS_onChangeCallback) => Callback.apply(this,ArgList)\n      )\n    }\n\n  /**** onRendering ****/\n\n    protected _onRendering:SNS_onRenderingCallback[] = []\n\n    public onRendering (Callback:SNS_onRenderingCallback):void {\n      expectFunction('\"onRendering\" callback',Callback)\n      this._onRendering.push(Callback)\n    }\n\n  /**** rerender - warning: semantics differs from that of other visuals ****/\n\n    public rerender (Board?:SNS_Board, Sticker?:SNS_Sticker):void {\n      this._onRendering.forEach(\n        (Callback:SNS_onRenderingCallback) => Callback(this, Board, Sticker)\n      )\n    }\n\n  /**** onError ****/\n\n    protected _onError:SNS_onErrorCallback[] = []\n\n    public onError (Callback:SNS_onErrorCallback):void {\n      expectFunction('\"onError\" callback',Callback)\n      this._onError.push(Callback)\n    }\n\n  /**** showError ****/\n\n    public showError (Visual:SNS_Visual, Error:SNS_Error):void {\n      this._onError.forEach(\n        (Callback:SNS_onErrorCallback) => Callback(this, Visual, Error)\n      )\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n\n        delete Result.Id               // do not serialize the \"Id\" of a project\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** deserializedFrom - nota bene: needs explicit script activation! ****/\n\n    public static deserializedFrom (\n      Name:SNS_Name, Serialization:Serializable\n    ):SNS_Project {\n      expectName('project name',Name)\n\n      const Result = new SNS_Project(Name)\n        delete Serialization.Name\n        Result._Name = Name\n\n        Result._deserializeConfigurationFrom(Serialization)\n        Result._deserializeBoardsFrom(Serialization)\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                SNS_Board                                 --\n//------------------------------------------------------------------------------\n\n  const SNS_BoardPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name','BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n      'SnapToGrid','GridWidth','GridHeight',\n    ].forEach((Property:string) => SNS_BoardPropertySet[Property] = true)\n\n  export class SNS_Board extends SNS_Folder {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerFolder(Project,this)\n\n      Project._reportChange('createBoard', this)\n    }\n\n  /**** StickerList ****/\n\n    protected _StickerList:SNS_Sticker[] = []\n\n    public get StickerList ():SNS_Sticker[]  { return this._StickerList.slice() }\n    public set StickerList (_:SNS_Sticker[]) { throwReadOnlyError('StickerList') }\n\n  /**** StickerCount ****/\n\n    public get StickerCount ():number  { return this._StickerList.length }\n    public set StickerCount (_:number) { throwReadOnlyError('StickerCount') }\n\n  /**** IndexOfSticker ****/\n\n    public IndexOfSticker (Sticker:SNS_Sticker):number {\n      expectSticker('SNS sticker to search for',Sticker)\n      return this._StickerList.indexOf(Sticker)\n    }\n\n  /**** Sticker ****/\n\n    public Sticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker|undefined {\n      expectValue('sticker, name or index',StickerOrNameOrIndex)\n\n      switch (true) {\n        case ValueIsSticker(StickerOrNameOrIndex):\n          const Sticker = StickerOrNameOrIndex as SNS_Sticker\n          return (Sticker.Board === this ? Sticker : undefined)\n        case ValueIsInteger(StickerOrNameOrIndex):\n          const Index = StickerOrNameOrIndex as number\n          return this._StickerList[Index]\n        case ValueIsName(StickerOrNameOrIndex):\n          return this.StickerNamed(StickerOrNameOrIndex as SNS_Name)\n      }\n\n      throwError(\n        'InvalidArgument: no valid sticker, sticker name or sticker index given'\n      )\n    }\n\n  /**** existingSticker ****/\n\n    public existingSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):SNS_Sticker {\n      let Sticker = this.Sticker(StickerOrNameOrIndex)\n        if (Sticker == null) throwError(\n          'StickerNotFound: the desired sticker could not be found'\n        )\n      return Sticker\n    }\n\n  /**** StickerNamed ****/\n\n    public StickerNamed (Name:SNS_Name):SNS_Sticker|undefined {\n      expectName('SNS sticker name',Name)\n      Name = Name.trim().toLowerCase()\n\n      let Result:SNS_Sticker|undefined = undefined\n        this._StickerList.forEach((Sticker:SNS_Sticker) => {\n          if (\n            (Result == null) &&\n            (Sticker.Name != null) && (Sticker.Name.toLowerCase() === Name)\n          ) {\n            Result = Sticker\n          }\n        })\n      return Result\n    }\n\n  /**** StickerAt ****/\n\n    public StickerAt (Index:number):SNS_Sticker|undefined {\n      expectInteger('SNS sticker index',Index)\n      if (Index < 0) { Index += this._StickerList.length }\n      return this._StickerList[Index]\n    }\n\n  /**** hasSticker ****/\n\n    public hasSticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      return (this.Sticker(StickerOrNameOrIndex) != null)\n    }\n\n  /**** newStickerAt ****/\n\n    public newStickerAt (Index?:number, Id?:SNS_Id):SNS_Sticker {\n      return (\n        Id == null\n        ? this.StickerDeserializedAt({},Index)\n        : this.StickerDeserializedAt({ Id },Index)\n      )\n    }\n\n  /**** StickerDeserializedAt - nota bene: needs explicit script activation! ****/\n\n    public StickerDeserializedAt (Serialization:Serializable, Index?:number):SNS_Sticker {\n      expectSerializable('sticker serialization',Serialization)\n      allowInteger          ('SNS sticker index',Index)\n\n      if (Index == null) {\n        Index = this._StickerList.length\n      } else {\n        if (Index < 0) { Index += this._StickerList.length }\n        Index = Math.max(0,Math.min(Index,this._StickerList.length))\n      }\n\n      const Id = allowedId('sticker id',Serialization.Id)\n\n      let newSticker = new SNS_Sticker(this.Project, Id)     // registers itself\n        this._attachStickerAt(newSticker,Index)\n\n// @ts-ignore TS2445 \"newSticker\" *IS* an SNS_Visual\n        newSticker._deserializeConfigurationFrom(Serialization)\n\n        this.rerender()\n      return newSticker\n    }\n\n  /**** DuplicateOfStickerAt ****/\n\n    public DuplicateOfStickerAt (Index:number):SNS_Sticker {\n      expectInteger('SNS sticker index',Index)\n      const Sticker = this.existingSticker(Index)                         // DRY\n      const Serialization = Sticker.Serialization\n        removeIdsFrom(Serialization)\n      return this.StickerDeserializedAt(Serialization,Index+1)\n    }\n\n  /**** mayShiftStickerUp/Down ****/\n\n    public mayShiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      return (this._StickerList.indexOf(Sticker) > 0)\n    }\n\n    public mayShiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):boolean {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      const StickerList  = this._StickerList\n      const StickerIndex = StickerList.indexOf(Sticker)\n      return (StickerIndex >= 0) && (StickerIndex < StickerList.length-1)\n    }\n\n  /**** shiftStickerToTop ****/\n\n    public shiftStickerToTop (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,0)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerUp ****/\n\n    public shiftStickerUp (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerUp(Sticker)) {                   // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex-1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerDown ****/\n\n    public shiftStickerDown (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,oldIndex+1)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerToBottom ****/\n\n    public shiftStickerToBottom (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n      if (this.mayShiftStickerDown(Sticker)) {                 // keeps code DRY\n        const oldIndex = this._StickerList.indexOf(Sticker)\n        this._detachStickerAt(oldIndex)\n        this._attachStickerAt(Sticker,this._StickerList.length)\n        this.rerender()\n      }\n    }\n\n  /**** shiftStickerTo ****/\n\n    public shiftStickerTo (\n      StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number, newIndex:number\n    ):void {\n      const Sticker = this.existingSticker(StickerOrNameOrIndex)\n\n      expectInteger('SNS sticker index',newIndex)\n      if (newIndex < 0) { newIndex += this._StickerList.length }\n      newIndex = Math.max(0,Math.min(newIndex,this._StickerList.length-1))\n\n      const oldIndex = this._StickerList.indexOf(Sticker)\n      if (oldIndex === newIndex) { return }\n\n      this._detachStickerAt(oldIndex)\n      this._attachStickerAt(Sticker,newIndex)\n\n      this.rerender()\n    }\n\n  /**** shiftStickersByIndex ****/\n\n    public shiftStickersByIndex (\n      oldIndex:number, newIndex:number, Count:number\n    ):void {\n      const StickerCount = this._StickerList.length\n\n      expectIntegerInRange('old index',oldIndex,0,StickerCount)\n      expectIntegerInRange('new index',newIndex,0,StickerCount)\n\n      const StickersToShift = this._StickerList.slice(oldIndex,oldIndex+Count)\n      StickersToShift.forEach((_:any) => this._detachStickerAt(oldIndex))\n\n      if (newIndex > oldIndex) { newIndex -= Count }\n      StickersToShift.forEach(\n        (Sticker:SNS_Sticker,i:number) => this._attachStickerAt(Sticker,newIndex+i)\n      )\n\n      this.rerender()\n    }\n\n  /**** destroySticker ****/\n\n    public destroySticker (StickerOrNameOrIndex:SNS_Sticker|SNS_Name|number):void {\n      const Sticker = this.Sticker(StickerOrNameOrIndex)\n      if (Sticker == null) {\n        if (ValueIsSticker(StickerOrNameOrIndex)) throwError(\n          'NoSuchSticker: the given sticker could not be found'\n        )\n        return\n      }\n\n      unregisterAllReactiveFunctionsFrom(Sticker as SNS_Sticker)\n\n      const oldIndex = this._StickerList.indexOf(Sticker as SNS_Sticker)\n      this._detachStickerAt(oldIndex)\n\n      unregisterSticker(Sticker)\n// @ts-ignore TS2322 allow _Project to become undefined upon deletion\n      Sticker._Project = undefined     // detaches this sticker from the project\n\n      this._reportChange('destroySticker',Sticker)\n      this.rerender()\n    }\n\n  /**** clear ****/\n\n    public clear ():void {\n      super.clear()                                  // deletes all inner boards\n\n      for (let i = 0, l = this._StickerList.length; i < l; i++) {\n        this.destroySticker(this._StickerList[0])\n      }\n    }\n\n  /**** recursivelyActivateAllScripts ****/\n\n    public recursivelyActivateAllScripts ():void {\n      this.activateScript();\n\n      this._BoardList.forEach(\n        (Board:SNS_Board) => Board.recursivelyActivateAllScripts()\n      )\n\n      this._StickerList.forEach(\n        (Sticker:SNS_Sticker) => Sticker.activateScript()\n      )\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer\n      if (Renderer == null) { return '' }\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this.Project.rerender(this)\n    }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** _attachStickerAt ****/\n\n    /* protected */ _attachStickerAt (Sticker:SNS_Sticker, Index:number):void {\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = this\n      this._StickerList.splice(Index,0, Sticker)\n      this._reportChange('attachSticker', Sticker, this, Index)\n    }\n\n  /**** _detachStickerAt ****/\n\n    /* protected */ _detachStickerAt (Index:number):void {\n      const Sticker = this._StickerList.splice(Index,1)[0]\n// @ts-ignore TS2446 this is a hack, I know\n      Sticker._Folder = undefined\n      this._reportChange('detachSticker', Sticker, this, Index)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n        this._serializeBoardsInto(Result)\n        this._serializeStickersInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeStickersInto ****/\n\n    protected _serializeStickersInto (Serialization:Serializable):void {\n      const StickerList = this._StickerList.slice()\n      if (StickerList.length > 0) {\n        Serialization.StickerList = StickerList.map(\n          (Sticker:SNS_Sticker) => Sticker.Serialization\n        )\n      }\n    }\n\n  /**** _deserializeStickersFrom ****/\n\n    protected _deserializeStickersFrom (Serialization:Serializable):void {\n      const StickerList = this._StickerList\n      if (StickerList.length > 0) { this.clear() }\n\n      if (\n        ValueIsListSatisfying(Serialization.StickerList,ValueIsPlainObject) &&\n        ((Serialization.StickerList as Serializable[]).length > 0)\n      ) {\n        (Serialization.StickerList as Serializable[]).forEach(\n          (StickerSerialization:Serializable, Index:number) => {\n            this.StickerDeserializedAt(StickerSerialization,Index)\n          }\n        )\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               CNS_Sticker                                --\n//------------------------------------------------------------------------------\n\n  const SNS_StickerPropertySet:Indexable = Object.create(null)\n    ;[\n      'Name',\n      'Lock','Selectability','Visibility','Enabling',\n      'minWidth','maxWidth','minHeight','maxHeight',\n      'BackgroundColor','BackgroundTexture',\n      'FontFamily','FontSize','FontWeight','FontStyle','LineHeight',\n      'ForegroundColor',\n      'memoized','Value','activeScript','pendingScript',\n    ].forEach((Property:string) => SNS_StickerPropertySet[Property] = true)\n\n  export class SNS_Sticker extends SNS_Visual {\n    /* protected */ constructor (Project:SNS_Project, Id:SNS_Id|undefined) {\n      super(Project, Id)\n      registerSticker(Project,this)\n\n      Project._reportChange('createSticker', this)\n    }\n\n  /**** Board ****/\n\n    public get Board ():SNS_Board  { return this._Folder as SNS_Board }\n    public set Board (_:SNS_Board) { throwReadOnlyError('Board') }\n\n  /**** BackgroundColor ****/\n\n    public get BackgroundColor ():SNS_Color|undefined {\n      return this._BackgroundColor\n    }\n\n    public set BackgroundColor (newColor:SNS_Color|undefined) {\n      allowColor('sticker background color',newColor)\n      if (this._BackgroundColor !== newColor) {\n        this._BackgroundColor = newColor\n\n        this._reportChange('configure',this,'BackgroundColor',newColor)\n        this.rerender()\n      }\n    }\n\n  /**** BackgroundTexture ****/\n\n    public get BackgroundTexture ():SNS_URL|undefined {\n      return this._BackgroundTexture\n    }\n\n    public set BackgroundTexture (newTexture:SNS_URL|undefined) {\n      allowURL('sticker background texture',newTexture)\n      if (this._BackgroundTexture !== newTexture) {\n        this._BackgroundTexture = newTexture\n\n        this._reportChange('configure',this,'BackgroundTexture',newTexture)\n        this.rerender()\n      }\n    }\n\n  /**** Index ****/\n\n    public get Index ():number  { return (this._Folder as SNS_Board).IndexOfSticker(this) }\n    public set Index (_:number) { throwReadOnlyError('Index') }\n\n  /**** mayBeShiftedUp ****/\n\n    public get mayBeShiftedUp ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerUp(this) }\n    public set mayBeShiftedUp (_:boolean) { throwReadOnlyError('mayBeShiftedUp') }\n\n  /**** mayBeShiftedDown ****/\n\n    public get mayBeShiftedDown ():boolean  { return (this._Folder as SNS_Board).mayShiftStickerDown(this) }\n    public set mayBeShiftedDown (_:boolean) { throwReadOnlyError('mayBeShiftedDown') }\n\n  /**** minWidth ****/\n\n    protected _minWidth:SNS_Dimension|undefined = undefined\n\n    public get minWidth ():SNS_Dimension {\n      return (this._minWidth == null ? defaultMinWidth : this._minWidth)\n    }\n    public set minWidth (newMinWidth:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker width',newMinWidth)\n      if (this._minWidth !== newMinWidth) {\n        this._minWidth = newMinWidth\n        this._reportChange('configure',this,'minWidth',newMinWidth)\n\n        if (\n          (this._minWidth != null) && (this._maxWidth != null) &&\n          (this._maxWidth < this._minWidth)\n        ) {\n          this._maxWidth = newMinWidth\n          this._reportChange('configure',this,'maxWidth',this._minWidth)\n        }\n\n        if ((this._minWidth != null) && (this._Geometry.Width < this._minWidth)) {\n          this.Width = this._minWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxWidth ****/\n\n    protected _maxWidth:SNS_Dimension|undefined = defaultMaxWidth\n\n    public get maxWidth ():SNS_Dimension|undefined  { return this._maxWidth }\n    public set maxWidth (newMaxWidth:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker width',newMaxWidth)\n      if ((newMaxWidth != null) && (this._minWidth != null)) {\n        newMaxWidth = Math.max(this._minWidth,newMaxWidth)\n      }\n\n      if (this._maxWidth !== newMaxWidth) {\n        this._maxWidth = newMaxWidth\n        this._reportChange('configure',this,'maxWidth',this._maxWidth)\n\n        if ((this._maxWidth != null) && (this._Geometry.Width > this._maxWidth)) {\n          this.Width = this._maxWidth\n        }\n        this.rerender()\n      }\n    }\n\n  /**** minHeight ****/\n\n    protected _minHeight:SNS_Dimension|undefined = undefined\n\n    public get minHeight ():SNS_Dimension  {\n      return (this._minHeight == null ? defaultMinHeight : this._minHeight)\n    }\n    public set minHeight (newMinHeight:SNS_Dimension|undefined) {\n      allowDimension('minimal sticker height',newMinHeight)\n      if (this._minHeight !== newMinHeight) {\n        this._minHeight = newMinHeight\n        this._reportChange('configure',this,'minHeight',newMinHeight)\n\n        if (\n          (this._minHeight != null) && (this._maxHeight != null) &&\n          (this._maxHeight < this._minHeight)\n        ) {\n          this._maxHeight = newMinHeight\n          this._reportChange('configure',this,'maxHeight',this._minHeight)\n        }\n\n        if ((this._minHeight != null) && (this._Geometry.Height < this._minHeight)) {\n          this.Height = this._minHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** maxHeight ****/\n\n    protected _maxHeight:SNS_Dimension|undefined = defaultMaxHeight\n\n    public get maxHeight ():SNS_Dimension|undefined  { return this._maxHeight }\n    public set maxHeight (newMaxHeight:SNS_Dimension|undefined) {\n      allowDimension('maximal sticker height',newMaxHeight)\n      if ((newMaxHeight != null) && (this._minHeight != null)) {\n        newMaxHeight = Math.max(this._minHeight,newMaxHeight)\n      }\n\n      if (this._maxHeight !== newMaxHeight) {\n        this._maxHeight = newMaxHeight\n        this._reportChange('configure',this,'maxHeight',this._maxHeight)\n\n        if ((this._maxHeight != null) && (this._Geometry.Height > this._maxHeight)) {\n          this.Height = this._maxHeight\n        }\n        this.rerender()\n      }\n    }\n\n  /**** x ****/\n\n    public get x ():SNS_Location { return this._Geometry.x }\n    public set x (newX:SNS_Location) {\n      expectLocation('sticker x coordinate',newX)\n      this.Geometry = { ...this.Geometry, x:newX }\n    }\n\n  /**** y ****/\n\n    public get y ():SNS_Location { return this._Geometry.y }\n    public set y (newY:SNS_Location) {\n      expectLocation('sticker y coordinate',newY)\n      this.Geometry = { ...this.Geometry, y:newY }\n    }\n\n  /**** Width ****/\n\n    public get Width ():SNS_Dimension { return this._Geometry.Width }\n    public set Width (newWidth:SNS_Dimension) {\n      expectDimension('sticker width',newWidth)\n      this.Geometry = { ...this.Geometry, Width:newWidth }\n    }\n\n  /**** Height ****/\n\n    public get Height ():SNS_Dimension { return this._Geometry.Height }\n    public set Height (newHeight:SNS_Dimension) {\n      expectDimension('sticker height',newHeight)\n      this.Geometry = { ...this.Geometry, Height:newHeight }\n    }\n\n  /**** Position ****/\n\n    public get Position ():SNS_Position {\n      return { x:this._Geometry.x, y:this._Geometry.y }\n    }\n\n    public set Position (newPosition:SNS_Position) {\n      expectPosition('visual position',newPosition)\n      this.Geometry = { ...this.Geometry, x:newPosition.x, y:newPosition.y }\n    }\n\n  /**** Size ****/\n\n    public get Size ():SNS_Size {\n      return { Width:this._Geometry.Width, Height:this._Geometry.Height }\n    }\n\n    public set Size (newSize:SNS_Size) {\n      expectSize('visual size',newSize)\n      this.Geometry = { ...this.Geometry, Width:newSize.Width, Height:newSize.Height }\n    }\n\n  /**** Geometry ****/\n\n    protected _Geometry:SNS_Geometry = { ...defaultStickerGeometry }\n\n    public get Geometry ():SNS_Geometry {\n      let { x,y, Width,Height } = this._Geometry\n        if (this._minWidth != null) { Width = Math.max(this._minWidth,Width) }\n        if (this._maxWidth != null) { Width = Math.min(Width,this._maxWidth) }\n\n        if (this._minHeight != null) { Height = Math.max(this._minHeight,Height) }\n        if (this._maxHeight != null) { Height = Math.min(Height,this._maxHeight) }\n      return { x,y, Width,Height }\n    }\n\n    public set Geometry (newGeometry:SNS_Geometry) {\n      expectGeometry('visual geometry',newGeometry)\n\n      let { x,y, Width,Height } = this._Geometry\n      if (\n        (x !== newGeometry.x) || (Width  !== newGeometry.Width) ||\n        (y !== newGeometry.y) || (Height !== newGeometry.Height)\n      ) {\n        this._Geometry = { ...newGeometry }\n\n        this._reportChange('configure',this,'Geometry',{ ...newGeometry })\n        this.rerender()\n      }\n    }\n\n  /**** Lock ****/\n\n    protected _Lock:boolean = false\n\n    public get Lock ():boolean { return this._Lock }\n    public set Lock (newLock:boolean) {\n      expectBoolean('sticker lock',newLock)\n      if (this._Lock !== newLock) {\n        this._Lock = newLock\n\n        this._reportChange('configure',this,'Lock',newLock)\n        this.rerender()\n      }\n    }\n\n  /**** lock/unlock ****/\n\n    public lock ():void   { this.Lock = true }\n    public unlock ():void { this.Lock = false }\n\n  /**** isLocked ****/\n\n    public get isLocked ():boolean        { return this._Lock }\n    public set isLocked (newLock:boolean) { this.Lock = newLock }\n\n  /**** Lock ****/\n\n    protected _Selectability:boolean = false\n\n    public get Selectability ():boolean { return this._Selectability }\n    public set Selectability (newSelectability:boolean) {\n      expectBoolean('sticker selectability',newSelectability)\n      if (this._Selectability !== newSelectability) {\n        this._Selectability = newSelectability\n\n        this._reportChange('configure',this,'Selectability',newSelectability)\n        this.rerender()\n      }\n    }\n\n  /**** isSelectable ****/\n\n    public get isSelectable ():boolean                 { return this._Selectability }\n    public set isSelectable (newSelectability:boolean) { this.Selectability = newSelectability }\n\n  /**** Visibility ****/\n\n    protected _Visibility:boolean = true\n\n    public get Visibility ():boolean { return this._Visibility }\n    public set Visibility (newVisibility:boolean) {\n      expectBoolean('sticker visibility',newVisibility)\n      if (this._Visibility !== newVisibility) {\n        this._Visibility = newVisibility\n\n        this._reportChange('configure',this,'Visibility',newVisibility)\n        this.rerender()\n      }\n    }\n\n  /**** show/hide ****/\n\n    public show ():void { this.Visibility = true }\n    public hide ():void { this.Visibility = false }\n\n  /**** isVisible ****/\n\n    public get isVisible ():boolean              { return this._Visibility }\n    public set isVisible (newVisibility:boolean) { this.Visibility = newVisibility }\n\n  /**** Enabling ****/\n\n    protected _Enabling:boolean = true\n\n    public get Enabling ():boolean { return this._Enabling }\n    public set Enabling (newEnabling:boolean) {\n      expectBoolean('sticker enabling',newEnabling)\n      if (this._Enabling !== newEnabling) {\n        this._Enabling = newEnabling\n\n        this._reportChange('configure',this,'Enabling',newEnabling)\n        this.rerender()\n      }\n    }\n\n  /**** enable/disable ****/\n\n    public enable ():void  { this.Enabling = true }\n    public disable ():void { this.Enabling = false }\n\n  /**** isEnabled ****/\n\n    public get isEnabled ():boolean            { return this._Enabling }\n    public set isEnabled (newEnabling:boolean) { this.Enabling = newEnabling }\n\n  /**** onClick ****/\n\n    protected _onClick:Function|undefined\n\n    public onClick (newHandler:Function):void {\n      expectFunction('\"click\" event handler',newHandler)\n      this._onClick = newHandler\n    }\n\n  /**** onInput ****/\n\n    protected _onInput:Function|undefined\n\n    public onInput (newHandler:Function):void {\n      expectFunction('\"input\" event handler',newHandler)\n      this._onInput = newHandler\n    }\n\n  /**** onDrop ****/\n\n    protected _onDrop:Function|undefined\n\n    public onDrop (newHandler:Function):void {\n      expectFunction('\"drop\" event handler',newHandler)\n      this._onDrop = newHandler\n    }\n\n  /**** Rendering ****/\n\n    public Rendering (PropSet:Indexable):any {\n      if (this.hasError) {\n        return ErrorRenderer.call(this)\n      }\n\n      let Renderer = this._Renderer || DefaultRenderer\n\n      try {\n        return Renderer.call(this,PropSet)\n      } catch (Signal:any) {\n        this.Error = {\n          Type:'Rendering Failure',\n          Message:''+Signal, Cause:Signal\n        }\n        return ErrorRenderer.call(this)\n      }\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      this._Project.rerender((this._Folder as SNS_Board), this)\n    }\n\n  /**** Serialization ****/\n\n    public get Serialization ():Serializable {\n      const Result:Serializable = {}\n        this._serializeConfigurationInto(Result)\n      return Result\n    }\n    public set Serialization (_:Serializable) { throwReadOnlyError('Serialization') }\n\n  /**** _serializeConfigurationInto ****/\n\n    protected _serializeConfigurationInto (Serialization:Serializable):void {\n      super._serializeConfigurationInto(Serialization)\n\n      Serialization.Geometry = { ...this._Geometry }\n\n      if (this._minWidth  != null) { Serialization.minWidth  = this._minWidth }\n      if (this._maxWidth  != null) { Serialization.maxWidth  = this._maxWidth }\n      if (this._minHeight != null) { Serialization.minHeight = this._minHeight }\n      if (this._maxHeight != null) { Serialization.maxHeight = this._maxHeight }\n\n      if (this.isSelectable) { Serialization.Selectability = true }\n      if (this.isLocked)     { Serialization.Lock          = true }\n      if (! this.isVisible)  { Serialization.Visibility    = false }\n      if (! this.isEnabled)  { Serialization.Enabling      = false }\n    }\n\n  /**** _deserializeConfigurationFrom ****/\n\n    protected _deserializeConfigurationFrom (Serialization:Serializable):void {\n      super._deserializeConfigurationFrom(Serialization)\n\n      let { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry || defaultStickerGeometry\n        if (! ValueIsLocation(x)) { x = defaultStickerGeometry.x }\n        if (! ValueIsLocation(y)) { y = defaultStickerGeometry.y }\n        if (! ValueIsDimension(Width))  { Width  = defaultStickerGeometry.Width  }\n        if (! ValueIsDimension(Height)) { Height = defaultStickerGeometry.Height }\n// @ts-ignore TS2322 \"x\",\"y\",\"Width\" and \"Height\" will never be \"null\"\n      this.Geometry = { x,y, Width,Height }\n\n      if (Serialization.Selectability === true)  { this.Selectability = true }\n      if (Serialization.Lock          === true)  { this.Lock          = true }\n      if (Serialization.Visibility    === false) { this.Visibility    = false }\n      if (Serialization.Enabling      === false) { this.Enabling      = false }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                               SNS_Adapter                                --\n//------------------------------------------------------------------------------\n\n  export const SNS_ConnectionStates = ['not-ready','disconnected','connecting','connected']\n  export type  SNS_ConnectionState  = typeof SNS_ConnectionStates[number]\n\n  export abstract class SNS_Adapter {\n    public abstract ConnectionState:SNS_ConnectionState\n    public abstract isConnected:boolean\n\n    public abstract connect ():void\n    public abstract disconnect ():void\n  }\n\n// @ts-ignore TS2339 allow global variable \"SNS\"\n  window.SNS = {\n    SNS_FontStyles, SNS_ErrorTypes,\n    throwError, throwReadOnlyError,\n    ValueIsVisual, allowVisual, allowedVisual, expectVisual, expectedVisual,\n    ValueIsFolder, allowFolder, allowedFolder, expectFolder, expectedFolder,\n    ValueIsProject, allowProject, allowedProject, expectProject, expectedProject,\n    ValueIsBoard, allowBoard, allowedBoard, expectBoard, expectedBoard,\n    ValueIsSticker, allowSticker, allowedSticker, expectSticker, expectedSticker,\n    ValueIsId, allowId, allowedId, expectId, expectedId,\n    ValueIsIdentifier, allowIdentifier, allowedIdentifier, expectIdentifier, expectedIdentifier,\n    ValueIsName, allowName, allowedName, expectName, expectedName,\n    ValueIsLocation, allowLocation, allowedLocation, expectLocation, expectedLocation,\n    ValueIsDimension, allowDimension, allowedDimension, expectDimension, expectedDimension,\n    ValueIsPosition, allowPosition, allowedPosition, expectPosition, expectedPosition,\n    ValueIsSize, allowSize, allowedSize, expectSize, expectedSize,\n    ValueIsGeometry, allowGeometry, allowedGeometry, expectGeometry, expectedGeometry,\n    ValueIsError, allowError, allowedError, expectError, expectedError,\n    ValueIsSerializable, allowSerializable, allowedSerializable, expectSerializable, expectedSerializable,\n    acceptableBoolean, acceptableOptionalBoolean,\n    acceptableNumber, acceptableOptionalNumber,\n    acceptableNumberInRange, acceptableOptionalNumberInRange,\n    acceptableInteger, acceptableOptionalInteger,\n    acceptableIntegerInRange, acceptableOptionalIntegerInRange,\n    acceptableOrdinal, acceptableOptionalOrdinal,\n    acceptableString, acceptableOptionalString,\n    acceptableNonEmptyString, acceptableOptionalNonEmptyString,\n    acceptableStringMatching, acceptableOptionalStringMatching,\n    acceptableText, acceptableOptionalText,\n    acceptableTextline, acceptableOptionalTextline,\n    acceptableFunction, acceptableOptionalFunction,\n    acceptableList, acceptableOptionalList,\n    acceptableListSatisfying, acceptableOptionalListSatisfying,\n    acceptableColor, acceptableOptionalColor,\n    acceptableEMailAddress, acceptablePhoneNumber, acceptableURL,\n    newId,\n    CSSStyleOfVisual,\n    SNS_ConnectionStates\n  }\nconsole.log('SNS is globally available now')\n\n  document.dispatchEvent(\n// @ts-ignore TS2339 allow global variable \"SNS\"\n    new CustomEvent('SNS',{ detail:window.SNS })\n  )\n"],"names":["ValueIsPhoneNumber","ValueIsTextline","observe","hyperactiv","computed","dispose","BehaviorStyleElement","document","createElement","innerHTML","head","appendChild","SNS_FontStyles","SNS_ErrorTypes","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","ValueIsVisual","Value","SNS_Visual","allowVisual","ValidatorForClassifier","acceptNil","allowedVisual","expectVisual","rejectNil","expectedVisual","ValueIsFolder","SNS_Folder","allowFolder","allowedFolder","expectFolder","expectedFolder","ValueIsProject","SNS_Project","allowProject","allowedProject","expectProject","expectedProject","ValueIsBoard","SNS_Board","allowBoard","allowedBoard","expectBoard","expectedBoard","ValueIsSticker","SNS_Sticker","allowSticker","allowedSticker","expectSticker","expectedSticker","ValueIsId","allowId","allowedId","expectId","expectedId","SNS_IdentifierPattern","ValueIsIdentifier","ValueIsStringMatching","allowIdentifier","allowedIdentifier","expectIdentifier","expectedIdentifier","ValueIsName","allowName","allowedName","expectName","expectedName","ValueIsLocation","ValueIsFiniteNumber","allowLocation","allowedLocation","expectLocation","expectedLocation","ValueIsDimension","allowDimension","allowedDimension","expectDimension","expectedDimension","ValueIsPosition","ValueIsObject","x","y","allowPosition","allowedPosition","expectPosition","expectedPosition","ValueIsSize","Width","Height","allowSize","allowedSize","expectSize","expectedSize","ValueIsGeometry","allowGeometry","allowedGeometry","expectGeometry","expectedGeometry","ValueIsError","ValueIsPlainObject","ValueIsOneOf","Type","ValueIsText","allowError","allowedError","expectError","expectedError","ValueIsSerializable","allowSerializable","allowedSerializable","expectSerializable","expectedSerializable","sanitizeBoardList","Project","Folder","Board","Index","allowOrdinal","BoardSet","Set","BoardList","i","length","BoardFromList","has","_detachBoardAt","add","sanitizeStickerList","Sticker","StickerSet","StickerList","StickerFromList","_detachStickerAt","defaultStickerGeometry","acceptableBoolean","Default","ValueIsBoolean","acceptableOptionalBoolean","undefined","acceptableNumber","ValueIsNumber","acceptableOptionalNumber","acceptableNumberInRange","minValue","maxValue","withMin","withMax","Infinity","ValueIsNumberInRange","acceptableOptionalNumberInRange","acceptableInteger","ValueIsInteger","acceptableOptionalInteger","acceptableIntegerInRange","ValueIsIntegerInRange","acceptableOptionalIntegerInRange","acceptableOrdinal","ValueIsOrdinal","acceptableOptionalOrdinal","acceptableString","ValueIsString","acceptableOptionalString","acceptableNonEmptyString","trim","acceptableOptionalNonEmptyString","acceptableStringMatching","Pattern","acceptableOptionalStringMatching","noCtrlCharsButCRLFTABPattern","acceptableText","acceptableOptionalText","acceptableTextline","replace","acceptableOptionalTextline","Result","acceptableFunction","ValueIsFunction","acceptableOptionalFunction","acceptableList","ValueIsList","acceptableOptionalList","acceptableListSatisfying","Matcher","ValueIsListSatisfying","acceptableOptionalListSatisfying","acceptableColor","ValueIsColor","acceptableOptionalColor","acceptableEMailAddress","ValueIsEMailAddress","acceptablePhoneNumber","acceptableURL","ValueIsURL","DefaultRenderer","html","_templateObject","_taggedTemplateLiteralLoose","CSSStyleOfVisual","this","ErrorRenderer","_this","call","_templateObject2","showError","newId","customAlphabet","nolookalikesSafe","FolderRegistryForProject","WeakMap","unregisterFolder","FolderRegistry","get","Id","FolderWithId","StickerRegistryForProject","unregisterSticker","StickerRegistry","removeIdsFrom","Serialization","forEach","reactiveFunctionsForVisual","registerReactiveFunctionIn","Visual","reactiveFunction","reactiveFunctions","set","push","unregisterAllReactiveFunctionsFrom","groupedBehaviorRegistry","Object","create","BehaviorRegistry","TemplateRegistry","registerBehavior","GroupLabel","BehaviorLabel","BehaviorName","Template","BehaviorFunction","BehaviorStyle","expectTextline","allowPlainObject","allowFunction","normalizedGroupName","toLowerCase","normalizedBehaviorName","normalizedTemplate","_extends","activeScript","BehaviorSetGroup","BehaviorSet","Label","Executable","indexOf","useBehavior","_this2","onRender","bind","onMount","onUnmount","expectFunction","Geometry","me","my","reactively","_templateObject3","Selectability","minWidth","minHeight","Renderer","PropSet","builtinSelection","builtinDragging","_templateObject4","Event","key","stopPropagation","preventDefault","Editor","target","value","selectionStart","selectionEnd","slice","_my$Geometry","_templateObject5","_templateObject6","_templateObject7","CSSStyle","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","__html","_templateObject13","DataURL","btoa","_templateObject14","_templateObject15","ForegroundColor","BackgroundColor","BorderRadius","Math","round","min","_templateObject16","onClick","Enabling","_onClick","Color","_templateObject17","_templateObject18","_templateObject19","consumingEvent","_templateObject20","LineHeight","checked","indeterminate","_templateObject21","_templateObject22","parseFloat","Minimum","lowerBound","Optimum","upperBound","Maximum","_templateObject23","_templateObject24","HashmarkPattern","HashmarkMatcher","onInput","ValueToShow","_onInput","onBlur","rerender","Stepping","Hashmarks","activeElement","View","HashmarkId","HashmarkList","_templateObject25","map","Item","_templateObject26","_templateObject27","Placeholder","readonly","minLength","maxLength","SpellChecking","Suggestions","SuggestionId","SuggestionList","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","_templateObject43","TimeRegExp","TimeMatcher","_templateObject44","_templateObject45","_templateObject46","DateTimeRegExp","DateTimeMatcher","_templateObject47","_templateObject48","_templateObject49","DateRegExp","DateMatcher","_templateObject50","_templateObject51","_templateObject52","WeekRegExp","WeekMatcher","_templateObject53","_templateObject54","_templateObject55","MonthRegExp","MonthMatcher","CSSStyleList","BackgroundTexture","FontFamily","FontSize","FontWeight","FontStyle","join","consumeEvent","_templateObject56","_templateObject57","_templateObject58","Array","from","files","File","onDragEnter","onDragOver","onDrop","dataTransfer","_onDrop","acceptableTypes","multiple","_templateObject59","_templateObject60","_templateObject61","Icon","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","Options","_templateObject70","Option","OptionValue","OptionLabel","disabled","test","_templateObject71","_templateObject72","_templateObject73","LineWrapping","_templateObject74","_my$Geometry2","_templateObject75","_my$Geometry3","_templateObject76","_my$Geometry4","_templateObject77","_my$Geometry5","_templateObject78","_my$Geometry6","_templateObject79","_my$Geometry7","_templateObject80","_my$Geometry8","_templateObject81","_my$Geometry9","_templateObject82","_my$Geometry10","_templateObject83","_my$Geometry11","_templateObject84","_my$Geometry12","_templateObject85","_my$Geometry13","_templateObject86","_my$Geometry14","_templateObject87","_my$Geometry15","_templateObject88","_my$Geometry16","_templateObject89","_my$Geometry17","_templateObject90","Canvas","unobserved","Placement","drawLine","x0","y0","x1","y1","Text","Context","beginPath","moveTo","lineTo","stroke","fillText","width","height","getContext","clearRect","strokeStyle","lineWidth","textAlign","textBaseline","CorrectionLevelSet","low","QRCode","CorrectLevel","L","medium","M","quartile","Q","high","H","CorrectionLevel","String","Size","text","colorDark","colorLight","correctLevel","propagateEvent","_Id","_Name","_Project","_Folder","_BackgroundColor","_BackgroundTexture","_FontFamily","_FontSize","_FontWeight","_FontStyle","_LineHeight","_ForegroundColor","_Value","_observed","_unobserved","_memoized","_activeScript","_pendingScript","_ScriptError","_Renderer","_View","_onMount","_onUnmount","_Error","_proto","prototype","activateScript","_this3","compiledScript","Function","Signal","console","error","Cause","newRenderer","Rendering","hasError","newCallback","_this4","_this5","_reportChange","Change","_this$_Project","apply","concat","arguments","_serializeConfigurationInto","_this6","serializeProperty","_deserializeConfigurationFrom","_this7","deserializeProperty","warn","memoized","assign","_createClass","_","newName","isAttached","newColor","allowColor","newTexture","allowURL","newFontFamily","allowTextline","newFontSize","newFontWeight","allowIntegerInRange","newFontStyle","allowOneOf","newLineHeight","newForegroundColor","newValue","ValuesDiffer","deep","newScript","allowText","newScriptError","newError","_SNS_Visual2","_this8","_SnapToGrid","_GridWidth","_GridHeight","_BoardList","_inheritsLoose","_proto2","BoardAtPath","Path","startsWith","splitPath","split","Element","parseInt","l","BoardAt","BoardNamed","containsFolder","IndexOfBoard","BoardOrNameOrIndex","expectValue","existingBoard","expectInteger","hasBoard","newBoardAt","BoardDeserializedAt","allowInteger","max","newBoard","_attachBoardAt","_deserializeStickersFrom","_deserializeBoardsFrom","DuplicateOfBoardAt","mayShiftBoardUp","mayShiftBoardDown","BoardIndex","shiftBoardToTop","oldIndex","shiftBoardUp","shiftBoardDown","shiftBoardToBottom","shiftBoardTo","newIndex","shiftBoardsByIndex","Count","_this9","BoardCount","expectIntegerInRange","BoardsToShift","mayShiftBoardIn","mayShiftBoardOut","shiftBoardIn","newFolder","shiftBoardOut","mayMoveBoardTo","FolderOrNameOrIndex","moveBoardTo","destroyBoard","clear","splice","_this10","_this11","_serializeBoardsInto","_this12","BoardSerialization","outerFolder","outerPath","IndexPath","SnapToGrid","newSetting","allowBoolean","GridWidth","newWidth","allowCardinal","GridHeight","newHeight","SNS_ProjectPropertySet","Property","_SNS_Folder2","_this13","_onChange","_onRendering","_onError","_proto3","BoardAtIndexPath","expectListSatisfying","BoardWithId","StickerWithId","recursivelyActivateAllScripts","onChange","Callback","_this14","ArgList","unshift","onRendering","_this15","onError","_this16","deserializedFrom","SNS_BoardPropertySet","_SNS_Folder3","_this17","_StickerList","registerFolder","_proto4","IndexOfSticker","StickerOrNameOrIndex","StickerNamed","existingSticker","StickerAt","hasSticker","newStickerAt","StickerDeserializedAt","newSticker","_attachStickerAt","DuplicateOfStickerAt","mayShiftStickerUp","mayShiftStickerDown","StickerIndex","shiftStickerToTop","shiftStickerUp","shiftStickerDown","shiftStickerToBottom","shiftStickerTo","shiftStickersByIndex","_this18","StickerCount","StickersToShift","destroySticker","newHandler","_serializeStickersInto","_this19","StickerSerialization","SNS_StickerPropertySet","_SNS_Visual3","_this20","_minWidth","_maxWidth","_minHeight","_maxHeight","_Geometry","_Lock","_Selectability","_Visibility","_Enabling","registerSticker","_proto5","lock","Lock","unlock","show","Visibility","hide","enable","disable","maxWidth","maxHeight","isSelectable","isLocked","isVisible","isEnabled","_ref","newMinWidth","newMaxWidth","newMinHeight","newMaxHeight","newX","newY","newPosition","newSize","_this$_Geometry","newGeometry","_this$_Geometry2","newLock","expectBoolean","newSelectability","newVisibility","newEnabling","SNS_ConnectionStates","window","SNS","log","dispatchEvent","CustomEvent","detail","BoardId","FolderId","expectOrdinal","oldFolder","setTimeout","StickerId","oldBoard","BehaviorEntriesIn","BehaviorGroup","BehaviorEntryList"],"mappings":"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"}